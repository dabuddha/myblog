{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/favicon.ico","path":"favicon.ico","modified":1,"renderable":0},{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":1,"renderable":1},{"_id":"themes/next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/avatar.jpeg","path":"images/avatar.jpeg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/loading.gif","path":"images/loading.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/placeholder.gif","path":"images/placeholder.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/searchicon.png","path":"images/searchicon.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/avatar.png","path":"images/avatar.png","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/bootstrap.js","path":"js/src/bootstrap.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/affix.js","path":"js/src/affix.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/hao-algolia.js","path":"js/src/hao-algolia.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/hook-duoshuo.js","path":"js/src/hook-duoshuo.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/motion.js","path":"js/src/motion.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/post-details.js","path":"js/src/post-details.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/scrollspy.js","path":"js/src/scrollspy.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/utils.js","path":"js/src/utils.js","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/HELP-US-OUT.txt","path":"vendors/font-awesome/HELP-US-OUT.txt","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/bower.json","path":"vendors/font-awesome/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/fastclick/LICENSE","path":"vendors/fastclick/LICENSE","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/fastclick/README.md","path":"vendors/fastclick/README.md","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/fastclick/bower.json","path":"vendors/fastclick/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/jquery_lazyload/README.md","path":"vendors/jquery_lazyload/README.md","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/jquery_lazyload/CONTRIBUTING.md","path":"vendors/jquery_lazyload/CONTRIBUTING.md","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/jquery_lazyload/bower.json","path":"vendors/jquery_lazyload/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/jquery_lazyload/jquery.lazyload.js","path":"vendors/jquery_lazyload/jquery.lazyload.js","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/jquery_lazyload/jquery.scrollstop.js","path":"vendors/jquery_lazyload/jquery.scrollstop.js","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/velocity/bower.json","path":"vendors/velocity/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/velocity/velocity.min.js","path":"vendors/velocity/velocity.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/velocity/velocity.ui.js","path":"vendors/velocity/velocity.ui.js","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/velocity/velocity.ui.min.js","path":"vendors/velocity/velocity.ui.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/jquery/index.js","path":"vendors/jquery/index.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/schemes/pisces.js","path":"js/src/schemes/pisces.js","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/blank.gif","path":"vendors/fancybox/source/blank.gif","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_loading.gif","path":"vendors/fancybox/source/fancybox_loading.gif","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_loading@2x.gif","path":"vendors/fancybox/source/fancybox_loading@2x.gif","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_overlay.png","path":"vendors/fancybox/source/fancybox_overlay.png","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_sprite.png","path":"vendors/fancybox/source/fancybox_sprite.png","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_sprite@2x.png","path":"vendors/fancybox/source/fancybox_sprite@2x.png","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/jquery.fancybox.css","path":"vendors/fancybox/source/jquery.fancybox.css","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/jquery.fancybox.js","path":"vendors/fancybox/source/jquery.fancybox.js","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/jquery.fancybox.pack.js","path":"vendors/fancybox/source/jquery.fancybox.pack.js","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/css/font-awesome.css","path":"vendors/font-awesome/css/font-awesome.css","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/css/font-awesome.css.map","path":"vendors/font-awesome/css/font-awesome.css.map","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/css/font-awesome.min.css","path":"vendors/font-awesome/css/font-awesome.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/fastclick/lib/fastclick.min.js","path":"vendors/fastclick/lib/fastclick.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.woff2","path":"vendors/font-awesome/fonts/fontawesome-webfont.woff2","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/fastclick/lib/fastclick.js","path":"vendors/fastclick/lib/fastclick.js","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/ua-parser-js/dist/ua-parser.min.js","path":"vendors/ua-parser-js/dist/ua-parser.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/ua-parser-js/dist/ua-parser.pack.js","path":"vendors/ua-parser-js/dist/ua-parser.pack.js","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/fonts/FontAwesome.otf","path":"vendors/font-awesome/fonts/FontAwesome.otf","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.eot","path":"vendors/font-awesome/fonts/fontawesome-webfont.eot","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.woff","path":"vendors/font-awesome/fonts/fontawesome-webfont.woff","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/velocity/velocity.js","path":"vendors/velocity/velocity.js","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/helpers/fancybox_buttons.png","path":"vendors/fancybox/source/helpers/fancybox_buttons.png","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-buttons.css","path":"vendors/fancybox/source/helpers/jquery.fancybox-buttons.css","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-buttons.js","path":"vendors/fancybox/source/helpers/jquery.fancybox-buttons.js","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-media.js","path":"vendors/fancybox/source/helpers/jquery.fancybox-media.js","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-thumbs.css","path":"vendors/fancybox/source/helpers/jquery.fancybox-thumbs.css","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-thumbs.js","path":"vendors/fancybox/source/helpers/jquery.fancybox-thumbs.js","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.ttf","path":"vendors/font-awesome/fonts/fontawesome-webfont.ttf","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.svg","path":"vendors/font-awesome/fonts/fontawesome-webfont.svg","modified":1,"renderable":1}],"Cache":[{"_id":"source/.DS_Store","hash":"9b092e86b06bf7c7d20422d929cc7d4eee293147","modified":1465139659000},{"_id":"themes/next/.bowerrc","hash":"80e096fdc1cf912ee85dd9f7e6e77fd40cf60f10","modified":1463548496000},{"_id":"themes/next/.editorconfig","hash":"792fd2bd8174ece1a75d5fd24ab16594886f3a7f","modified":1463548496000},{"_id":"themes/next/.hound.yml","hash":"b76daa84c9ca3ad292c78412603370a367cc2bc3","modified":1463548496000},{"_id":"themes/next/.javascript_ignore","hash":"d619ee13031908cd72666e4ff652d2ea3483b1c3","modified":1463548496000},{"_id":"themes/next/.jshintrc","hash":"9928f81bd822f6a8d67fdbc909b517178533bca9","modified":1463548496000},{"_id":"themes/next/README.en.md","hash":"565ba52b3825b85a9f05b41183caca7f18b741d4","modified":1463548496000},{"_id":"themes/next/README.md","hash":"500b5606eb6a09c979d16128f8b00f4bf9bc95ac","modified":1463548496000},{"_id":"themes/next/_config.yml","hash":"dcfa85112e5cbece49c3c90f3a99304ddfbf09bf","modified":1465278784000},{"_id":"themes/next/bower.json","hash":"f89c6700a11d81e067cc97273ca6bf96cb88c8f9","modified":1463548496000},{"_id":"themes/next/gulpfile.coffee","hash":"26e5b1b945704c8bc78b928feede895c4c111c95","modified":1463548496000},{"_id":"themes/next/package.json","hash":"63e9c0f1dd9e5d7f51b4ae383981ef939a2ed45d","modified":1463548496000},{"_id":"source/favicon.ico","hash":"e6ee5fa3fb1a60f158c57c0e012acdb216f6b365","modified":1465139618000},{"_id":"source/_posts/.DS_Store","hash":"95049223f8e587456028dd8d00dfa5da75c2b704","modified":1464710293000},{"_id":"source/_posts/MAC批量处理图片.md","hash":"13fc8f10e3e4f99395dd363a1bf71f76d932c0a4","modified":1465137986000},{"_id":"source/_posts/array-remove-duplicates.md","hash":"5e72c4794eac242ca6291e79cece5da9d28d04fb","modified":1465140897000},{"_id":"source/_posts/electron-install.md","hash":"376831ca611974998cf6f0dd193aafb099fc01ba","modified":1470925677000},{"_id":"source/_posts/github-star-collection.md","hash":"8b1b6e16ca6d9dd82954df3f4b2266e543bc73de","modified":1467546829000},{"_id":"source/_posts/git-hooks.md","hash":"86d8d1a2f966f7629e70fd359066eaf29c9983de","modified":1465137968000},{"_id":"source/_posts/hexo-next-use-algolia.md","hash":"7b2b656e9ffc4af3f088d618045e9e99b4958f17","modified":1467262195000},{"_id":"source/_posts/js-bind-callback.md","hash":"243e51db46e3b15d6f6e747f2a0f9e4f5e02b488","modified":1468140844000},{"_id":"source/_posts/medium-css-note.md","hash":"40349fc779976e9018797d9ae3df7c11f0a1c914","modified":1471249877000},{"_id":"source/_posts/responsive-equal-height.md","hash":"c1bf86ed384fcfcd55e0487996f1e27984c404b2","modified":1468227786000},{"_id":"source/_posts/safari-jquery-on-click-bug.md","hash":"e3372787770ba34b2c87138ac1474ab6e04fba4f","modified":1465226894000},{"_id":"source/_posts/vagrant-problems.md","hash":"d252f2ec52007c140a8a847fe4b1988553145dd4","modified":1468223889000},{"_id":"source/categories/index.md","hash":"cb17bf22345084814a90e7812cf72fb77fd94cf5","modified":1465138556000},{"_id":"source/tags/index.md","hash":"15a8caae4e77bb3a88bbea4a0b310c55d8773327","modified":1463543184000},{"_id":"themes/next/.github/CONTRIBUTING.md","hash":"5ab257af816986cd0e53f9527a92d5934ac70ae9","modified":1463548496000},{"_id":"themes/next/.github/ISSUE_TEMPLATE.md","hash":"c2024ded82143807c28a299c5fe6b927ef3525ff","modified":1463548496000},{"_id":"themes/next/languages/de.yml","hash":"786afba25cfc98845a20d9901823ebeebcd1cbbf","modified":1463548496000},{"_id":"themes/next/languages/en.yml","hash":"f03799cbdb5a33064ead080bcac4baca1f6bc5f9","modified":1463548496000},{"_id":"themes/next/languages/default.yml","hash":"9db835c0543ade5a89bc80ec5a898203227cf3d8","modified":1463548496000},{"_id":"themes/next/languages/fr-FR.yml","hash":"1a084623c39de74301f3e92f9388a3a815a542ca","modified":1463548496000},{"_id":"themes/next/languages/id.yml","hash":"147c01e41b931085ad14250fa900c2249dcbbdd7","modified":1463548496000},{"_id":"themes/next/languages/ja.yml","hash":"a2c7b6301b5474aab798946fb700289df237c3cf","modified":1463548496000},{"_id":"themes/next/languages/pt.yml","hash":"ca239b39bf65c9462e59d51b12f0fe566d453197","modified":1463548496000},{"_id":"themes/next/languages/ru.yml","hash":"cc7b964a46587aea0e57b0a5269d8fd25570858e","modified":1463548496000},{"_id":"themes/next/languages/zh-Hans.yml","hash":"bea452bc49aed171a210d09bd6cddc4e846ea8ab","modified":1463548496000},{"_id":"themes/next/languages/zh-hk.yml","hash":"519ab3d817ec3bc5bfc91159c494b6b3c170bea7","modified":1463548496000},{"_id":"themes/next/languages/zh-tw.yml","hash":"6b1f345aaefc13e6723dc8a6741b59ac05c20dfd","modified":1463548496000},{"_id":"themes/next/layout/_layout.swig","hash":"be46867229a5bb60cdb208317b8ecb79823fec5e","modified":1465232493000},{"_id":"themes/next/layout/archive.swig","hash":"b5b59d70fc1563f482fa07afd435752774ad5981","modified":1463548496000},{"_id":"themes/next/layout/category.swig","hash":"6422d196ceaff4220d54b8af770e7e957f3364ad","modified":1463548496000},{"_id":"themes/next/layout/index.swig","hash":"427d0b95b854e311ae363088ab39a393bf8fdc8b","modified":1463548496000},{"_id":"themes/next/layout/page.swig","hash":"8019d02232a6dd1a665b6a4d2daef8e5dd2f0049","modified":1463548496000},{"_id":"themes/next/layout/post.swig","hash":"e2e512142961ddfe77eba29eaa88f4a2ee43ae18","modified":1463548496000},{"_id":"themes/next/layout/tag.swig","hash":"07cf49c49c39a14dfbe9ce8e7d7eea3d4d0a4911","modified":1463548496000},{"_id":"themes/next/scripts/merge-configs.js","hash":"0c56be2e85c694247cfa327ea6d627b99ca265e8","modified":1463548496000},{"_id":"themes/next/test/.jshintrc","hash":"096ed6df627373edd820f24d46b8baf528dee61d","modified":1463548496000},{"_id":"themes/next/test/helpers.js","hash":"a1f5de25154c3724ffc24a91ddc576cdbd60864f","modified":1463548496000},{"_id":"themes/next/test/intern.js","hash":"11fa8a4f5c3b4119a179ae0a2584c8187f907a73","modified":1463548496000},{"_id":"themes/next/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1463548496000},{"_id":"source/_posts/git-hooks/.DS_Store","hash":"df2fbeb1400acda0909a32c1cf6bf492f1121e07","modified":1464713290000},{"_id":"source/_posts/git-hooks/deploy_changes.png","hash":"3bc0c317afcfc60f51651993654580c233b0ccee","modified":1464189349000},{"_id":"source/_posts/git-hooks/devel_commit.png","hash":"7080329aeaefab9698bf9263335d669ae7c07941","modified":1464589843000},{"_id":"source/_posts/git-hooks/first_deploy.png","hash":"73a273c2596f273c07baf93bdef5734b378c6d28","modified":1464189335000},{"_id":"source/_posts/git-hooks/new_prod.png","hash":"a49817f0619c34df0827d560bbeb385f436dfd2e","modified":1464590797000},{"_id":"source/_posts/git-hooks/pushed_prod.png","hash":"4352c63e99e42a093a2c62edebad16007d185461","modified":1464587742000},{"_id":"source/_posts/hexo-next-use-algolia/algolia_logo.svg","hash":"90035272fa31a3f65b3c0e2cb8a633876ef457dc","modified":1465268326000},{"_id":"source/_posts/hexo-next-use-algolia/algolia-index.png","hash":"bdd4e4e99ad26c5905bdbba08c7d38ac2446c4ce","modified":1465233975000},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"43c3433155ccd9abcbe7dce2e6bfa1f3a66af18b","modified":1463548496000},{"_id":"themes/next/layout/_macro/post.swig","hash":"1ca03011bed92614832b1343b65be92183957dc5","modified":1463548496000},{"_id":"themes/next/layout/_macro/reward.swig","hash":"37e5b7c42ec17b9b6b786c5512bcc481a21c974e","modified":1463548496000},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"b883289054ee54a374caad5d4883591beb94bd8b","modified":1463548496000},{"_id":"themes/next/layout/_macro/wechat-subscriber.swig","hash":"85327c2174d09c6d69c9033592e6c8f7eb7ac3ba","modified":1463548496000},{"_id":"themes/next/layout/_partials/comments.swig","hash":"82a9bc2ba60ce68419128ff60624bd74b15dfb78","modified":1463548496000},{"_id":"themes/next/layout/_partials/duoshuo-hot-articles.swig","hash":"5d4638c46aef65bf32a01681495b62416ccc98db","modified":1463548496000},{"_id":"themes/next/layout/_partials/footer.swig","hash":"0ce71d8322ea7dea82d9371fa2fe13949aa870e3","modified":1463548496000},{"_id":"themes/next/layout/_partials/head.swig","hash":"618a543646aa7907df42ec29d22a031794622f22","modified":1465190925000},{"_id":"themes/next/layout/_partials/header.swig","hash":"96c4950b851b2a8d38d31d77e998eebc63ddcfb2","modified":1465266342000},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"9e8e21d194ef44d271b1cca0bc1448c14d7edf4f","modified":1463548496000},{"_id":"themes/next/layout/_partials/search.swig","hash":"40d04757177500526bf1c4568b2f2b456fb574d1","modified":1465231932000},{"_id":"themes/next/layout/_scripts/algolia.swig","hash":"7763faed8ea85ad43b9a8a024daf4ef5bd7e508d","modified":1465189509000},{"_id":"themes/next/layout/_scripts/boostrap.swig","hash":"03aaebe9d50f6acb007ec38cc04acd1cfceb404d","modified":1463548496000},{"_id":"themes/next/layout/_scripts/baidu-push.swig","hash":"82d060fe055d6e423bbc9199f82dfe5c68e74779","modified":1463548496000},{"_id":"themes/next/layout/_scripts/commons.swig","hash":"766b2bdda29523ed6cd8d7aa197f996022f8fd94","modified":1463548496000},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"0b91cadecead8e0b5211cc42b085998d94af503a","modified":1463548496000},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"535fc542781021c4326dec24d8495cbb1387634a","modified":1463548496000},{"_id":"themes/next/scripts/tags/full-image.js","hash":"3acce36db0feb11a982c6c799aa6b6b47df2827c","modified":1463548496000},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"49252824cd53184dc9b97b2f2d87ff28e1b3ef27","modified":1463548496000},{"_id":"themes/next/source/css/main.styl","hash":"20702c48d6053c92c5bcdbc68e8d0ef1369848a0","modified":1463548496000},{"_id":"themes/next/source/images/algolia_logo.svg","hash":"90035272fa31a3f65b3c0e2cb8a633876ef457dc","modified":1465190219000},{"_id":"themes/next/source/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1463548496000},{"_id":"themes/next/source/images/avatar.jpeg","hash":"08987b32a3ad728effc79eca835248c1691e4d22","modified":1453031877000},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1463548496000},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1463548496000},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1463548496000},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1463548496000},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1463548496000},{"_id":"themes/next/source/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1463548496000},{"_id":"themes/next/source/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1463548496000},{"_id":"themes/next/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1463548496000},{"_id":"themes/next/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1463548496000},{"_id":"themes/next/source/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1463548496000},{"_id":"themes/next/source/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1463548496000},{"_id":"themes/next/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1463548496000},{"_id":"source/_posts/hexo-next-use-algolia/algolia-api-keys.png","hash":"8ccd41faf7e09c282ad3f4770e0e2683c25a3946","modified":1465234084000},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1463548496000},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1463548496000},{"_id":"themes/next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1463548496000},{"_id":"themes/next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1463548496000},{"_id":"themes/next/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1463548496000},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1463548496000},{"_id":"themes/next/source/css/_variables/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1463548496000},{"_id":"themes/next/source/images/avatar.png","hash":"698035ddcc73e9ea5830b1315d192657e81d28f1","modified":1463550379000},{"_id":"themes/next/layout/_partials/head/external-fonts.swig","hash":"7ce76358411184482bb0934e70037949dd0da8ca","modified":1463548496000},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"ff5523d5dacaa77a55a24e50e6e6530c3b98bfad","modified":1463548496000},{"_id":"themes/next/layout/_partials/search/swiftype.swig","hash":"959b7e04a96a5596056e4009b73b6489c117597e","modified":1463548496000},{"_id":"themes/next/layout/_partials/search/algolia.swig","hash":"0c799668085897c8c90961b82680ce08444ef4a3","modified":1465188274000},{"_id":"themes/next/layout/_partials/search/tinysou.swig","hash":"eefe2388ff3d424694045eda21346989b123977c","modified":1463548496000},{"_id":"themes/next/layout/_partials/share/add-this.swig","hash":"c07f7b2f264e5215b8ed42d67e8cef2477558364","modified":1463548496000},{"_id":"themes/next/layout/_partials/share/baidushare.swig","hash":"7ca5cb4daa58b3504e17f3e02975e794bc634658","modified":1463548496000},{"_id":"themes/next/layout/_partials/share/duoshuo_share.swig","hash":"89c5a5240ecb223acfe1d12377df5562a943fd5d","modified":1463548496000},{"_id":"themes/next/layout/_partials/share/jiathis.swig","hash":"63315fcf210799f894208c9f512737096df84962","modified":1463548496000},{"_id":"themes/next/layout/_scripts/pages/post-details.swig","hash":"069d1357c717572256e5cdee09574ebce529cbae","modified":1463548496000},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"a44acf9b0d0f44ef3dfc767376a95c984cc127de","modified":1463548496000},{"_id":"themes/next/layout/_scripts/third-party/analytics.swig","hash":"0a89c04055bade7baa5962f1d5aefe438d83a244","modified":1463548496000},{"_id":"themes/next/layout/_scripts/third-party/comments.swig","hash":"907b931d775d32405d02a25b3b0a3ac03bf804d0","modified":1463548496000},{"_id":"themes/next/layout/_scripts/third-party/lean-analytics.swig","hash":"069bb17fb1db3bc7c85c88efa3ed94ab6becbe2c","modified":1463548496000},{"_id":"themes/next/layout/_scripts/third-party/localsearch.swig","hash":"1561bd0c107d725252c6d746e9ac177fc18f93bf","modified":1463548496000},{"_id":"themes/next/layout/_scripts/third-party/mathjax.swig","hash":"5bafc33f57508d1d04a9930165240f6e9efa8d6d","modified":1463548496000},{"_id":"themes/next/layout/_scripts/third-party/tinysou.swig","hash":"cb3a5d36dbe1630bab84e03a52733a46df7c219b","modified":1463548496000},{"_id":"themes/next/source/css/_custom/custom.styl","hash":"88379f2f87efafdce11b5842804a71058f2fcd97","modified":1465191474000},{"_id":"themes/next/source/css/_mixins/Pisces.styl","hash":"715d5b40dc52f319fe4bff0325beb874774d9bd9","modified":1463548496000},{"_id":"themes/next/source/css/_mixins/base.styl","hash":"78a83c38f69a8747bb74e420e6c9eeef1ea76525","modified":1463548496000},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"c8d35a6b9e3bff6d8fdb66de853065af9d37562d","modified":1463548496000},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"3ead77befa064d6327dc7afd0a5af7be59a5f196","modified":1463548496000},{"_id":"themes/next/source/css/_variables/base.styl","hash":"17624186f7a1f28daddea258d044f8e03b2f4bea","modified":1463548496000},{"_id":"themes/next/source/js/src/bootstrap.js","hash":"39bf93769d9080fa01a9a875183b43198f79bc19","modified":1463548496000},{"_id":"themes/next/source/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1463548496000},{"_id":"themes/next/source/js/src/hao-algolia.js","hash":"afc9cc1f3937fba09f10e3ade1d67d512da37a37","modified":1465191184000},{"_id":"themes/next/source/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1463548496000},{"_id":"themes/next/source/js/src/motion.js","hash":"269414e84df544a4ccb88519f6abae4943db3c67","modified":1463548496000},{"_id":"themes/next/source/js/src/post-details.js","hash":"2038f54e289b6da5def09689e69f623187147be5","modified":1463548496000},{"_id":"themes/next/source/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1463548496000},{"_id":"themes/next/source/js/src/utils.js","hash":"e5cb720894c4bc28ca8f10b33df127fb394018d9","modified":1463548496000},{"_id":"themes/next/source/vendors/fancybox/.bower.json","hash":"cc40a9b11e52348e554c84e4a5c058056f6b7aeb","modified":1463548496000},{"_id":"themes/next/source/vendors/fancybox/.gitattributes","hash":"2db21acfbd457452462f71cc4048a943ee61b8e0","modified":1463548496000},{"_id":"themes/next/source/vendors/font-awesome/.bower.json","hash":"7da985a99674e54f514d4fd9fcd3bcea6e7e41d5","modified":1463548496000},{"_id":"themes/next/source/vendors/font-awesome/.gitignore","hash":"69d152fa46b517141ec3b1114dd6134724494d83","modified":1463548496000},{"_id":"themes/next/source/vendors/font-awesome/.npmignore","hash":"dcf470ab3a358103bb896a539cc03caeda10fa8b","modified":1463548496000},{"_id":"themes/next/source/vendors/font-awesome/HELP-US-OUT.txt","hash":"69a4c537d167b68a0ccf1c6febd138aeffca60d6","modified":1463548496000},{"_id":"themes/next/source/vendors/font-awesome/bower.json","hash":"279a8a718ab6c930a67c41237f0aac166c1b9440","modified":1463548496000},{"_id":"themes/next/source/vendors/fastclick/.bower.json","hash":"93ebd5b35e632f714dcf1753e1f6db77ec74449b","modified":1463548496000},{"_id":"themes/next/source/vendors/fastclick/LICENSE","hash":"dcd5b6b43095d9e90353a28b09cb269de8d4838e","modified":1463548496000},{"_id":"themes/next/source/vendors/fastclick/README.md","hash":"1decd8e1adad2cd6db0ab50cf56de6035156f4ea","modified":1463548496000},{"_id":"themes/next/source/vendors/fastclick/bower.json","hash":"13379463c7463b4b96d13556b46faa4cc38d81e6","modified":1463548496000},{"_id":"themes/next/source/vendors/jquery_lazyload/.bower.json","hash":"b7638afc93e9cd350d0783565ee9a7da6805ad8e","modified":1463548496000},{"_id":"themes/next/source/vendors/jquery_lazyload/README.md","hash":"895d50fa29759af7835256522e9dd7dac597765c","modified":1463548496000},{"_id":"themes/next/source/vendors/jquery_lazyload/CONTRIBUTING.md","hash":"4891864c24c28efecd81a6a8d3f261145190f901","modified":1463548496000},{"_id":"themes/next/source/vendors/jquery_lazyload/bower.json","hash":"65bc85d12197e71c40a55c0cd7f6823995a05222","modified":1463548496000},{"_id":"themes/next/source/vendors/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1463548496000},{"_id":"themes/next/source/vendors/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1463548496000},{"_id":"themes/next/source/vendors/jquery/.bower.json","hash":"91745c2cc6c946c7275f952b2b0760b880cea69e","modified":1463548496000},{"_id":"themes/next/source/vendors/velocity/.bower.json","hash":"05f960846f1c7a93dab1d3f9a1121e86812e8c88","modified":1463548496000},{"_id":"themes/next/source/vendors/velocity/bower.json","hash":"2ec99573e84c7117368beccb9e94b6bf35d2db03","modified":1463548496000},{"_id":"themes/next/source/vendors/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1463548496000},{"_id":"themes/next/source/vendors/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1463548496000},{"_id":"themes/next/source/vendors/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1463548496000},{"_id":"themes/next/source/vendors/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1463548496000},{"_id":"themes/next/layout/_scripts/third-party/analytics/baidu-analytics.swig","hash":"7c43d66da93cde65b473a7d6db2a86f9a42647d6","modified":1463548496000},{"_id":"themes/next/layout/_scripts/third-party/analytics/busuanzi-counter.swig","hash":"4fcbf57c4918528ab51d3d042cff92cf5aefb599","modified":1463548496000},{"_id":"themes/next/layout/_scripts/third-party/analytics/cnzz-analytics.swig","hash":"44e761721e8ad787ef571a3cc57bbc12d318a2a3","modified":1463548496000},{"_id":"themes/next/layout/_scripts/third-party/analytics/facebook-sdk.swig","hash":"334176d838ee528e58468d8bc74ff3a6d3f25b2b","modified":1463548496000},{"_id":"themes/next/layout/_scripts/third-party/analytics/google-analytics.swig","hash":"30a23fa7e816496fdec0e932aa42e2d13098a9c2","modified":1463548496000},{"_id":"themes/next/layout/_scripts/third-party/analytics/tencent-analytics.swig","hash":"3658414379e0e8a34c45c40feadc3edc8dc55f88","modified":1463548496000},{"_id":"themes/next/layout/_scripts/third-party/comments/disqus.swig","hash":"3491d3cebabc8a28857200db28a1be65aad6adc2","modified":1463548496000},{"_id":"themes/next/layout/_scripts/third-party/comments/duoshuo.swig","hash":"8c7af79407d223486fba72b8150fe045a553bf70","modified":1463548496000},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"b49efc66bd055a2d0be7deabfcb02ee72a9a28c8","modified":1463548496000},{"_id":"themes/next/source/css/_common/components/buttons.styl","hash":"0dfb4b3ba3180d7285e66f270e1d3fa0f132c3d2","modified":1463548496000},{"_id":"themes/next/source/css/_common/components/comments.styl","hash":"471f1627891aca5c0e1973e09fbcb01e1510d193","modified":1463548496000},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"10994990d6e0b4d965a728a22cf7f6ee29cae9f6","modified":1463548496000},{"_id":"themes/next/source/css/_common/components/pagination.styl","hash":"711c8830886619d4f4a0598b0cde5499dce50c62","modified":1463548496000},{"_id":"themes/next/source/css/_common/components/tag-cloud.styl","hash":"dd8a3b22fc2f222ac6e6c05bd8a773fb039169c0","modified":1463548496000},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"5304f99581da3a31de3ecec959b7adf9002fde83","modified":1463548496000},{"_id":"themes/next/source/css/_common/scaffolding/helpers.styl","hash":"54c90cf7bdbf5c596179d8dae6e671bad1292662","modified":1463548496000},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"ece571f38180febaf02ace8187ead8318a300ea7","modified":1463548496000},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"013619c472c7e4b08311c464fcbe9fcf5edde603","modified":1463548496000},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"64f5d56c08d74a338813df1265580ca0cbf0190b","modified":1463548496000},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"2186be20e317505cd31886f1291429cc21f76703","modified":1463548496000},{"_id":"themes/next/source/css/_schemes/Mist/_base.styl","hash":"c2d079788d6fc2e9a191ccdae94e50d55bf849dc","modified":1463548496000},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"5ae7906dc7c1d9468c7f4b4a6feddddc555797a1","modified":1463548496000},{"_id":"themes/next/source/css/_schemes/Mist/_logo.styl","hash":"38e5df90c8689a71c978fd83ba74af3d4e4e5386","modified":1463548496000},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"b0dcca862cd0cc6e732e33d975b476d744911742","modified":1463548496000},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expanded.styl","hash":"4303776991ef28f5742ca51c7dffe6f12f0acf34","modified":1463548496000},{"_id":"themes/next/source/css/_schemes/Mist/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1463548496000},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"9a5581a770af8964064fef7afd3e16963e45547f","modified":1463548496000},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"6ed60cc621bac096c0ed7534fa25b1a52dc571d4","modified":1463548496000},{"_id":"themes/next/source/css/_schemes/Muse/_logo.styl","hash":"8829bc556ca38bfec4add4f15a2f028092ac6d46","modified":1463548496000},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"c2c6c4f6434b4f94aac2af5861cd769427f0ee10","modified":1463548496000},{"_id":"themes/next/source/css/_schemes/Muse/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1463548496000},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"a0e2030a606c934fb2c5c7373aaae04a1caac4c5","modified":1463548496000},{"_id":"themes/next/source/css/_schemes/Pisces/_brand.styl","hash":"be22ad34f546a07f6d56b424338cdd898683eea4","modified":1463548496000},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"8d7cecde4933900c7df2db9d0a98f5f82f88dc93","modified":1463548496000},{"_id":"themes/next/source/css/_schemes/Pisces/_full-image.styl","hash":"938d39eedc6e3d33918c1145a5bf1e79991d3fcf","modified":1463548496000},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"d09280e5b79f3b573edb30f30c7a5f03ac640986","modified":1463548496000},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"d4b7bd610ca03dbb2f5b66631c0e84a79fb4660b","modified":1463548496000},{"_id":"themes/next/source/css/_schemes/Pisces/_posts.styl","hash":"2f878213cb24c5ddc18877f6d15ec5c5f57745ac","modified":1463548496000},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"1b10ba2d3ad0c063c418dc94a0b7e0db4b342c53","modified":1463548496000},{"_id":"themes/next/source/js/src/schemes/pisces.js","hash":"7506e7490c69a200831393c38d25e91c156bd471","modified":1463548496000},{"_id":"themes/next/source/vendors/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1463548496000},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1463548496000},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1463548496000},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1463548496000},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1463548496000},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1463548496000},{"_id":"themes/next/source/vendors/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1463548496000},{"_id":"themes/next/source/vendors/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1463548496000},{"_id":"themes/next/source/vendors/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1463548496000},{"_id":"themes/next/source/vendors/font-awesome/css/font-awesome.css","hash":"3b87c2560832748cd06f9bfd2fd6ea8edbdae8c7","modified":1463548496000},{"_id":"themes/next/source/vendors/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1463548496000},{"_id":"themes/next/source/vendors/font-awesome/css/font-awesome.min.css","hash":"05ea25bc9b3ac48993e1fee322d3bc94b49a6e22","modified":1463548496000},{"_id":"themes/next/source/vendors/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1463548496000},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.woff2","hash":"574ea2698c03ae9477db2ea3baf460ee32f1a7ea","modified":1463548496000},{"_id":"themes/next/source/vendors/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1463548496000},{"_id":"themes/next/source/vendors/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1463548496000},{"_id":"themes/next/source/vendors/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1463548496000},{"_id":"themes/next/source/vendors/font-awesome/fonts/FontAwesome.otf","hash":"0112e96f327d413938d37c1693806f468ffdbace","modified":1463548496000},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.eot","hash":"b3c2f08e73320135b69c23a3908b87a12053a2f6","modified":1463548496000},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.woff","hash":"507970402e328b2baeb05bde73bf9ded4e2c3a2d","modified":1463548496000},{"_id":"themes/next/source/vendors/velocity/velocity.js","hash":"e63dc7cea055ca60a95d286f32349d88b10c5a4d","modified":1463548496000},{"_id":"themes/next/source/css/_common/components/footer/footer.styl","hash":"8994ffcce84deac0471532f270f97c44fea54dc0","modified":1463548496000},{"_id":"themes/next/source/css/_common/components/header/headerband.styl","hash":"d27448f199fc2f9980b601bc22b87f08b5d64dd1","modified":1463548496000},{"_id":"themes/next/source/css/_common/components/header/header.styl","hash":"ae1ca14e51de67b07dba8f61ec79ee0e2e344574","modified":1463548496000},{"_id":"themes/next/source/css/_common/components/header/menu.styl","hash":"c890ce7fe933abad7baf39764a01894924854e92","modified":1463548496000},{"_id":"themes/next/source/css/_common/components/header/site-nav.styl","hash":"49c2b2c14a1e7fcc810c6be4b632975d0204c281","modified":1463548496000},{"_id":"themes/next/source/css/_common/components/highlight/highlight.styl","hash":"4da051c7f3924fa2db1e73c55b2baf1c2c150255","modified":1463548496000},{"_id":"themes/next/source/css/_common/components/header/site-meta.styl","hash":"6c00f6e0978f4d8f9a846a15579963728aaa6a17","modified":1463548496000},{"_id":"themes/next/source/css/_common/components/highlight/theme.styl","hash":"90f8f9706cd7fe829cf06e9959a65fd3f8b994fa","modified":1463548496000},{"_id":"themes/next/source/css/_common/components/pages/archive.styl","hash":"7778920dd105fa4de3a7ab206eeba30b1a7bac45","modified":1463548496000},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"4eff5b252d7b614e500fc7d52c97ce325e57d3ab","modified":1463548496000},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"3c46efd6601e268093ce6d7b1471d18501878f0d","modified":1463548496000},{"_id":"themes/next/source/css/_common/components/pages/post-detail.styl","hash":"9bf4362a4d0ae151ada84b219d39fbe5bb8c790e","modified":1463548496000},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"2cdc094ecf907a02fce25ad4a607cd5c40da0f2b","modified":1463548496000},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"8fae54591877a73dff0b29b2be2e8935e3c63575","modified":1463548496000},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"b25132fe6a7ad67059a2c3afc60feabb479bdd75","modified":1463548496000},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"387ce23bba52b22a586b2dfb4ec618fe1ffd3926","modified":1463548496000},{"_id":"themes/next/source/css/_common/components/post/post-meta.styl","hash":"d543d1377c1f61b70e3adb6da0eb12797552e5f2","modified":1463548496000},{"_id":"themes/next/source/css/_common/components/post/post-more-link.styl","hash":"15063d79b5befc21820baf05d6f20cc1c1787477","modified":1463548496000},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"cbca4842a54950e2934b3b8f3cd940f122111aef","modified":1463548496000},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"e792c8dc41561c96d128e9b421187f1c3dc978a0","modified":1463548496000},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"a352ae5b1f8857393bf770d2e638bf15f0c9585d","modified":1463548496000},{"_id":"themes/next/source/css/_common/components/post/post-title.styl","hash":"963105a531403d7aad6d9e5e23e3bfabb8ec065a","modified":1463548496000},{"_id":"themes/next/source/css/_common/components/post/post-type.styl","hash":"10251257aceecb117233c9554dcf8ecfef8e2104","modified":1463548496000},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"4eb18b12fa0ea6c35925d9a64f64e2a7dae8c7fd","modified":1463548496000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"2e7ec9aaa3293941106b1bdd09055246aa3c3dc6","modified":1463548496000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author.styl","hash":"920343e41c124221a17f050bbb989494d44f7a24","modified":1463548496000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"c44f6a553ec7ea5508f2054a13be33a62a15d3a9","modified":1463548496000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-feed-link.styl","hash":"9486ddd2cb255227db102d09a7df4cae0fabad72","modified":1463548496000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"45fa7193435a8eae9960267438750b4c9fa9587f","modified":1463548496000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"7690b9596ec3a49befbe529a5a2649abec0faf76","modified":1463548496000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"2d3abbc85b979a648e0e579e45f16a6eba49d1e7","modified":1463548496000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar.styl","hash":"234facd038f144bd0fe09a31ed1357c5d74c517f","modified":1463548496000},{"_id":"themes/next/source/css/_common/components/sidebar/site-state.styl","hash":"3623e7fa4324ec1307370f33d8f287a9e20a5578","modified":1463548496000},{"_id":"themes/next/source/css/_common/components/third-party/baidushare.styl","hash":"93b08815c4d17e2b96fef8530ec1f1064dede6ef","modified":1463548496000},{"_id":"themes/next/source/css/_common/components/third-party/busuanzi-counter.styl","hash":"b03f891883446f3a5548b7cc90d29c77e62f1053","modified":1463548496000},{"_id":"themes/next/source/css/_common/components/third-party/duoshuo.styl","hash":"2340dd9b3202c61d73cc708b790fac5adddbfc7f","modified":1463548496000},{"_id":"themes/next/source/css/_common/components/third-party/jiathis.styl","hash":"327b5f63d55ec26f7663185c1a778440588d9803","modified":1463548496000},{"_id":"themes/next/source/css/_common/components/third-party/localsearch.styl","hash":"795d94561888d31cb7a6ff4a125596809ea69b7d","modified":1463548496000},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"3afc459442c132c480d1d832f1a872f1070bb048","modified":1463548496000},{"_id":"themes/next/source/css/_common/components/tags/blockquote-center.styl","hash":"c2abe4d87148e23e15d49ee225bc650de60baf46","modified":1463548496000},{"_id":"themes/next/source/css/_common/components/tags/full-image.styl","hash":"618f73450cf541f88a4fddc3d22898aee49d105d","modified":1463548496000},{"_id":"themes/next/source/css/_common/components/tags/group-pictures.styl","hash":"4851b981020c5cbc354a1af9b831a2dcb3cf9d39","modified":1463548496000},{"_id":"themes/next/source/css/_common/components/tags/tags.styl","hash":"8e66c2635d48e11de616bb29c4b1323698eebc0a","modified":1463548496000},{"_id":"themes/next/source/css/_schemes/Mist/outline/outline.styl","hash":"5dc4859c66305f871e56cba78f64bfe3bf1b5f01","modified":1463548496000},{"_id":"themes/next/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"8b8e8cbce98a9296c8fd77f512ae85d945f65d40","modified":1463548496000},{"_id":"themes/next/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"8b8e8cbce98a9296c8fd77f512ae85d945f65d40","modified":1463548496000},{"_id":"themes/next/source/vendors/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1463548496000},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1463548496000},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1463548496000},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1463548496000},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1463548496000},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1463548496000},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.ttf","hash":"27cf1f2ec59aece6938c7bb2feb0e287ea778ff9","modified":1463548496000},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.svg","hash":"2b3c8ba7008cc014d8fb37abc6f9f49aeda83824","modified":1463548496000},{"_id":"public/content.json","hash":"97e26c93e2bbedeba5fc4b1e3e67976faac21224","modified":1471252318730},{"_id":"public/categories/index.html","hash":"d86b30aa6de5668a692b5638edae53e6780e26ad","modified":1471252318762},{"_id":"public/tags/index.html","hash":"bb646daaf438f1a447617f76feaa5c65c6302977","modified":1471252318762},{"_id":"public/archives/page/2/index.html","hash":"b181519f6141d507dcd3970d3d22581518eb3c3c","modified":1471252318762},{"_id":"public/archives/2016/page/2/index.html","hash":"99145aa3449c4e841e4239c133cca6e2ed16112a","modified":1471252318762},{"_id":"public/archives/2016/05/index.html","hash":"6bd662d8043b2e8842cbf275e6d189e4125988bb","modified":1471252318762},{"_id":"public/archives/2016/07/index.html","hash":"792e1109f89edb2051349956f1f99d79ad8f87fc","modified":1471252318762},{"_id":"public/archives/2016/08/index.html","hash":"436aa67cd45b2be9ecee425109e3ce9da2604004","modified":1471252318762},{"_id":"public/categories/Tips/index.html","hash":"fadd992ca75a7266cd62d02d6128c546437cca7b","modified":1471252318763},{"_id":"public/categories/Javascript/index.html","hash":"163d2217a68b0cc04e6657cf3f6edd9cb3e19136","modified":1471252318763},{"_id":"public/categories/Node/index.html","hash":"2ea72654f790bf06b3828b5350c09d4a5860f8b5","modified":1471252318763},{"_id":"public/categories/gitHub备胎归档/index.html","hash":"27bfaa3cf2d6e8acb8797b470fd6eb726af93708","modified":1471252318763},{"_id":"public/categories/服务器上那点事儿/index.html","hash":"e299ed33c63563f8001800730d20e843e5e2f3ba","modified":1471252318763},{"_id":"public/categories/CSS/index.html","hash":"496cb15752e57af669bf3273c75ba27bf330c598","modified":1471252318763},{"_id":"public/categories/Hexo/index.html","hash":"eb558b483f07c18392bdf29361a8dbc9002a6621","modified":1471252318763},{"_id":"public/tags/MAC/index.html","hash":"1e20c7129bff7ae3a7d4d37048d68555fd84fcff","modified":1471252318763},{"_id":"public/tags/图片处理/index.html","hash":"7010cb248b4fdee1b1a3bee82ec0cde91f111b41","modified":1471252318763},{"_id":"public/tags/数组去重/index.html","hash":"0f5d8e0ce20751d3aaf73370dc7d0929cdb37c68","modified":1471252318763},{"_id":"public/tags/Node/index.html","hash":"539e504fc5002e171c5cd7b9b0d8208952934f76","modified":1471252318763},{"_id":"public/tags/Electron/index.html","hash":"96e17e183dd57c48b7ff7beb6c15bb1b7e52861f","modified":1471252318763},{"_id":"public/tags/install/index.html","hash":"bdbb02820c3b759d8c013aa33d83f852fbd2dda5","modified":1471252318763},{"_id":"public/tags/安装/index.html","hash":"64af2f26fe63accee8ae298f146c4be4718e6d68","modified":1471252318763},{"_id":"public/tags/nightmare/index.html","hash":"3345a328b145d33739954663b8ad53f533b7a39f","modified":1471252318763},{"_id":"public/tags/gitHub/index.html","hash":"57ae069f749dd267f23b7fc60a39b9cd3e37ef23","modified":1471252318763},{"_id":"public/tags/收藏/index.html","hash":"548cfd6496e46a41a809ffa5a8b1d77eccc014bf","modified":1471252318763},{"_id":"public/tags/Git/index.html","hash":"7231420d5fbbd7c9454a295e41a02b69990de4dc","modified":1471252318763},{"_id":"public/tags/hook/index.html","hash":"76346bf4c1518fae4b8007b45d6f9e72ca6783c8","modified":1471252318763},{"_id":"public/tags/Medium/index.html","hash":"6b048dcb07b079207e1b7df85eca6b5119bc0bb7","modified":1471252318763},{"_id":"public/tags/CSS/index.html","hash":"6fd88fca3bfb26a6511532c3d5e03608c99d6a23","modified":1471252318763},{"_id":"public/tags/笔记/index.html","hash":"570f23e07c15c4dddd718cf23040a6dfccdf98df","modified":1471252318763},{"_id":"public/tags/less/index.html","hash":"ae3b18cf785b22f8c8bf4b3610638de64ce2f649","modified":1471252318763},{"_id":"public/tags/编码/index.html","hash":"1772f4defe20fff8c393d03c8814b3c435bfc751","modified":1471252318763},{"_id":"public/tags/指南/index.html","hash":"ca2d95f6e7cd7fd8d9a9d280077f189e7d523273","modified":1471252318763},{"_id":"public/tags/javascript/index.html","hash":"297cebf5f8487eb905694b7bf34bf19ec4037f6c","modified":1471252318763},{"_id":"public/tags/callback/index.html","hash":"2a1ab8e4e3dcae361f0259c5d66f17302b0b2274","modified":1471252318763},{"_id":"public/tags/bind/index.html","hash":"a0b922105a278a301f1abf1796b78518c0c927b9","modified":1471252318763},{"_id":"public/tags/回调/index.html","hash":"2eb736a3070ecebfdfb1220da442f54cad386ebc","modified":1471252318764},{"_id":"public/tags/高度/index.html","hash":"75dbbc215cee8f5042f31ddec77e6a09c1a4a768","modified":1471252318764},{"_id":"public/tags/响应式/index.html","hash":"f7e7228808b029f685cce64f0e1f2eda28ab6790","modified":1471252318764},{"_id":"public/tags/相等/index.html","hash":"d72efd89d6818c3917c6d4a625c326b7596ba666","modified":1471252318764},{"_id":"public/tags/Algolia/index.html","hash":"239162aff297160f6bcca43ca855eac377bb5e3f","modified":1471252318764},{"_id":"public/tags/Next/index.html","hash":"f546f925ee5016eff884c93389af449b8d04d5e0","modified":1471252318764},{"_id":"public/tags/swiftype/index.html","hash":"2301a70aa1c9f9bd0dcf0a871fa351c1024251db","modified":1471252318764},{"_id":"public/tags/iOS/index.html","hash":"857c933437f2f8e01346071691f4729d44678efb","modified":1471252318764},{"_id":"public/tags/jQuery/index.html","hash":"aa1a97cb7ffa4374b29a94d7fdb096c30117e616","modified":1471252318764},{"_id":"public/tags/Safari/index.html","hash":"9bcec5178bacdcb2f15ca2d6922c876c43b67f88","modified":1471252318764},{"_id":"public/tags/Vagrant/index.html","hash":"079374d159e3e9788b3ce90ea9312d274363ec1c","modified":1471252318764},{"_id":"public/tags/No-input-file-specified/index.html","hash":"75b1c72df32beb3c53eafed65c420775e9c6bcc8","modified":1471252318764},{"_id":"public/tags/homestead/index.html","hash":"145e4341d3e29f8860ec4b7a36852068d717b20c","modified":1471252318764},{"_id":"public/20160811/electron-install/index.html","hash":"8a8d8989ea772b18ce64570399f603850709b2fa","modified":1471252318764},{"_id":"public/20160815/medium-css-note/index.html","hash":"3ee91cbc01e2d5fa2afa2820d1487d174d9f3622","modified":1471252318764},{"_id":"public/20160711/responsive-equal-height/index.html","hash":"412e7162ac3c2b29d56543805bf0c63442269258","modified":1471252318764},{"_id":"public/20160708/js-bind-callback/index.html","hash":"3ea63f2ab759d530059119605fccecd02d47daec","modified":1471252318764},{"_id":"public/20160630/vagrant-problems/index.html","hash":"4943c37601fdb84876691ec4b8713df31804090e","modified":1471252318764},{"_id":"public/20160606/hexo-next-use-algolia/index.html","hash":"2884ab67753a61ef7cfe3f760cf492001c9bd86c","modified":1471252318764},{"_id":"public/20160601/safari-jquery-on-click-bug/index.html","hash":"d1b6072aab0905c82cb7d1ca2c4535b88abf28e4","modified":1471252318764},{"_id":"public/20160605/array-remove-duplicates/index.html","hash":"ebc694caa5bf569dba488a6176c9b811e23cb79e","modified":1471252318764},{"_id":"public/20160518/git-hooks/index.html","hash":"379e8b06a1b1c02d99065b205c9df7ef16e0ed0c","modified":1471252318764},{"_id":"public/20160530/MAC批量处理图片/index.html","hash":"5bdcd23870570048736e0f9fec5a4d85d6b6a23c","modified":1471252318765},{"_id":"public/20160516/github-star-collection/index.html","hash":"7d1645f436fd0c07df0adc030827ae40bd6599ea","modified":1471252318765},{"_id":"public/archives/index.html","hash":"2c936d674915a3d2168434fed36cbcbcfc9211bb","modified":1471252318765},{"_id":"public/archives/2016/index.html","hash":"997cb161de1824abef03095e2cd94b010e2fdb0a","modified":1471252318765},{"_id":"public/archives/2016/06/index.html","hash":"f43657544f99320a2ff0f905831e431f1f35b12f","modified":1471252318765},{"_id":"public/index.html","hash":"4906476741d4dc42df2962f814e931a94d9e9b31","modified":1471252318765},{"_id":"public/page/2/index.html","hash":"73edcda1a188f8f4d1cb93994fd4e5ae22e468b6","modified":1471252318765},{"_id":"public/images/algolia_logo.svg","hash":"90035272fa31a3f65b3c0e2cb8a633876ef457dc","modified":1471252318779},{"_id":"public/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1471252318779},{"_id":"public/images/avatar.jpeg","hash":"08987b32a3ad728effc79eca835248c1691e4d22","modified":1471252318779},{"_id":"public/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1471252318779},{"_id":"public/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1471252318779},{"_id":"public/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1471252318779},{"_id":"public/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1471252318779},{"_id":"public/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1471252318779},{"_id":"public/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1471252318779},{"_id":"public/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1471252318780},{"_id":"public/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1471252318780},{"_id":"public/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1471252318780},{"_id":"public/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1471252318780},{"_id":"public/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1471252318780},{"_id":"public/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1471252318780},{"_id":"public/vendors/font-awesome/HELP-US-OUT.txt","hash":"69a4c537d167b68a0ccf1c6febd138aeffca60d6","modified":1471252318780},{"_id":"public/vendors/fastclick/LICENSE","hash":"dcd5b6b43095d9e90353a28b09cb269de8d4838e","modified":1471252318780},{"_id":"public/vendors/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1471252318780},{"_id":"public/vendors/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1471252318780},{"_id":"public/vendors/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1471252318780},{"_id":"public/vendors/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1471252318780},{"_id":"public/vendors/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1471252318780},{"_id":"public/vendors/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1471252318780},{"_id":"public/vendors/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1471252318780},{"_id":"public/vendors/font-awesome/fonts/fontawesome-webfont.woff2","hash":"574ea2698c03ae9477db2ea3baf460ee32f1a7ea","modified":1471252318780},{"_id":"public/vendors/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1471252318780},{"_id":"public/20160606/hexo-next-use-algolia/algolia-index.png","hash":"bdd4e4e99ad26c5905bdbba08c7d38ac2446c4ce","modified":1471252318780},{"_id":"public/20160606/hexo-next-use-algolia/algolia_logo.svg","hash":"90035272fa31a3f65b3c0e2cb8a633876ef457dc","modified":1471252318780},{"_id":"public/20160518/git-hooks/deploy_changes.png","hash":"3bc0c317afcfc60f51651993654580c233b0ccee","modified":1471252318781},{"_id":"public/20160518/git-hooks/devel_commit.png","hash":"7080329aeaefab9698bf9263335d669ae7c07941","modified":1471252318781},{"_id":"public/20160518/git-hooks/first_deploy.png","hash":"73a273c2596f273c07baf93bdef5734b378c6d28","modified":1471252318781},{"_id":"public/20160518/git-hooks/new_prod.png","hash":"a49817f0619c34df0827d560bbeb385f436dfd2e","modified":1471252318781},{"_id":"public/20160518/git-hooks/pushed_prod.png","hash":"4352c63e99e42a093a2c62edebad16007d185461","modified":1471252318781},{"_id":"public/favicon.ico","hash":"e6ee5fa3fb1a60f158c57c0e012acdb216f6b365","modified":1471252319355},{"_id":"public/images/avatar.png","hash":"698035ddcc73e9ea5830b1315d192657e81d28f1","modified":1471252319357},{"_id":"public/vendors/font-awesome/fonts/FontAwesome.otf","hash":"0112e96f327d413938d37c1693806f468ffdbace","modified":1471252319361},{"_id":"public/vendors/font-awesome/fonts/fontawesome-webfont.eot","hash":"b3c2f08e73320135b69c23a3908b87a12053a2f6","modified":1471252319361},{"_id":"public/vendors/font-awesome/fonts/fontawesome-webfont.woff","hash":"507970402e328b2baeb05bde73bf9ded4e2c3a2d","modified":1471252319361},{"_id":"public/20160606/hexo-next-use-algolia/algolia-api-keys.png","hash":"8ccd41faf7e09c282ad3f4770e0e2683c25a3946","modified":1471252319361},{"_id":"public/js/src/bootstrap.js","hash":"39bf93769d9080fa01a9a875183b43198f79bc19","modified":1471252319366},{"_id":"public/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1471252319366},{"_id":"public/js/src/hao-algolia.js","hash":"afc9cc1f3937fba09f10e3ade1d67d512da37a37","modified":1471252319366},{"_id":"public/js/src/motion.js","hash":"269414e84df544a4ccb88519f6abae4943db3c67","modified":1471252319366},{"_id":"public/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1471252319366},{"_id":"public/js/src/post-details.js","hash":"2038f54e289b6da5def09689e69f623187147be5","modified":1471252319366},{"_id":"public/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1471252319366},{"_id":"public/js/src/utils.js","hash":"e5cb720894c4bc28ca8f10b33df127fb394018d9","modified":1471252319366},{"_id":"public/vendors/font-awesome/bower.json","hash":"64394a2a9aa00f8e321d8daa5e51a420f0e96dad","modified":1471252319366},{"_id":"public/vendors/jquery_lazyload/CONTRIBUTING.html","hash":"a6358170d346af13b1452ac157b60505bec7015c","modified":1471252319366},{"_id":"public/vendors/fastclick/README.html","hash":"da3c74d484c73cc7df565e8abbfa4d6a5a18d4da","modified":1471252319366},{"_id":"public/vendors/fastclick/bower.json","hash":"4dcecf83afddba148464d5339c93f6d0aa9f42e9","modified":1471252319366},{"_id":"public/vendors/jquery_lazyload/README.html","hash":"bde24335f6bc09d8801c0dcd7274f71b466552bd","modified":1471252319367},{"_id":"public/vendors/jquery_lazyload/bower.json","hash":"ae3c3b61e6e7f9e1d7e3585ad854380ecc04cf53","modified":1471252319367},{"_id":"public/vendors/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1471252319367},{"_id":"public/vendors/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1471252319367},{"_id":"public/vendors/velocity/bower.json","hash":"0ef14e7ccdfba5db6eb3f8fc6aa3b47282c36409","modified":1471252319367},{"_id":"public/js/src/schemes/pisces.js","hash":"7506e7490c69a200831393c38d25e91c156bd471","modified":1471252319367},{"_id":"public/vendors/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1471252319367},{"_id":"public/vendors/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1471252319367},{"_id":"public/vendors/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1471252319367},{"_id":"public/vendors/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1471252319367},{"_id":"public/vendors/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1471252319367},{"_id":"public/vendors/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1471252319367},{"_id":"public/vendors/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1471252319367},{"_id":"public/vendors/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1471252319367},{"_id":"public/vendors/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1471252319367},{"_id":"public/vendors/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1471252319367},{"_id":"public/css/main.css","hash":"cc84d17177c50c7e5b81948bfa830c9fe457804c","modified":1471252319367},{"_id":"public/vendors/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1471252319369},{"_id":"public/vendors/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1471252319369},{"_id":"public/vendors/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1471252319369},{"_id":"public/vendors/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1471252319369},{"_id":"public/vendors/font-awesome/css/font-awesome.css","hash":"3b87c2560832748cd06f9bfd2fd6ea8edbdae8c7","modified":1471252319369},{"_id":"public/vendors/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1471252319369},{"_id":"public/vendors/font-awesome/css/font-awesome.min.css","hash":"05ea25bc9b3ac48993e1fee322d3bc94b49a6e22","modified":1471252319369},{"_id":"public/vendors/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1471252319369},{"_id":"public/vendors/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1471252319369},{"_id":"public/vendors/font-awesome/fonts/fontawesome-webfont.ttf","hash":"27cf1f2ec59aece6938c7bb2feb0e287ea778ff9","modified":1471252319369},{"_id":"public/vendors/font-awesome/fonts/fontawesome-webfont.svg","hash":"2b3c8ba7008cc014d8fb37abc6f9f49aeda83824","modified":1471252319384}],"Category":[{"name":"Tips","_id":"cirvtn4oe0004plnyqbaqv5w5"},{"name":"Javascript","_id":"cirvtn4ol0009plnye83h5oqr"},{"name":"Node","_id":"cirvtn4oq000eplny6yofmofh"},{"name":"gitHub备胎归档","_id":"cirvtn4ou000lplny3pdzsasi"},{"name":"服务器上那点事儿","_id":"cirvtn4oy000splnytzkfvwzi"},{"name":"CSS","_id":"cirvtn4p0000wplnyq8q1wivy"},{"name":"Hexo","_id":"cirvtn4p20011plnynq9fh8qu"}],"Data":[],"Page":[{"title":"分类","date":"2016-06-05T14:46:55.000Z","type":"categories","comments":0,"_content":"","source":"categories/index.md","raw":"---\ntitle: 分类\ndate: 2016-06-05 22:46:55\ntype: \"categories\"\ncomments: false\n---\n","updated":"2016-06-05T14:55:56.000Z","path":"categories/index.html","layout":"page","_id":"cirvtn4oa0001plnym34mq2e6","content":"","excerpt":"","more":""},{"type":"tags","noDate":true,"comments":0,"_content":"","source":"tags/index.md","raw":"---\ntype: \"tags\"\nnoDate: true\ncomments: false\n---\n","date":"2016-05-18T03:46:24.000Z","updated":"2016-05-18T03:46:24.000Z","path":"tags/index.html","title":"","layout":"page","_id":"cirvtn4sj002splnyjn1gf3gu","content":"","excerpt":"","more":""}],"Post":[{"title":"MAC批量处理图片","date":"2016-05-30T09:19:38.000Z","_content":"\n最近有个批量改图片尺寸的活，打开photoshop做批处理真心觉得累。搜罗了一圈，发现mac有个命令———`sips`。\n再输入如下命令之后：\n```\nsips --help\n```\n修改尺寸的就是下面的几个用法。\u000e\n```Bash\n    -z, --resampleHeightWidth pixelsH pixelsW\n        --resampleWidth pixelsW\n        --resampleHeight pixelsH\n    -Z, --resampleHeightWidthMax pixelsWH\n```\n例如：\n```Bash\nsips -z 100 200 img.jpg //z为小写，100、200分别是是img.jpg的宽、高\nsips -Z 200 img.jpg //Z为大写, 200为img.jpg的最大宽高\nsips -Z 200 *.jpg //处理该路径下的所有.jpg文件，最大宽高为200\n```\n","source":"_posts/MAC批量处理图片.md","raw":"---\ntitle: MAC批量处理图片\ncategories: Tips\ndate: 2016-05-30 17:19:38\ntags:\n- MAC\n- 图片处理\n---\n\n最近有个批量改图片尺寸的活，打开photoshop做批处理真心觉得累。搜罗了一圈，发现mac有个命令———`sips`。\n再输入如下命令之后：\n```\nsips --help\n```\n修改尺寸的就是下面的几个用法。\u000e\n```Bash\n    -z, --resampleHeightWidth pixelsH pixelsW\n        --resampleWidth pixelsW\n        --resampleHeight pixelsH\n    -Z, --resampleHeightWidthMax pixelsWH\n```\n例如：\n```Bash\nsips -z 100 200 img.jpg //z为小写，100、200分别是是img.jpg的宽、高\nsips -Z 200 img.jpg //Z为大写, 200为img.jpg的最大宽高\nsips -Z 200 *.jpg //处理该路径下的所有.jpg文件，最大宽高为200\n```\n","slug":"MAC批量处理图片","published":1,"updated":"2016-06-05T14:46:26.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirvtn4o50000plnycj2uhuig","content":"<p>最近有个批量改图片尺寸的活，打开photoshop做批处理真心觉得累。搜罗了一圈，发现mac有个命令———<code>sips</code>。<br>再输入如下命令之后：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sips --help</div></pre></td></tr></table></figure></p>\n<p>修改尺寸的就是下面的几个用法。\u000e<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">-z, --resampleHeightWidth pixelsH pixelsW</div><div class=\"line\">    --resampleWidth pixelsW</div><div class=\"line\">    --resampleHeight pixelsH</div><div class=\"line\">-Z, --resampleHeightWidthMax pixelsWH</div></pre></td></tr></table></figure></p>\n<p>例如：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">sips -z 100 200 img.jpg //z为小写，100、200分别是是img.jpg的宽、高</div><div class=\"line\">sips -Z 200 img.jpg //Z为大写, 200为img.jpg的最大宽高</div><div class=\"line\">sips -Z 200 *.jpg //处理该路径下的所有.jpg文件，最大宽高为200</div></pre></td></tr></table></figure></p>\n","excerpt":"","more":"<p>最近有个批量改图片尺寸的活，打开photoshop做批处理真心觉得累。搜罗了一圈，发现mac有个命令———<code>sips</code>。<br>再输入如下命令之后：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sips --help</div></pre></td></tr></table></figure></p>\n<p>修改尺寸的就是下面的几个用法。\u000e<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">-z, --resampleHeightWidth pixelsH pixelsW</div><div class=\"line\">    --resampleWidth pixelsW</div><div class=\"line\">    --resampleHeight pixelsH</div><div class=\"line\">-Z, --resampleHeightWidthMax pixelsWH</div></pre></td></tr></table></figure></p>\n<p>例如：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">sips -z 100 200 img.jpg //z为小写，100、200分别是是img.jpg的宽、高</div><div class=\"line\">sips -Z 200 img.jpg //Z为大写, 200为img.jpg的最大宽高</div><div class=\"line\">sips -Z 200 *.jpg //处理该路径下的所有.jpg文件，最大宽高为200</div></pre></td></tr></table></figure></p>\n"},{"title":"js数组去重","date":"2016-06-05T12:57:53.000Z","_content":"\n## 最简洁\n```js\n//利用Array.filter\nvar arr = [\"1\", \"2\", \"3\", \"1\", \"3\"];\narr = arr.filter( function( item, index, inputArray ) {\n           return inputArray.indexOf(item) == index;\n    });//Output: [\"1\", \"2\", \"3\"]\n```\n这个写法相对简洁，但是并不怎么效率`O(n^2)`，不适合过长的数组。\n\n<!-- more -->\n\n## 改进版\n```js\nfunction uniq(a) {\n    var seen = {};\n    return arr.filter(function(item) {\n        return seen.hasOwnProperty(item) ? false : (seen[item] = true);\n    });\n}\n```\n这个写法比上一个效率得多，时间复杂度O(n),但是有两个缺陷：\n* 对于`Number`和`String`来说，该算法不能区分，比如：\n```js\nuniq([1,\"1\",2,\"2\"])//返回[1, 2]\n```\n* 同理，对于对象来说也不能区分，所有对象都被认为相等。\n所以使用时要明确使用场景。\n```js\nuniq([{foo:1},{foo:2}])//返回[{foo:1}]\n```\n\n## 最终版\n```js\nfunction uniq(a) {\n    var prims = {\"boolean\":{}, \"number\":{}, \"string\":{}}, objs = [];\n\n    return a.filter(function(item) {\n        var type = typeof item;\n        if(type in prims)\n            return prims[type].hasOwnProperty(item) ? false : (prims[type][item] = true);\n        else\n            return objs.indexOf(item) >= 0 ? false : objs.push(item);\n    });\n}\n```\n\n## ES6版本\nES6提供了新的数据结构Set。它类似于数组，但是成员的值都是唯一的，没有重复的值。\n这样我们的去重的思路可以变为，将数组转化为集合，再由集合转化为数组。\n```js\n[...new Set(arr)]\n```\n配合babel之后，这行代码应该是真正的终极版。\n","source":"_posts/array-remove-duplicates.md","raw":"---\ntitle: js数组去重\ncategories: Javascript\ndate: 2016-06-05 20:57:53\ntags:\n- 数组去重\n---\n\n## 最简洁\n```js\n//利用Array.filter\nvar arr = [\"1\", \"2\", \"3\", \"1\", \"3\"];\narr = arr.filter( function( item, index, inputArray ) {\n           return inputArray.indexOf(item) == index;\n    });//Output: [\"1\", \"2\", \"3\"]\n```\n这个写法相对简洁，但是并不怎么效率`O(n^2)`，不适合过长的数组。\n\n<!-- more -->\n\n## 改进版\n```js\nfunction uniq(a) {\n    var seen = {};\n    return arr.filter(function(item) {\n        return seen.hasOwnProperty(item) ? false : (seen[item] = true);\n    });\n}\n```\n这个写法比上一个效率得多，时间复杂度O(n),但是有两个缺陷：\n* 对于`Number`和`String`来说，该算法不能区分，比如：\n```js\nuniq([1,\"1\",2,\"2\"])//返回[1, 2]\n```\n* 同理，对于对象来说也不能区分，所有对象都被认为相等。\n所以使用时要明确使用场景。\n```js\nuniq([{foo:1},{foo:2}])//返回[{foo:1}]\n```\n\n## 最终版\n```js\nfunction uniq(a) {\n    var prims = {\"boolean\":{}, \"number\":{}, \"string\":{}}, objs = [];\n\n    return a.filter(function(item) {\n        var type = typeof item;\n        if(type in prims)\n            return prims[type].hasOwnProperty(item) ? false : (prims[type][item] = true);\n        else\n            return objs.indexOf(item) >= 0 ? false : objs.push(item);\n    });\n}\n```\n\n## ES6版本\nES6提供了新的数据结构Set。它类似于数组，但是成员的值都是唯一的，没有重复的值。\n这样我们的去重的思路可以变为，将数组转化为集合，再由集合转化为数组。\n```js\n[...new Set(arr)]\n```\n配合babel之后，这行代码应该是真正的终极版。\n","slug":"array-remove-duplicates","published":1,"updated":"2016-06-05T15:34:57.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirvtn4ob0002plnyyz8wrb5t","content":"<h2 id=\"最简洁\"><a href=\"#最简洁\" class=\"headerlink\" title=\"最简洁\"></a>最简洁</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//利用Array.filter</span></div><div class=\"line\"><span class=\"keyword\">var</span> arr = [<span class=\"string\">\"1\"</span>, <span class=\"string\">\"2\"</span>, <span class=\"string\">\"3\"</span>, <span class=\"string\">\"1\"</span>, <span class=\"string\">\"3\"</span>];</div><div class=\"line\">arr = arr.filter( <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"> item, index, inputArray </span>) </span>&#123;</div><div class=\"line\">           <span class=\"keyword\">return</span> inputArray.indexOf(item) == index;</div><div class=\"line\">    &#125;);<span class=\"comment\">//Output: [\"1\", \"2\", \"3\"]</span></div></pre></td></tr></table></figure>\n<p>这个写法相对简洁，但是并不怎么效率<code>O(n^2)</code>，不适合过长的数组。</p>\n<a id=\"more\"></a>\n<h2 id=\"改进版\"><a href=\"#改进版\" class=\"headerlink\" title=\"改进版\"></a>改进版</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">uniq</span>(<span class=\"params\">a</span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">var</span> seen = &#123;&#125;;</div><div class=\"line\">    <span class=\"keyword\">return</span> arr.filter(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">item</span>) </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> seen.hasOwnProperty(item) ? <span class=\"literal\">false</span> : (seen[item] = <span class=\"literal\">true</span>);</div><div class=\"line\">    &#125;);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>这个写法比上一个效率得多，时间复杂度O(n),但是有两个缺陷：</p>\n<ul>\n<li><p>对于<code>Number</code>和<code>String</code>来说，该算法不能区分，比如：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">uniq([<span class=\"number\">1</span>,<span class=\"string\">\"1\"</span>,<span class=\"number\">2</span>,<span class=\"string\">\"2\"</span>])<span class=\"comment\">//返回[1, 2]</span></div></pre></td></tr></table></figure>\n</li>\n<li><p>同理，对于对象来说也不能区分，所有对象都被认为相等。<br>所以使用时要明确使用场景。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">uniq([&#123;foo:<span class=\"number\">1</span>&#125;,&#123;foo:<span class=\"number\">2</span>&#125;])<span class=\"comment\">//返回[&#123;foo:1&#125;]</span></div></pre></td></tr></table></figure>\n</li>\n</ul>\n<h2 id=\"最终版\"><a href=\"#最终版\" class=\"headerlink\" title=\"最终版\"></a>最终版</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">uniq</span>(<span class=\"params\">a</span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">var</span> prims = &#123;<span class=\"string\">\"boolean\"</span>:&#123;&#125;, <span class=\"string\">\"number\"</span>:&#123;&#125;, <span class=\"string\">\"string\"</span>:&#123;&#125;&#125;, objs = [];</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">return</span> a.filter(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">item</span>) </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">var</span> type = <span class=\"keyword\">typeof</span> item;</div><div class=\"line\">        <span class=\"keyword\">if</span>(type <span class=\"keyword\">in</span> prims)</div><div class=\"line\">            <span class=\"keyword\">return</span> prims[type].hasOwnProperty(item) ? <span class=\"literal\">false</span> : (prims[type][item] = <span class=\"literal\">true</span>);</div><div class=\"line\">        <span class=\"keyword\">else</span></div><div class=\"line\">            <span class=\"keyword\">return</span> objs.indexOf(item) &gt;= <span class=\"number\">0</span> ? <span class=\"literal\">false</span> : objs.push(item);</div><div class=\"line\">    &#125;);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"ES6版本\"><a href=\"#ES6版本\" class=\"headerlink\" title=\"ES6版本\"></a>ES6版本</h2><p>ES6提供了新的数据结构Set。它类似于数组，但是成员的值都是唯一的，没有重复的值。<br>这样我们的去重的思路可以变为，将数组转化为集合，再由集合转化为数组。<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">[...new <span class=\"built_in\">Set</span>(arr)]</div></pre></td></tr></table></figure></p>\n<p>配合babel之后，这行代码应该是真正的终极版。</p>\n","excerpt":"<h2 id=\"最简洁\"><a href=\"#最简洁\" class=\"headerlink\" title=\"最简洁\"></a>最简洁</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//利用Array.filter</span></div><div class=\"line\"><span class=\"keyword\">var</span> arr = [<span class=\"string\">\"1\"</span>, <span class=\"string\">\"2\"</span>, <span class=\"string\">\"3\"</span>, <span class=\"string\">\"1\"</span>, <span class=\"string\">\"3\"</span>];</div><div class=\"line\">arr = arr.filter( <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"> item, index, inputArray </span>) </span>&#123;</div><div class=\"line\">           <span class=\"keyword\">return</span> inputArray.indexOf(item) == index;</div><div class=\"line\">    &#125;);<span class=\"comment\">//Output: [\"1\", \"2\", \"3\"]</span></div></pre></td></tr></table></figure>\n<p>这个写法相对简洁，但是并不怎么效率<code>O(n^2)</code>，不适合过长的数组。</p>","more":"<h2 id=\"改进版\"><a href=\"#改进版\" class=\"headerlink\" title=\"改进版\"></a>改进版</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">uniq</span>(<span class=\"params\">a</span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">var</span> seen = &#123;&#125;;</div><div class=\"line\">    <span class=\"keyword\">return</span> arr.filter(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">item</span>) </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> seen.hasOwnProperty(item) ? <span class=\"literal\">false</span> : (seen[item] = <span class=\"literal\">true</span>);</div><div class=\"line\">    &#125;);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>这个写法比上一个效率得多，时间复杂度O(n),但是有两个缺陷：</p>\n<ul>\n<li><p>对于<code>Number</code>和<code>String</code>来说，该算法不能区分，比如：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">uniq([<span class=\"number\">1</span>,<span class=\"string\">\"1\"</span>,<span class=\"number\">2</span>,<span class=\"string\">\"2\"</span>])<span class=\"comment\">//返回[1, 2]</span></div></pre></td></tr></table></figure>\n</li>\n<li><p>同理，对于对象来说也不能区分，所有对象都被认为相等。<br>所以使用时要明确使用场景。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">uniq([&#123;foo:<span class=\"number\">1</span>&#125;,&#123;foo:<span class=\"number\">2</span>&#125;])<span class=\"comment\">//返回[&#123;foo:1&#125;]</span></div></pre></td></tr></table></figure>\n</li>\n</ul>\n<h2 id=\"最终版\"><a href=\"#最终版\" class=\"headerlink\" title=\"最终版\"></a>最终版</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">uniq</span>(<span class=\"params\">a</span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">var</span> prims = &#123;<span class=\"string\">\"boolean\"</span>:&#123;&#125;, <span class=\"string\">\"number\"</span>:&#123;&#125;, <span class=\"string\">\"string\"</span>:&#123;&#125;&#125;, objs = [];</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">return</span> a.filter(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">item</span>) </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">var</span> type = <span class=\"keyword\">typeof</span> item;</div><div class=\"line\">        <span class=\"keyword\">if</span>(type <span class=\"keyword\">in</span> prims)</div><div class=\"line\">            <span class=\"keyword\">return</span> prims[type].hasOwnProperty(item) ? <span class=\"literal\">false</span> : (prims[type][item] = <span class=\"literal\">true</span>);</div><div class=\"line\">        <span class=\"keyword\">else</span></div><div class=\"line\">            <span class=\"keyword\">return</span> objs.indexOf(item) &gt;= <span class=\"number\">0</span> ? <span class=\"literal\">false</span> : objs.push(item);</div><div class=\"line\">    &#125;);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"ES6版本\"><a href=\"#ES6版本\" class=\"headerlink\" title=\"ES6版本\"></a>ES6版本</h2><p>ES6提供了新的数据结构Set。它类似于数组，但是成员的值都是唯一的，没有重复的值。<br>这样我们的去重的思路可以变为，将数组转化为集合，再由集合转化为数组。<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">[...new <span class=\"built_in\">Set</span>(arr)]</div></pre></td></tr></table></figure></p>\n<p>配合babel之后，这行代码应该是真正的终极版。</p>"},{"title":"手动安装electron","date":"2016-08-11T14:18:57.000Z","_content":"\n天朝这个网络环境真是不说什么了。。在`npm install nightmare`的过程中看到在下载electron结果就是一辈子的0%。后来切到了淘宝的npm镜像还是不管用。然后发现这个玩意还得单独下。\n\n切到淘宝镜像的方法就不说了，[这里有说明](https://npm.taobao.org/)。\n\n### 安装Electron\n\n1、从[淘宝的Electron镜像](https://npm.taobao.org/mirrors/electron/)下载对应的版本，下载到根目录下的`.electron`文件夹下，然后执行`npm install electron-prebuilt`或者其他的需要引入electron的包的命令(比如npm install nightmare)。\n","source":"_posts/electron-install.md","raw":"---\ntitle: 手动安装electron\ndate: 2016-08-11 22:18:57\ncategories: Node\ntags:\n- Node\n- Electron\n- install\n- 安装\n- nightmare\n---\n\n天朝这个网络环境真是不说什么了。。在`npm install nightmare`的过程中看到在下载electron结果就是一辈子的0%。后来切到了淘宝的npm镜像还是不管用。然后发现这个玩意还得单独下。\n\n切到淘宝镜像的方法就不说了，[这里有说明](https://npm.taobao.org/)。\n\n### 安装Electron\n\n1、从[淘宝的Electron镜像](https://npm.taobao.org/mirrors/electron/)下载对应的版本，下载到根目录下的`.electron`文件夹下，然后执行`npm install electron-prebuilt`或者其他的需要引入electron的包的命令(比如npm install nightmare)。\n","slug":"electron-install","published":1,"updated":"2016-08-11T14:27:57.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirvtn4of0005plnysza297wg","content":"<p>天朝这个网络环境真是不说什么了。。在<code>npm install nightmare</code>的过程中看到在下载electron结果就是一辈子的0%。后来切到了淘宝的npm镜像还是不管用。然后发现这个玩意还得单独下。</p>\n<p>切到淘宝镜像的方法就不说了，<a href=\"https://npm.taobao.org/\" target=\"_blank\" rel=\"external\">这里有说明</a>。</p>\n<h3 id=\"安装Electron\"><a href=\"#安装Electron\" class=\"headerlink\" title=\"安装Electron\"></a>安装Electron</h3><p>1、从<a href=\"https://npm.taobao.org/mirrors/electron/\" target=\"_blank\" rel=\"external\">淘宝的Electron镜像</a>下载对应的版本，下载到根目录下的<code>.electron</code>文件夹下，然后执行<code>npm install electron-prebuilt</code>或者其他的需要引入electron的包的命令(比如npm install nightmare)。</p>\n","excerpt":"","more":"<p>天朝这个网络环境真是不说什么了。。在<code>npm install nightmare</code>的过程中看到在下载electron结果就是一辈子的0%。后来切到了淘宝的npm镜像还是不管用。然后发现这个玩意还得单独下。</p>\n<p>切到淘宝镜像的方法就不说了，<a href=\"https://npm.taobao.org/\">这里有说明</a>。</p>\n<h3 id=\"安装Electron\"><a href=\"#安装Electron\" class=\"headerlink\" title=\"安装Electron\"></a>安装Electron</h3><p>1、从<a href=\"https://npm.taobao.org/mirrors/electron/\">淘宝的Electron镜像</a>下载对应的版本，下载到根目录下的<code>.electron</code>文件夹下，然后执行<code>npm install electron-prebuilt</code>或者其他的需要引入electron的包的命令(比如npm install nightmare)。</p>\n"},{"title":"github个人收藏集合","date":"2016-05-16T14:36:25.000Z","_content":"\n## 前端\n1、[smartcrop,一个有脑子的js图片裁切库](https://github.com/jwagner/smartcrop.js)\n2、[前端资源大合集](https://github.com/nicejade/Front-end-tutorial)\n3、[picturefill,响应式图片](https://github.com/scottjehl/picturefill)\n4、[packery,布局库，瀑布流](https://github.com/metafizzy/packery)\n5、[font-spider,web字体压缩](https://github.com/aui/font-spider)\n6、[please-wait,loading动画库](https://github.com/Pathgather/please-wait)\n7、[提取图片主色调](https://github.com/LukyVj/Colorify.js)\n8、[turntable,jQuery插件，全景图](https://github.com/polarnotion/turntable/)\n9、[Motio,全景图](https://github.com/darsain/motio)\n10、[给交互添加声音](https://github.com/mahdif/loud-links/)\n11、[JavaScript Style Guide](https://github.com/airbnb/javascript)\n12、[list.js,搜索过滤排序各种列表，表格](https://github.com/javve/list.js)\n\n\n## 资源类\n1、[收集&推荐优秀的 Apps/硬件/技巧/周边等](收集&推荐优秀的 Apps/硬件/技巧/周边等)\n2、[You Don't Know JS](https://github.com/getify/You-Dont-Know-JS)\n","source":"_posts/github-star-collection.md","raw":"---\ntitle: github个人收藏集合\ndate: 2016-05-16 22:36:25\ncategories: gitHub备胎归档\ntags:\n- gitHub\n- 收藏\n---\n\n## 前端\n1、[smartcrop,一个有脑子的js图片裁切库](https://github.com/jwagner/smartcrop.js)\n2、[前端资源大合集](https://github.com/nicejade/Front-end-tutorial)\n3、[picturefill,响应式图片](https://github.com/scottjehl/picturefill)\n4、[packery,布局库，瀑布流](https://github.com/metafizzy/packery)\n5、[font-spider,web字体压缩](https://github.com/aui/font-spider)\n6、[please-wait,loading动画库](https://github.com/Pathgather/please-wait)\n7、[提取图片主色调](https://github.com/LukyVj/Colorify.js)\n8、[turntable,jQuery插件，全景图](https://github.com/polarnotion/turntable/)\n9、[Motio,全景图](https://github.com/darsain/motio)\n10、[给交互添加声音](https://github.com/mahdif/loud-links/)\n11、[JavaScript Style Guide](https://github.com/airbnb/javascript)\n12、[list.js,搜索过滤排序各种列表，表格](https://github.com/javve/list.js)\n\n\n## 资源类\n1、[收集&推荐优秀的 Apps/硬件/技巧/周边等](收集&推荐优秀的 Apps/硬件/技巧/周边等)\n2、[You Don't Know JS](https://github.com/getify/You-Dont-Know-JS)\n","slug":"github-star-collection","published":1,"updated":"2016-07-03T11:53:49.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirvtn4oi0006plnyhqlo45de","content":"<h2 id=\"前端\"><a href=\"#前端\" class=\"headerlink\" title=\"前端\"></a>前端</h2><p>1、<a href=\"https://github.com/jwagner/smartcrop.js\" target=\"_blank\" rel=\"external\">smartcrop,一个有脑子的js图片裁切库</a><br>2、<a href=\"https://github.com/nicejade/Front-end-tutorial\" target=\"_blank\" rel=\"external\">前端资源大合集</a><br>3、<a href=\"https://github.com/scottjehl/picturefill\" target=\"_blank\" rel=\"external\">picturefill,响应式图片</a><br>4、<a href=\"https://github.com/metafizzy/packery\" target=\"_blank\" rel=\"external\">packery,布局库，瀑布流</a><br>5、<a href=\"https://github.com/aui/font-spider\" target=\"_blank\" rel=\"external\">font-spider,web字体压缩</a><br>6、<a href=\"https://github.com/Pathgather/please-wait\" target=\"_blank\" rel=\"external\">please-wait,loading动画库</a><br>7、<a href=\"https://github.com/LukyVj/Colorify.js\" target=\"_blank\" rel=\"external\">提取图片主色调</a><br>8、<a href=\"https://github.com/polarnotion/turntable/\" target=\"_blank\" rel=\"external\">turntable,jQuery插件，全景图</a><br>9、<a href=\"https://github.com/darsain/motio\" target=\"_blank\" rel=\"external\">Motio,全景图</a><br>10、<a href=\"https://github.com/mahdif/loud-links/\" target=\"_blank\" rel=\"external\">给交互添加声音</a><br>11、<a href=\"https://github.com/airbnb/javascript\" target=\"_blank\" rel=\"external\">JavaScript Style Guide</a><br>12、<a href=\"https://github.com/javve/list.js\" target=\"_blank\" rel=\"external\">list.js,搜索过滤排序各种列表，表格</a></p>\n<h2 id=\"资源类\"><a href=\"#资源类\" class=\"headerlink\" title=\"资源类\"></a>资源类</h2><p>1、<a href=\"收集&amp;推荐优秀的 Apps/硬件/技巧/周边等\">收集&amp;推荐优秀的 Apps/硬件/技巧/周边等</a><br>2、<a href=\"https://github.com/getify/You-Dont-Know-JS\" target=\"_blank\" rel=\"external\">You Don’t Know JS</a></p>\n","excerpt":"","more":"<h2 id=\"前端\"><a href=\"#前端\" class=\"headerlink\" title=\"前端\"></a>前端</h2><p>1、<a href=\"https://github.com/jwagner/smartcrop.js\">smartcrop,一个有脑子的js图片裁切库</a><br>2、<a href=\"https://github.com/nicejade/Front-end-tutorial\">前端资源大合集</a><br>3、<a href=\"https://github.com/scottjehl/picturefill\">picturefill,响应式图片</a><br>4、<a href=\"https://github.com/metafizzy/packery\">packery,布局库，瀑布流</a><br>5、<a href=\"https://github.com/aui/font-spider\">font-spider,web字体压缩</a><br>6、<a href=\"https://github.com/Pathgather/please-wait\">please-wait,loading动画库</a><br>7、<a href=\"https://github.com/LukyVj/Colorify.js\">提取图片主色调</a><br>8、<a href=\"https://github.com/polarnotion/turntable/\">turntable,jQuery插件，全景图</a><br>9、<a href=\"https://github.com/darsain/motio\">Motio,全景图</a><br>10、<a href=\"https://github.com/mahdif/loud-links/\">给交互添加声音</a><br>11、<a href=\"https://github.com/airbnb/javascript\">JavaScript Style Guide</a><br>12、<a href=\"https://github.com/javve/list.js\">list.js,搜索过滤排序各种列表，表格</a></p>\n<h2 id=\"资源类\"><a href=\"#资源类\" class=\"headerlink\" title=\"资源类\"></a>资源类</h2><p>1、<a href=\"收集&amp;推荐优秀的 Apps/硬件/技巧/周边等\">收集&amp;推荐优秀的 Apps/硬件/技巧/周边等</a><br>2、<a href=\"https://github.com/getify/You-Dont-Know-JS\">You Don’t Know JS</a></p>\n"},{"title":"利用Git Hooks自动化开发和部署","date":"2016-05-18T07:28:25.000Z","_content":"\n>翻译自[How To Use Git Hooks To Automate Development and Deployment Tasks\n](https://www.digitalocean.com/community/tutorials/how-to-use-git-hooks-to-automate-development-and-deployment-tasks)\n>\n\n## 介绍\n版本控制在现代软件开发中变成了一个核心的要求。它使得项目可以安全的记录变更，恢复，完整性检查，多人协作等等。`git`在这些年里被广泛的接纳，得益于其分布式的架构和它在向各方传递变更的速度。\n\n虽然`git`的工具套件提供了很多现成的特性，其中最实用的就是它的灵活性。通过对钩子系统的使用，git允许开发者或者管理员通过让git根据不同的events和actions的触发来运行自己的脚本，从而对git的功能进行扩展。\n\n这篇文章中，我会介绍git钩子的原理和如何实现自动化任务。我们将会使用Ubuntu 14.04，不过所有系统运行git都大同小异。\n\n<!-- more -->\n\n## 准备工作\n开始之前，你需要先在你的运行环境中安装好git。你可以参考这篇教程[Ubuntu14.04安装git](https://www.digitalocean.com/community/tutorials/how-to-install-git-on-ubuntu-14-04)。\n\n你应该简要了解git的使用。如果你需要入门，可以看看这个教程[Git介绍：安装，使用，分支](https://www.digitalocean.com/community/tutorial_series/introduction-to-git-installation-usage-and-branches)\n\n如果上边的都没有问题，继续往下看。\n\n## Git Hooks的基本原理\nGit Hooks是一个相当简单的概念，它为了满足特定的需求。当开发者开发一个协作的项目，维护代码风格，或者部署项目（这些都是使用git常见的情况）时，经常有有些重复性任务在每次完成一个动作时都要执行。\n\nGit钩子是基于事件的。当你运行了特定的git命令，git会检查git仓库中`hooks`路径下有没有相关脚本要执行。\n\n有的脚本在git指令之前执行，这可以用来确保代码的完整（进行一些完整性检查）或者提前部署一下环境。那些在git事件之后执行的脚本，一般就是用来部署代码，重新建立权限（一些git不能很好记录的事情）等等。\n\n使用git的这些功能，就可以强制实施策略，确保一致性，和控制你的环境，甚至处理部署任务。\n\nScott Chacon写的[Pro Git](http://git-scm.com/book)这本书试图将钩子归类，他是这样写的：\n\n* 客户端钩子：在提交者计算机上被调用和执行的钩子。这些可以进一步分为一些小的类别：\n\t* 提交工作流钩子：提交钩子是用来检测那些需要在提交的前后需要执行的动作。他们可以用来运行完整性检查,预填充提交信息和验证消息详情。你也可以基于提交来推送通知。\n\n\t* 邮件工作流的钩子：这一类的钩子包含了当你使用邮件补丁时触发的动作。类似Linux内核提交和通过邮件方法回看补丁。这些都和提交钩子是一样的，但是邮件钩子可以被负责申请提交代码的管理员所使用。\n\n\t* 其它：其它客户端钩子包括那些在merge,check out,rebase,rewrite,clean时执行的钩子。\n* 服务端钩子：这些钩子在那些用来接收推送代码的服务器上执行。通常，这就是项目的主要git仓库。同样，Chacon也把这些细分成一下几类。\n\t* `pre-receive`和`post-receive`: 这两个在服务器收到push操作时执行，比如检查项目一致性和在push之后立即部署项目。\n\t* `update`:这个和`pre-receive`很像，但是它是一个分支接着一个分支的运作的基础上,在每个分支被更新之前执行。\n\n这些分类能使我们对可以建立钩子的事件有了一个大体的认识。但是为了确切了解他们是怎么运作的，最好还是亲身试验来找出你想要实现的方案。\n\n某些钩子还需要参数。这意味着，当git为某个钩子调用脚本，它会传入脚本会用到的一些相关的数据，以便完成相应的任务。所有的hooks如下表所示。\n\nHook 名称   |     触发命令      |    描述     |     参数（数量和描述）  \n--------- | -------------| -------------| -------------\napplypatch-msg|`git am`|可以编辑提交信息，常用于验证或者标准化补丁信息。非零状态会放弃这次提交|1个参数，包含被建议提交信息的临时文件名\npre-applypatch | `git am`| 在补丁被运用之后，但是提交之前运行。非零退出，修改仍为未提交状态。可以用来在正式提交之前检查状态树 | 无\npost-applypatch|`git am`|这个钩子在补丁应用和提交之后运行。因此它无法阻止打补丁的过程，主要用于创建通知。|无\npre-commit|`git commit`|这个钩子在获取提交信息之前运行。返回非零值时放弃此次提交，它是用来检查提交本身(而不是提交信息）|无\nprepare-commit-msg|`git commit`|在接受到默认提交信息之后，在提交信息编辑器显示之前运行。返回非零值退出，放弃这次提交。它可以用来以一种不可被取消的方式编辑信息。|(1到3个参数)文件名连同提交信息，原始提交信息（`message`,`template`,`merge`,`squash`,`commit`),和提交的SHA-1校验和(当对已有信息进行操作时)。\ncommit-msg|`git commit`|可以被用来在信息被编辑之后调整信息，以便确保它符合标准，或者依照标准驳回此信息。如果该hook脚本以非零退出，`Git`放弃提交。|1个参数，存放提交信息的文件。\npost-commit| `git commit`|在整个提交过程完成后运行。因此，它不能中断提交。这个hook主要用来允许通知。|无\npre-rebase| `git rebase`| 当rebase一个分支的时候执行。主要用于在不可取的时候中止rebase。|(1到2个参数)上游分支的节点，需要被rebase的分支(在rebase分支为当前时不设置)\npost-checkout|`git checkout`和`git clone`|在更新工作树之后执行checkout或者clone之后运行。它主要用于验证状态，展示区别和在必要时配置环境。|(3个参数)之前`HEAD`的引用，新`HEAD`的引用，是否为一个检出的分支的标记。（1个参数）或者一个检出的文件（0）\npost-merge| `git merge`或`git pull`|在merge之后执行。因此，它不能中止merge操作，它可以用来存储或者申请权限或者其他不属于git的数据。| (1个参数)merge是否为squash的标记。\npre-push| `git push`| 在push到远程服务器之前执行。再加上参数，额外的信息，以`<本地ref> <本地sha1> <远程ref> <远程sha1>`的形式。解析输入可以获得可以用来检验的额外信息。比如说，如果`local sha1`是40个零的长度，push是一个删除操作，如果`remote sha1`是40个零，那么它是一个新的分支。这个特性可以将已经提交的refs和当前状况做很多比较。非零退出，将会中止这次提交。|(2个参数)远程地址名称，远程地址\npre-receive| 远程仓库`git-receive-pack`|在更新提交的refs之前，在远程仓库上运行。非零的状态中止。虽然不接受参数，它为每一个ref传递一个标准输入的字符串，以`<旧的值> <新的值> <ref的名称>`的形式。|无\nupdate| 远程仓库`git-receive-pack`| 在远程仓库上，每一个ref被提交运行一次，而不是每次提交都运行。非零的状态会中止。这可以用来确保所有的提交都只用fast forward模式|(三个参数)被更新的ref名称，旧的对象名，新的对象名。\npost-receive|远程仓库`git-receive-pack`|在所有的ref更新后运行。不需要参数，但是通过标准输入接受信息，格式为`<旧的值> <新的值> <ref的名称>`。因为在更新后运行，所以不能被中止。|无\npost-update|远程仓库`git-receive-pack`|在所有的refs都已经被push之后只运行一次。它在这方面和post-receive很相似，但是不接受之前和之后的值。它主要用来根据被推送的refs实现通知。| 每一个被推送的包含它名字的refs。\npre-auto-gc|`git gc --auto`|在`clean`仓库之前自动做一些检查|无\npost-rewrite|`git commit --amend`,`git-rebase`|当git命令重写已经提交的数据时执行。除了接受的参数，它还以`<旧sha1><新sha1>`的格式接受标准输入的字符串。|(1个参数)触发这个钩子的命令名称(amend或者rebase)\n\n现在你已经有了大体的概念，我们可以在几个场景下试验一下。\n\n## 建立一个仓库\n一开始，我们需要先建立一个新的空仓库，在我们的主目录下。我们可以给它命名为`proj`。\n\n```Bash\nmkdir ~/proj\ncd ~/proj\ngit init\n```\n```Bash\nInitialized empty Git repository in /home/demo/proj/.git/\n```\n现在，我们在这个在git控制下的空目录内。在我们开始之前，我们先看看目录中的隐藏文件，它们在`.git`目录下：\n```Bash\ncd .git\nls -F\n```\n```Bash\nbranches/  config  description  HEAD  hooks/  info/  objects/  refs/\n```\n我们可以看到一些文件和目录。我们感兴趣的就是这个`hooks`目录：\n```Bash\ncd hooks\nls -l\n```\n```Bash\ntotal 40\n-rwxrwxr-x 1 demo demo  452 Aug  8 16:50 applypatch-msg.sample\n-rwxrwxr-x 1 demo demo  896 Aug  8 16:50 commit-msg.sample\n-rwxrwxr-x 1 demo demo  189 Aug  8 16:50 post-update.sample\n-rwxrwxr-x 1 demo demo  398 Aug  8 16:50 pre-applypatch.sample\n-rwxrwxr-x 1 demo demo 1642 Aug  8 16:50 pre-commit.sample\n-rwxrwxr-x 1 demo demo 1239 Aug  8 16:50 prepare-commit-msg.sample\n-rwxrwxr-x 1 demo demo 1352 Aug  8 16:50 pre-push.sample\n-rwxrwxr-x 1 demo demo 4898 Aug  8 16:50 pre-rebase.sample\n-rwxrwxr-x 1 demo demo 3611 Aug  8 16:50 update.sample\n```\n在这儿，我们可以看到。首先，每一个文件都标记成了可执行。因为这些脚本都是按照名称执行的，他们必须是可执行的，而且它们的第一行必须是[Shebang(`#!`)](http://en.wikipedia.org/wiki/Shebang_(Unix)#Magic_number)指向正确的脚本解释器。比较常见的是bash，perl，python等。\n\n你还会注意到的是，所有文件都是以`.sample`结尾的。这是因为git只是简单的看文件名来查找要执行的hook文件。文件名和git想要查找的出现偏差，这样可以达到禁用的目的。想启用任意一个脚本，只需要去掉结尾的`.sample`后缀。\n\n让我们退回到我们的工作目录。\n```Bash\ncd ../..\n```\n## 第一个例子：用一个post-commit Hook来部署一个web服务。\n我们第一个例子，使用`post-commit`hook来展示，如何在每一次提交之后在本地web服务器中部署代码。这不是在生产环境中使用的hook，但是可以让你验证一些重要的，文档里没怎么体现的东西，他们是你在使用hooks的时候应该知道的。\n\n首先，我们安装一个Apache web server。\n\n```Bash\nsudo apt-get update\nsudo apt-get install apache2\n```\n为了让我们的脚本可以修改web根目录`/var/www/html`(这是Ubuntu14.04的文档根目录。可以按需修改)，我们需要有写权限。我们给我们的普通用户这个目录的所有权。输入以下命令：\n```Bash\nsudo chown -R `whoami`:`id -gn` /var/www/html\n```\n现在，在我们的项目根目录下，创建`index.html`文件\n```Bash\ncd ~/proj\nnano index.html\n```\n在文件中，我们添加一小段HTML主要用做论证我们的观点。不用太复杂：\n```Html\n<h1>Here is a title!</h1>\n<p>Please deploy me!</p>\n```\n添加这个文件到git：\n```Bash\ngit add .\n```\n在提交之前，我们将要为这个仓库建立我们的`post-commit`钩子。在`.git/hooks`中创建文件\n```Bash\nvim .git/hooks/post-commit\n```\n在我们在文件中添加脚本之前，我们需要知道git在运行钩子时如何建立环境。\n\n## 关于git钩子环境变量的一些题外话\n在我们开始写脚本之前，我们需要知道git钩子运行时建立的环境变量。为了让我们的脚本工作，我们最终需要解除一个git调用`post-commit`钩子时设置的环境变量。\n\n如果你希望写一个运行稳定的git钩子，你需要先理解一个很重要的知识点。git根据你调用哪个钩子来建立不同的环境变量。这意味着git获取信息的环境会根据钩子的不同而不同。\n\n第一个状况是，会使得你的脚本运行环境不可预测，如果你不知道哪个变量被自动设置了。第二个状况就是那个被设置的变量在git自身的文档里几乎没有体现。\n\n幸运的是，Mark Longair开发了当运行钩子时[检测git设置的每一个变量的方法](http://longair.net/blog/2011/04/09/missing-git-hooks-documentation/)。它涉及到在git钩子脚本中添加下列内容：\n```Bash\n#!/bin/bash\necho Running $BASH_SOURCE\nset | egrep GIT\necho PWD is $PWD\n```\n他的篇文章是2011年写的，当时git的版本是1.7.1，所以现在已经有了一些变化。我的这篇文章是2014年8月写的，当前git版本是1.9.1。\n\n在此git版本下的测试结果如下（包括工作目录）。测试用的本地工作目录为`/home/demo/test_hooks`和一个裸的远程仓库`/home/demo/origin/test_hooks.git`:\n\n* 钩子：`applypatch-msg`, `pre-applypatch`, `post-applypatch`\n\t* 环境变量：\n\t* `GIT_AUTHOR_DATE='Mon, 11 Aug 2014 11:25:16 -0400'`\n\t* `GIT_AUTHOR_EMAIL=demo@example.com`\n\t* `GIT_AUTHOR_NAME='Demo User'`\n\t* `GIT_INTERNAL_GETTEXT_SH_SCHEME=gnu`\n\t* `GIT_REFLOG_ACTION=am`\n\t* 工作目录：`/home/demo/test_hooks`\n\n* 钩子：`pre-commit`, `prepare-commit-msg`, `commit-msg`, `post-commit`\n\t* 环境变量：\n\t* `GIT_AUTHOR_DATE='@1407774159 -0400'`\n\t* `GIT_AUTHOR_EMAIL=demo@example.com`\n\t* `GIT_AUTHOR_NAME='Demo User'`\n\t* `GIT_DIR=.git`\n\t* `GIT_EDITOR=:`\n\t* `GIT_INDEX_FILE=.git/index`\n\t* `GIT_PREFIX=`\n\t* 工作目录：`/home/demo/test_hooks`\n* 钩子：`pre-rebase`\n\t* 环境变量：\n\t* `GIT_INTERNAL_GETTEXT_SH_SCHEME=gnu`\n\t* `GIT_REFLOG_ACTION=rebase`\n\t* 工作目录：`/home/demo/test_hooks`\n* 钩子：`post-checkout`\n\t* 环境变量：\n\t* `GIT_DIR=.git`\n\t* `GIT_PREFIX=`\n\t* 工作目录：`/home/demo/test_hooks`\n* 钩子：`post-merge`\n\t* 环境变量：\n\t* `GITHEAD_4b407c...`\n\t* `GIT_DIR=.git`\n\t* `GIT_INTERNAL_GETTEXT_SH_SCHEME=gnu`\n\t* `GIT_PREFIX=`\n\t* `GIT_REFLOG_ACTION='pull other master'`\n\t* 工作目录：`/home/demo/test_hooks`\n* 钩子：`pre-push`\n\t* 环境变量：\n\t* `GIT_PREFIX=`\n\t* 工作目录：`/home/demo/test_hooks`\n* 钩子：`pre-receive·`, `update`, `post-receive`, `post-update`\n\t* 环境变量：\n\t* `GIT_DIR=.`\n\t* 工作目录：`/home/demo/origin/test_hooks.git`\n* 钩子：`pre-auto-gc`\n\t* (未知，因为这个钩子很难可靠地触发)\n* 钩子：`post-rewrite`\n\t* 环境变量：\n\t* `GIT_AUTHOR_DATE='@1407773551 -0400'`\n\t* `GIT_AUTHOR_EMAIL=demo@example.com`\n\t* `GIT_AUTHOR_NAME='Demo User'`\n\t* `GIT_DIR=.git`\n\t* `GIT_PREFIX=`\n\t* 工作目录：`/home/demo/test_hooks`\n\n这些变量暗示了git如何查看自己的环境。我们将利用上述关于变量的信息来确保我们的脚本正确考虑了它的环境。\n\n## 回到脚本\n\n现在你对所需的环境有了一定概念（看一下为`post-commit`钩子所设置的变量），我们可以开始我们的脚本了。\n\n由于git钩子是标准脚本，我们需要告诉git，我们用什么解释器：\n```\n #!/bin/bash\n```\n\n在这个之后，我们只要在提交后使用git取出最新版本的仓库，放到web目录下。要完成这件事儿，我们需要把我们的工作目录设置到apache的文件根目录。我们也需要把我们的git目录设置为仓库的地址。\n\n我们想要强制操作来保证每一次都成功，即使当前工作目录中存在冲突。脚本应该这样：\n```\n #!/bin/bash\ngit --work-tree=/var/www/html --git-dir=/home/demo/proj/.git checkout -f\n```\n这时，我们已经几乎完成了。然而，我们需要更仔细查看每次`post-commit`钩子运行时的环境变量。尤其是`GIT_INDEX_FILE`被设置成`.git/index`。\n\n这个路径与工作目录相关，在我们的例子中是`/var/www/html`。由于git的index文件不存在，脚本会失效，如果我们保留当前的设置。为了避免这种情况，我们可以手动设置这个变量，这将导致git相对于仓库目录去搜索。我们需要在脚本中的`checkout`之前添加一行:\n```Bash\n #!/bin/bash\nunset GIT_INDEX_FILE\ngit --work-tree=/var/www/html --git-dir=/home/demo/proj/.git checkout -f\n```\n这些冲突正是git钩子出的问题经常很难诊断的原因。你必须清楚git是怎么构建它的运行环境的。\n\n当你编辑结束后，保存并退出这个文件。\n\n因为这是一个常规的脚本文件，我们需要让它有可执行权限：\n```Bash\nchmod +x .git/hooks/post-commit\n```\n现在，我们最终准备好在我们的git仓库中提交变更。确保你退到了正确的目录，并且提交这些变更：\n```Bash\ncd ~/proj\ngit commit -m \"here we go...\"\n```\n现在，如果你使用浏览器访问服务器的域名或者IP地址，你讲看到你刚刚创建的这个index.html文件：\n```\nhttp://server_domain_or_IP\n```\n{% asset_img first_deploy.png  %}\n\n正如你所见，我们最近的变更在提交之后被自动的推送到了服务器根目录下。我们可以再做一些改变来证明，钩子在每次提交之后都正确工作了。\n```Bash\necho \"<p>Here is a change.</p>\" >> index.html\ngit add .\ngit commit -m \"First change\"\n```\n当我们刷新浏览器，我们可以直接看到新的变化：\n{% asset_img deploy_changes.png %}\n\n如你所见，这种配置比较方便本地测试，然而，你可能永远不希望在生产环境中这样提交。还是在经过测试后确保没问题了再提交，这样比较安全。\n\n## 利用Git钩子在另外的生产环境中部署\n\n在第二个例子中，我们将要示范一个更新生产服务器更好的方式。我们可以通过使用push-to-deploy模型以便当我们推送到裸仓库时更新我们的web服务器。\n\n我们可以沿用上面的服务器当作开发机。这是我们做改动工作的地方。我们可以在每次提交之后看到改变。\n\n在我们的生产机器上，我们将会配置另一个web服务器，一个裸的仓库用来推送我们的变更，还有一个git钩子在每次接受到推送都会执行。以普通用户身份，用sudo，完成系列步骤。\n\n## 建立生产环境的post-receive钩子\n现在生产环境中安装web服务器：\n```Bash\nsudo apt-get update\nsudo apt-get install apache2\n```\n然后，我们再更改目录拥有者给当前用户：\n```Bash\nsudo chown -R `whoami`:`id -gn` /var/www/html\n```\n我们还需要在服务器上安装git：\n```Bash\nsudo apt-get install git\n```\n现在我们可以在home目录下创建一个目录，来存放我们的仓库。然后我们进入这个目录来初始化一个裸的仓库。裸仓库不包含工作目录，这对于服务器来说更好，因为我们不在上面直接工作：\n```Bash\nmkdir ~/proj\ncd ~/proj\ngit init --bare\n```\n这是一个裸仓库，所以没有工作目录并且所有文件都在`.git`文件夹下，该文件夹通常在根目录下。\n\n我们需要创建另一个git钩子，这一次，我们感兴趣的是post-receive钩子，它是在服务器端接收到`git push`时执行。在编辑器中打开这个文件：\n```Bash\nnano hooks/post-receive\n```\n在脚本的开始，我们需要指定我们脚本的类型，然后我们可以写和`post-commit`一样的checkout命令，修改成这台机器使用的目录：\n```Bash\n #!/bin/bash\ngit --work-tree=/var/www/html --git-dir=/home/demo/proj checkout -f\n```\n由于这是一个裸仓库，`--git-dir`应该指向仓库目录的顶层。其它都和之前一样。\n\n然后，我们需要在脚本里增加一些额外的逻辑。如果我们不小心推送了`test-feature`分支到服务器上，我们不希望它被部署。我们想确保只部署`master`分支。\n\n关于`post-receive`钩子，你在之前的表格里可能已经注意到，git传递旧版本的提交hash，新版本的提交hash还有作为标准输入到脚本被推送的引用。我们可以通过它检查，该引用是否为`master`分支。\n\n首先我们需要读取这个标注输入。每一个被推送的引用，它的三部分信息（旧版本，新版本，引用）被提供给脚本，作为标准输入，之间用空格分开。我们可以用一个`while`循环包住这条`git`命令。\n```Bash\n #!/bin/bash\nwhile read oldrev newrev ref\ndo\n    git --work-tree=/var/www/html --git-dir=/home/demo/proj checkout -f\ndone\n```\n现在，我们将根据你被提交的内容产生了3个变量。对于master分支的推送，`ref`对象将包含像是`refs/heads/master`的东西。我们可以通过使用`if`检查一下服务器接收到的`ref`是否为这种格式：\n\n```Bash\n#!/bin/bash\nwhile read oldrev newrev ref\ndo\n    if [[ $ref =~ .*/master$ ]];\n    then\n        git --work-tree=/var/www/html --git-dir=/home/demo/proj checkout -f\n    fi\ndone\n```\n对于服务器端的钩子，git实际上可以将信息传回客户端。任何发送到标准输出的东西都会跳转到客户端。这给了我们机会显式通知用户做了什么样的决策。\n\n我们应该增加一些文字，描述我们检测到的情况，和我们执行的动作。我们应该添加一个`else`代码，在一个非`master`分支被成功接收时通知用户，即使这个动作并不触发部署：\n```Bash\n #!/bin/bash\nwhile read oldrev newrev ref\ndo\n    if [[ $ref =~ .*/master$ ]];\n    then\n        echo \"Master ref received.  Deploying master branch to production...\"\n        git --work-tree=/var/www/html --git-dir=/home/demo/proj checkout -f\n    else\n        echo \"Ref $ref successfully received.  Doing nothing: only the master branch may be deployed on this server.\"\n    fi\ndone\n```\n\n结束之后，保存并关闭这个文件。\n\n切记，我们必须给这个脚本可执行的权限。\n\n```Bash\nchmod +x hooks/post-receive\n```\n现在我们可以在我们本地对这个远程服务器建立访问了。\n\n## 在本地机器上配置远程服务器\n\n回到我们的本地机器（开发机）,进入我们项目的工作目录：\n```Bash\ncd ~/proj\n```\n在文件夹内，添加远程服务器，命名为`production`。你需要知道声场服务器的用户名，IP地址或者域名。你还需要知道你裸仓库对于home目录的相对路径。\n\n你输入的命令应该是大体这个样子：\n```Bash\ngit remote add production demo@server_domain_or_IP:proj\n```\n现在我们推送我们本地分支到生产服务器：\n```Bash\ngit push production master\n```\n如果你没配置SSH的key，那你可能必须输入生产服务器的用户密码。你会看到类似下面的显示：\n```\nCounting objects: 8, done.\nDelta compression using up to 2 threads.\nCompressing objects: 100% (3/3), done.\nWriting objects: 100% (4/4), 473 bytes | 0 bytes/s, done.\nTotal 4 (delta 0), reused 0 (delta 0)\nremote: Master ref received.  Deploying master branch...\nTo demo@107.170.14.32:proj\n   009183f..f1b9027  master -> master\n```\n\n如你所见，来自我们`post-receive`钩子的文本出现在命令行的输出中。如果我们使用浏览器访问我们生产服务器的域名或者IP地址，我们可以看到我们项目的当前版本：\n{% asset_img pushed_prod.png  %}\n\n看起来钩子收到信息时成功将我们的代码推送到生产服务器。\n\n现在，让我们测试我们的新代码。回到开发机上，我们将创建一个新分支并进行一些改变。这样，我们可以确保在我们部署到生产环境之前，一切就绪。\n\n建立一个叫`\u0006test_feature`的新分支，然后checkout：\n```Bash\ngit checkout -b test_feature\n```\n\n我们现在处于`test_feature`分支中，让我们做一些改变，稍后推送到生产服务器中。我们将提交到这个分支中：\n```Bash\necho \"<h2>New Feature Here</h2>\" >> index.html\ngit add .\ngit commit -m \"Trying out new feature\"\n```\n这时候，如果你访问开发机的IP地址或者域名，你将看到你的做的修改。\n{% asset_img devel_commit.png  %}\n\n这是因为开发机仍在每次提交后部署。这个工作流很棒，它可以让我们在部署生产环境之前测试我们的修改。\n\n我们可以推送我们的`test_feature`分支到远程生产服务器：\n```Bash\ngit push production test_feature\n```\n\n在`post-receive`钩子的输出中应该有其它的信息：\n```\nCounting objects: 5, done.\nDelta compression using up to 2 threads.\nCompressing objects: 100% (2/2), done.\nWriting objects: 100% (3/3), 301 bytes | 0 bytes/s, done.\nTotal 3 (delta 1), reused 0 (delta 0)\nremote: Ref refs/heads/test_feature successfully received.  Doing nothing: only the master branch may be deployed on this server\nTo demo@107.170.14.32:proj\n   83e9dc4..5617b50  test_feature -> test_feature\n```\n如果我们在浏览器中查看生产服务器，你将看到什么都没有改变。\n这就是我们所希望的，因为我们的改变不在master分支中。\n\n现在我们已经在开发机器上测试了我们的修改，我们确定要合并这个修改到master分支上。我们可以checkout到master分支，然后在开发机上merge`test_feature`分支。\n\n```\ngit checkout master\ngit merge test_feature\n```\n现在，你已经将新分支合并到主分支。推送到生产服务器将部署这个修改：\n```Bash\ngit push production master\n```\n如果我们在浏览器查看生产服务器，我们将看到我们的改变：\n\n{% asset_img new_prod.png  %}\n\n使用这个工作流，我们可以在开发机上直接显示提交的修改。生产机器只在master分支被推送时候被更新。\n\n## 结论\n如果你跟着我的步骤做完，你应该已经了解了git钩子有多种方法将我们一部分工作自动化。它们可以帮你部署代码，可以通过拒绝不符合要求的修改和提交，来控制代码质量。\n\n然而，git钩子的效用很难讨论，它实际的实现非常复杂。练习实现多种配置，试验解析参数，标准输入，跟踪git如何构建钩子的环境将会带你慢慢了解如何写有效的钩子脚本。从长远上看，时间的投入通常是值得的，它可以很简单的节省你和你团队在项目工作中很多手动操作的负担。\n","source":"_posts/git-hooks.md","raw":"---\ntitle: 利用Git Hooks自动化开发和部署\ncategories: 服务器上那点事儿\ndate: 2016-05-18 15:28:25\ntags:\n- Git\n- hook\n---\n\n>翻译自[How To Use Git Hooks To Automate Development and Deployment Tasks\n](https://www.digitalocean.com/community/tutorials/how-to-use-git-hooks-to-automate-development-and-deployment-tasks)\n>\n\n## 介绍\n版本控制在现代软件开发中变成了一个核心的要求。它使得项目可以安全的记录变更，恢复，完整性检查，多人协作等等。`git`在这些年里被广泛的接纳，得益于其分布式的架构和它在向各方传递变更的速度。\n\n虽然`git`的工具套件提供了很多现成的特性，其中最实用的就是它的灵活性。通过对钩子系统的使用，git允许开发者或者管理员通过让git根据不同的events和actions的触发来运行自己的脚本，从而对git的功能进行扩展。\n\n这篇文章中，我会介绍git钩子的原理和如何实现自动化任务。我们将会使用Ubuntu 14.04，不过所有系统运行git都大同小异。\n\n<!-- more -->\n\n## 准备工作\n开始之前，你需要先在你的运行环境中安装好git。你可以参考这篇教程[Ubuntu14.04安装git](https://www.digitalocean.com/community/tutorials/how-to-install-git-on-ubuntu-14-04)。\n\n你应该简要了解git的使用。如果你需要入门，可以看看这个教程[Git介绍：安装，使用，分支](https://www.digitalocean.com/community/tutorial_series/introduction-to-git-installation-usage-and-branches)\n\n如果上边的都没有问题，继续往下看。\n\n## Git Hooks的基本原理\nGit Hooks是一个相当简单的概念，它为了满足特定的需求。当开发者开发一个协作的项目，维护代码风格，或者部署项目（这些都是使用git常见的情况）时，经常有有些重复性任务在每次完成一个动作时都要执行。\n\nGit钩子是基于事件的。当你运行了特定的git命令，git会检查git仓库中`hooks`路径下有没有相关脚本要执行。\n\n有的脚本在git指令之前执行，这可以用来确保代码的完整（进行一些完整性检查）或者提前部署一下环境。那些在git事件之后执行的脚本，一般就是用来部署代码，重新建立权限（一些git不能很好记录的事情）等等。\n\n使用git的这些功能，就可以强制实施策略，确保一致性，和控制你的环境，甚至处理部署任务。\n\nScott Chacon写的[Pro Git](http://git-scm.com/book)这本书试图将钩子归类，他是这样写的：\n\n* 客户端钩子：在提交者计算机上被调用和执行的钩子。这些可以进一步分为一些小的类别：\n\t* 提交工作流钩子：提交钩子是用来检测那些需要在提交的前后需要执行的动作。他们可以用来运行完整性检查,预填充提交信息和验证消息详情。你也可以基于提交来推送通知。\n\n\t* 邮件工作流的钩子：这一类的钩子包含了当你使用邮件补丁时触发的动作。类似Linux内核提交和通过邮件方法回看补丁。这些都和提交钩子是一样的，但是邮件钩子可以被负责申请提交代码的管理员所使用。\n\n\t* 其它：其它客户端钩子包括那些在merge,check out,rebase,rewrite,clean时执行的钩子。\n* 服务端钩子：这些钩子在那些用来接收推送代码的服务器上执行。通常，这就是项目的主要git仓库。同样，Chacon也把这些细分成一下几类。\n\t* `pre-receive`和`post-receive`: 这两个在服务器收到push操作时执行，比如检查项目一致性和在push之后立即部署项目。\n\t* `update`:这个和`pre-receive`很像，但是它是一个分支接着一个分支的运作的基础上,在每个分支被更新之前执行。\n\n这些分类能使我们对可以建立钩子的事件有了一个大体的认识。但是为了确切了解他们是怎么运作的，最好还是亲身试验来找出你想要实现的方案。\n\n某些钩子还需要参数。这意味着，当git为某个钩子调用脚本，它会传入脚本会用到的一些相关的数据，以便完成相应的任务。所有的hooks如下表所示。\n\nHook 名称   |     触发命令      |    描述     |     参数（数量和描述）  \n--------- | -------------| -------------| -------------\napplypatch-msg|`git am`|可以编辑提交信息，常用于验证或者标准化补丁信息。非零状态会放弃这次提交|1个参数，包含被建议提交信息的临时文件名\npre-applypatch | `git am`| 在补丁被运用之后，但是提交之前运行。非零退出，修改仍为未提交状态。可以用来在正式提交之前检查状态树 | 无\npost-applypatch|`git am`|这个钩子在补丁应用和提交之后运行。因此它无法阻止打补丁的过程，主要用于创建通知。|无\npre-commit|`git commit`|这个钩子在获取提交信息之前运行。返回非零值时放弃此次提交，它是用来检查提交本身(而不是提交信息）|无\nprepare-commit-msg|`git commit`|在接受到默认提交信息之后，在提交信息编辑器显示之前运行。返回非零值退出，放弃这次提交。它可以用来以一种不可被取消的方式编辑信息。|(1到3个参数)文件名连同提交信息，原始提交信息（`message`,`template`,`merge`,`squash`,`commit`),和提交的SHA-1校验和(当对已有信息进行操作时)。\ncommit-msg|`git commit`|可以被用来在信息被编辑之后调整信息，以便确保它符合标准，或者依照标准驳回此信息。如果该hook脚本以非零退出，`Git`放弃提交。|1个参数，存放提交信息的文件。\npost-commit| `git commit`|在整个提交过程完成后运行。因此，它不能中断提交。这个hook主要用来允许通知。|无\npre-rebase| `git rebase`| 当rebase一个分支的时候执行。主要用于在不可取的时候中止rebase。|(1到2个参数)上游分支的节点，需要被rebase的分支(在rebase分支为当前时不设置)\npost-checkout|`git checkout`和`git clone`|在更新工作树之后执行checkout或者clone之后运行。它主要用于验证状态，展示区别和在必要时配置环境。|(3个参数)之前`HEAD`的引用，新`HEAD`的引用，是否为一个检出的分支的标记。（1个参数）或者一个检出的文件（0）\npost-merge| `git merge`或`git pull`|在merge之后执行。因此，它不能中止merge操作，它可以用来存储或者申请权限或者其他不属于git的数据。| (1个参数)merge是否为squash的标记。\npre-push| `git push`| 在push到远程服务器之前执行。再加上参数，额外的信息，以`<本地ref> <本地sha1> <远程ref> <远程sha1>`的形式。解析输入可以获得可以用来检验的额外信息。比如说，如果`local sha1`是40个零的长度，push是一个删除操作，如果`remote sha1`是40个零，那么它是一个新的分支。这个特性可以将已经提交的refs和当前状况做很多比较。非零退出，将会中止这次提交。|(2个参数)远程地址名称，远程地址\npre-receive| 远程仓库`git-receive-pack`|在更新提交的refs之前，在远程仓库上运行。非零的状态中止。虽然不接受参数，它为每一个ref传递一个标准输入的字符串，以`<旧的值> <新的值> <ref的名称>`的形式。|无\nupdate| 远程仓库`git-receive-pack`| 在远程仓库上，每一个ref被提交运行一次，而不是每次提交都运行。非零的状态会中止。这可以用来确保所有的提交都只用fast forward模式|(三个参数)被更新的ref名称，旧的对象名，新的对象名。\npost-receive|远程仓库`git-receive-pack`|在所有的ref更新后运行。不需要参数，但是通过标准输入接受信息，格式为`<旧的值> <新的值> <ref的名称>`。因为在更新后运行，所以不能被中止。|无\npost-update|远程仓库`git-receive-pack`|在所有的refs都已经被push之后只运行一次。它在这方面和post-receive很相似，但是不接受之前和之后的值。它主要用来根据被推送的refs实现通知。| 每一个被推送的包含它名字的refs。\npre-auto-gc|`git gc --auto`|在`clean`仓库之前自动做一些检查|无\npost-rewrite|`git commit --amend`,`git-rebase`|当git命令重写已经提交的数据时执行。除了接受的参数，它还以`<旧sha1><新sha1>`的格式接受标准输入的字符串。|(1个参数)触发这个钩子的命令名称(amend或者rebase)\n\n现在你已经有了大体的概念，我们可以在几个场景下试验一下。\n\n## 建立一个仓库\n一开始，我们需要先建立一个新的空仓库，在我们的主目录下。我们可以给它命名为`proj`。\n\n```Bash\nmkdir ~/proj\ncd ~/proj\ngit init\n```\n```Bash\nInitialized empty Git repository in /home/demo/proj/.git/\n```\n现在，我们在这个在git控制下的空目录内。在我们开始之前，我们先看看目录中的隐藏文件，它们在`.git`目录下：\n```Bash\ncd .git\nls -F\n```\n```Bash\nbranches/  config  description  HEAD  hooks/  info/  objects/  refs/\n```\n我们可以看到一些文件和目录。我们感兴趣的就是这个`hooks`目录：\n```Bash\ncd hooks\nls -l\n```\n```Bash\ntotal 40\n-rwxrwxr-x 1 demo demo  452 Aug  8 16:50 applypatch-msg.sample\n-rwxrwxr-x 1 demo demo  896 Aug  8 16:50 commit-msg.sample\n-rwxrwxr-x 1 demo demo  189 Aug  8 16:50 post-update.sample\n-rwxrwxr-x 1 demo demo  398 Aug  8 16:50 pre-applypatch.sample\n-rwxrwxr-x 1 demo demo 1642 Aug  8 16:50 pre-commit.sample\n-rwxrwxr-x 1 demo demo 1239 Aug  8 16:50 prepare-commit-msg.sample\n-rwxrwxr-x 1 demo demo 1352 Aug  8 16:50 pre-push.sample\n-rwxrwxr-x 1 demo demo 4898 Aug  8 16:50 pre-rebase.sample\n-rwxrwxr-x 1 demo demo 3611 Aug  8 16:50 update.sample\n```\n在这儿，我们可以看到。首先，每一个文件都标记成了可执行。因为这些脚本都是按照名称执行的，他们必须是可执行的，而且它们的第一行必须是[Shebang(`#!`)](http://en.wikipedia.org/wiki/Shebang_(Unix)#Magic_number)指向正确的脚本解释器。比较常见的是bash，perl，python等。\n\n你还会注意到的是，所有文件都是以`.sample`结尾的。这是因为git只是简单的看文件名来查找要执行的hook文件。文件名和git想要查找的出现偏差，这样可以达到禁用的目的。想启用任意一个脚本，只需要去掉结尾的`.sample`后缀。\n\n让我们退回到我们的工作目录。\n```Bash\ncd ../..\n```\n## 第一个例子：用一个post-commit Hook来部署一个web服务。\n我们第一个例子，使用`post-commit`hook来展示，如何在每一次提交之后在本地web服务器中部署代码。这不是在生产环境中使用的hook，但是可以让你验证一些重要的，文档里没怎么体现的东西，他们是你在使用hooks的时候应该知道的。\n\n首先，我们安装一个Apache web server。\n\n```Bash\nsudo apt-get update\nsudo apt-get install apache2\n```\n为了让我们的脚本可以修改web根目录`/var/www/html`(这是Ubuntu14.04的文档根目录。可以按需修改)，我们需要有写权限。我们给我们的普通用户这个目录的所有权。输入以下命令：\n```Bash\nsudo chown -R `whoami`:`id -gn` /var/www/html\n```\n现在，在我们的项目根目录下，创建`index.html`文件\n```Bash\ncd ~/proj\nnano index.html\n```\n在文件中，我们添加一小段HTML主要用做论证我们的观点。不用太复杂：\n```Html\n<h1>Here is a title!</h1>\n<p>Please deploy me!</p>\n```\n添加这个文件到git：\n```Bash\ngit add .\n```\n在提交之前，我们将要为这个仓库建立我们的`post-commit`钩子。在`.git/hooks`中创建文件\n```Bash\nvim .git/hooks/post-commit\n```\n在我们在文件中添加脚本之前，我们需要知道git在运行钩子时如何建立环境。\n\n## 关于git钩子环境变量的一些题外话\n在我们开始写脚本之前，我们需要知道git钩子运行时建立的环境变量。为了让我们的脚本工作，我们最终需要解除一个git调用`post-commit`钩子时设置的环境变量。\n\n如果你希望写一个运行稳定的git钩子，你需要先理解一个很重要的知识点。git根据你调用哪个钩子来建立不同的环境变量。这意味着git获取信息的环境会根据钩子的不同而不同。\n\n第一个状况是，会使得你的脚本运行环境不可预测，如果你不知道哪个变量被自动设置了。第二个状况就是那个被设置的变量在git自身的文档里几乎没有体现。\n\n幸运的是，Mark Longair开发了当运行钩子时[检测git设置的每一个变量的方法](http://longair.net/blog/2011/04/09/missing-git-hooks-documentation/)。它涉及到在git钩子脚本中添加下列内容：\n```Bash\n#!/bin/bash\necho Running $BASH_SOURCE\nset | egrep GIT\necho PWD is $PWD\n```\n他的篇文章是2011年写的，当时git的版本是1.7.1，所以现在已经有了一些变化。我的这篇文章是2014年8月写的，当前git版本是1.9.1。\n\n在此git版本下的测试结果如下（包括工作目录）。测试用的本地工作目录为`/home/demo/test_hooks`和一个裸的远程仓库`/home/demo/origin/test_hooks.git`:\n\n* 钩子：`applypatch-msg`, `pre-applypatch`, `post-applypatch`\n\t* 环境变量：\n\t* `GIT_AUTHOR_DATE='Mon, 11 Aug 2014 11:25:16 -0400'`\n\t* `GIT_AUTHOR_EMAIL=demo@example.com`\n\t* `GIT_AUTHOR_NAME='Demo User'`\n\t* `GIT_INTERNAL_GETTEXT_SH_SCHEME=gnu`\n\t* `GIT_REFLOG_ACTION=am`\n\t* 工作目录：`/home/demo/test_hooks`\n\n* 钩子：`pre-commit`, `prepare-commit-msg`, `commit-msg`, `post-commit`\n\t* 环境变量：\n\t* `GIT_AUTHOR_DATE='@1407774159 -0400'`\n\t* `GIT_AUTHOR_EMAIL=demo@example.com`\n\t* `GIT_AUTHOR_NAME='Demo User'`\n\t* `GIT_DIR=.git`\n\t* `GIT_EDITOR=:`\n\t* `GIT_INDEX_FILE=.git/index`\n\t* `GIT_PREFIX=`\n\t* 工作目录：`/home/demo/test_hooks`\n* 钩子：`pre-rebase`\n\t* 环境变量：\n\t* `GIT_INTERNAL_GETTEXT_SH_SCHEME=gnu`\n\t* `GIT_REFLOG_ACTION=rebase`\n\t* 工作目录：`/home/demo/test_hooks`\n* 钩子：`post-checkout`\n\t* 环境变量：\n\t* `GIT_DIR=.git`\n\t* `GIT_PREFIX=`\n\t* 工作目录：`/home/demo/test_hooks`\n* 钩子：`post-merge`\n\t* 环境变量：\n\t* `GITHEAD_4b407c...`\n\t* `GIT_DIR=.git`\n\t* `GIT_INTERNAL_GETTEXT_SH_SCHEME=gnu`\n\t* `GIT_PREFIX=`\n\t* `GIT_REFLOG_ACTION='pull other master'`\n\t* 工作目录：`/home/demo/test_hooks`\n* 钩子：`pre-push`\n\t* 环境变量：\n\t* `GIT_PREFIX=`\n\t* 工作目录：`/home/demo/test_hooks`\n* 钩子：`pre-receive·`, `update`, `post-receive`, `post-update`\n\t* 环境变量：\n\t* `GIT_DIR=.`\n\t* 工作目录：`/home/demo/origin/test_hooks.git`\n* 钩子：`pre-auto-gc`\n\t* (未知，因为这个钩子很难可靠地触发)\n* 钩子：`post-rewrite`\n\t* 环境变量：\n\t* `GIT_AUTHOR_DATE='@1407773551 -0400'`\n\t* `GIT_AUTHOR_EMAIL=demo@example.com`\n\t* `GIT_AUTHOR_NAME='Demo User'`\n\t* `GIT_DIR=.git`\n\t* `GIT_PREFIX=`\n\t* 工作目录：`/home/demo/test_hooks`\n\n这些变量暗示了git如何查看自己的环境。我们将利用上述关于变量的信息来确保我们的脚本正确考虑了它的环境。\n\n## 回到脚本\n\n现在你对所需的环境有了一定概念（看一下为`post-commit`钩子所设置的变量），我们可以开始我们的脚本了。\n\n由于git钩子是标准脚本，我们需要告诉git，我们用什么解释器：\n```\n #!/bin/bash\n```\n\n在这个之后，我们只要在提交后使用git取出最新版本的仓库，放到web目录下。要完成这件事儿，我们需要把我们的工作目录设置到apache的文件根目录。我们也需要把我们的git目录设置为仓库的地址。\n\n我们想要强制操作来保证每一次都成功，即使当前工作目录中存在冲突。脚本应该这样：\n```\n #!/bin/bash\ngit --work-tree=/var/www/html --git-dir=/home/demo/proj/.git checkout -f\n```\n这时，我们已经几乎完成了。然而，我们需要更仔细查看每次`post-commit`钩子运行时的环境变量。尤其是`GIT_INDEX_FILE`被设置成`.git/index`。\n\n这个路径与工作目录相关，在我们的例子中是`/var/www/html`。由于git的index文件不存在，脚本会失效，如果我们保留当前的设置。为了避免这种情况，我们可以手动设置这个变量，这将导致git相对于仓库目录去搜索。我们需要在脚本中的`checkout`之前添加一行:\n```Bash\n #!/bin/bash\nunset GIT_INDEX_FILE\ngit --work-tree=/var/www/html --git-dir=/home/demo/proj/.git checkout -f\n```\n这些冲突正是git钩子出的问题经常很难诊断的原因。你必须清楚git是怎么构建它的运行环境的。\n\n当你编辑结束后，保存并退出这个文件。\n\n因为这是一个常规的脚本文件，我们需要让它有可执行权限：\n```Bash\nchmod +x .git/hooks/post-commit\n```\n现在，我们最终准备好在我们的git仓库中提交变更。确保你退到了正确的目录，并且提交这些变更：\n```Bash\ncd ~/proj\ngit commit -m \"here we go...\"\n```\n现在，如果你使用浏览器访问服务器的域名或者IP地址，你讲看到你刚刚创建的这个index.html文件：\n```\nhttp://server_domain_or_IP\n```\n{% asset_img first_deploy.png  %}\n\n正如你所见，我们最近的变更在提交之后被自动的推送到了服务器根目录下。我们可以再做一些改变来证明，钩子在每次提交之后都正确工作了。\n```Bash\necho \"<p>Here is a change.</p>\" >> index.html\ngit add .\ngit commit -m \"First change\"\n```\n当我们刷新浏览器，我们可以直接看到新的变化：\n{% asset_img deploy_changes.png %}\n\n如你所见，这种配置比较方便本地测试，然而，你可能永远不希望在生产环境中这样提交。还是在经过测试后确保没问题了再提交，这样比较安全。\n\n## 利用Git钩子在另外的生产环境中部署\n\n在第二个例子中，我们将要示范一个更新生产服务器更好的方式。我们可以通过使用push-to-deploy模型以便当我们推送到裸仓库时更新我们的web服务器。\n\n我们可以沿用上面的服务器当作开发机。这是我们做改动工作的地方。我们可以在每次提交之后看到改变。\n\n在我们的生产机器上，我们将会配置另一个web服务器，一个裸的仓库用来推送我们的变更，还有一个git钩子在每次接受到推送都会执行。以普通用户身份，用sudo，完成系列步骤。\n\n## 建立生产环境的post-receive钩子\n现在生产环境中安装web服务器：\n```Bash\nsudo apt-get update\nsudo apt-get install apache2\n```\n然后，我们再更改目录拥有者给当前用户：\n```Bash\nsudo chown -R `whoami`:`id -gn` /var/www/html\n```\n我们还需要在服务器上安装git：\n```Bash\nsudo apt-get install git\n```\n现在我们可以在home目录下创建一个目录，来存放我们的仓库。然后我们进入这个目录来初始化一个裸的仓库。裸仓库不包含工作目录，这对于服务器来说更好，因为我们不在上面直接工作：\n```Bash\nmkdir ~/proj\ncd ~/proj\ngit init --bare\n```\n这是一个裸仓库，所以没有工作目录并且所有文件都在`.git`文件夹下，该文件夹通常在根目录下。\n\n我们需要创建另一个git钩子，这一次，我们感兴趣的是post-receive钩子，它是在服务器端接收到`git push`时执行。在编辑器中打开这个文件：\n```Bash\nnano hooks/post-receive\n```\n在脚本的开始，我们需要指定我们脚本的类型，然后我们可以写和`post-commit`一样的checkout命令，修改成这台机器使用的目录：\n```Bash\n #!/bin/bash\ngit --work-tree=/var/www/html --git-dir=/home/demo/proj checkout -f\n```\n由于这是一个裸仓库，`--git-dir`应该指向仓库目录的顶层。其它都和之前一样。\n\n然后，我们需要在脚本里增加一些额外的逻辑。如果我们不小心推送了`test-feature`分支到服务器上，我们不希望它被部署。我们想确保只部署`master`分支。\n\n关于`post-receive`钩子，你在之前的表格里可能已经注意到，git传递旧版本的提交hash，新版本的提交hash还有作为标准输入到脚本被推送的引用。我们可以通过它检查，该引用是否为`master`分支。\n\n首先我们需要读取这个标注输入。每一个被推送的引用，它的三部分信息（旧版本，新版本，引用）被提供给脚本，作为标准输入，之间用空格分开。我们可以用一个`while`循环包住这条`git`命令。\n```Bash\n #!/bin/bash\nwhile read oldrev newrev ref\ndo\n    git --work-tree=/var/www/html --git-dir=/home/demo/proj checkout -f\ndone\n```\n现在，我们将根据你被提交的内容产生了3个变量。对于master分支的推送，`ref`对象将包含像是`refs/heads/master`的东西。我们可以通过使用`if`检查一下服务器接收到的`ref`是否为这种格式：\n\n```Bash\n#!/bin/bash\nwhile read oldrev newrev ref\ndo\n    if [[ $ref =~ .*/master$ ]];\n    then\n        git --work-tree=/var/www/html --git-dir=/home/demo/proj checkout -f\n    fi\ndone\n```\n对于服务器端的钩子，git实际上可以将信息传回客户端。任何发送到标准输出的东西都会跳转到客户端。这给了我们机会显式通知用户做了什么样的决策。\n\n我们应该增加一些文字，描述我们检测到的情况，和我们执行的动作。我们应该添加一个`else`代码，在一个非`master`分支被成功接收时通知用户，即使这个动作并不触发部署：\n```Bash\n #!/bin/bash\nwhile read oldrev newrev ref\ndo\n    if [[ $ref =~ .*/master$ ]];\n    then\n        echo \"Master ref received.  Deploying master branch to production...\"\n        git --work-tree=/var/www/html --git-dir=/home/demo/proj checkout -f\n    else\n        echo \"Ref $ref successfully received.  Doing nothing: only the master branch may be deployed on this server.\"\n    fi\ndone\n```\n\n结束之后，保存并关闭这个文件。\n\n切记，我们必须给这个脚本可执行的权限。\n\n```Bash\nchmod +x hooks/post-receive\n```\n现在我们可以在我们本地对这个远程服务器建立访问了。\n\n## 在本地机器上配置远程服务器\n\n回到我们的本地机器（开发机）,进入我们项目的工作目录：\n```Bash\ncd ~/proj\n```\n在文件夹内，添加远程服务器，命名为`production`。你需要知道声场服务器的用户名，IP地址或者域名。你还需要知道你裸仓库对于home目录的相对路径。\n\n你输入的命令应该是大体这个样子：\n```Bash\ngit remote add production demo@server_domain_or_IP:proj\n```\n现在我们推送我们本地分支到生产服务器：\n```Bash\ngit push production master\n```\n如果你没配置SSH的key，那你可能必须输入生产服务器的用户密码。你会看到类似下面的显示：\n```\nCounting objects: 8, done.\nDelta compression using up to 2 threads.\nCompressing objects: 100% (3/3), done.\nWriting objects: 100% (4/4), 473 bytes | 0 bytes/s, done.\nTotal 4 (delta 0), reused 0 (delta 0)\nremote: Master ref received.  Deploying master branch...\nTo demo@107.170.14.32:proj\n   009183f..f1b9027  master -> master\n```\n\n如你所见，来自我们`post-receive`钩子的文本出现在命令行的输出中。如果我们使用浏览器访问我们生产服务器的域名或者IP地址，我们可以看到我们项目的当前版本：\n{% asset_img pushed_prod.png  %}\n\n看起来钩子收到信息时成功将我们的代码推送到生产服务器。\n\n现在，让我们测试我们的新代码。回到开发机上，我们将创建一个新分支并进行一些改变。这样，我们可以确保在我们部署到生产环境之前，一切就绪。\n\n建立一个叫`\u0006test_feature`的新分支，然后checkout：\n```Bash\ngit checkout -b test_feature\n```\n\n我们现在处于`test_feature`分支中，让我们做一些改变，稍后推送到生产服务器中。我们将提交到这个分支中：\n```Bash\necho \"<h2>New Feature Here</h2>\" >> index.html\ngit add .\ngit commit -m \"Trying out new feature\"\n```\n这时候，如果你访问开发机的IP地址或者域名，你将看到你的做的修改。\n{% asset_img devel_commit.png  %}\n\n这是因为开发机仍在每次提交后部署。这个工作流很棒，它可以让我们在部署生产环境之前测试我们的修改。\n\n我们可以推送我们的`test_feature`分支到远程生产服务器：\n```Bash\ngit push production test_feature\n```\n\n在`post-receive`钩子的输出中应该有其它的信息：\n```\nCounting objects: 5, done.\nDelta compression using up to 2 threads.\nCompressing objects: 100% (2/2), done.\nWriting objects: 100% (3/3), 301 bytes | 0 bytes/s, done.\nTotal 3 (delta 1), reused 0 (delta 0)\nremote: Ref refs/heads/test_feature successfully received.  Doing nothing: only the master branch may be deployed on this server\nTo demo@107.170.14.32:proj\n   83e9dc4..5617b50  test_feature -> test_feature\n```\n如果我们在浏览器中查看生产服务器，你将看到什么都没有改变。\n这就是我们所希望的，因为我们的改变不在master分支中。\n\n现在我们已经在开发机器上测试了我们的修改，我们确定要合并这个修改到master分支上。我们可以checkout到master分支，然后在开发机上merge`test_feature`分支。\n\n```\ngit checkout master\ngit merge test_feature\n```\n现在，你已经将新分支合并到主分支。推送到生产服务器将部署这个修改：\n```Bash\ngit push production master\n```\n如果我们在浏览器查看生产服务器，我们将看到我们的改变：\n\n{% asset_img new_prod.png  %}\n\n使用这个工作流，我们可以在开发机上直接显示提交的修改。生产机器只在master分支被推送时候被更新。\n\n## 结论\n如果你跟着我的步骤做完，你应该已经了解了git钩子有多种方法将我们一部分工作自动化。它们可以帮你部署代码，可以通过拒绝不符合要求的修改和提交，来控制代码质量。\n\n然而，git钩子的效用很难讨论，它实际的实现非常复杂。练习实现多种配置，试验解析参数，标准输入，跟踪git如何构建钩子的环境将会带你慢慢了解如何写有效的钩子脚本。从长远上看，时间的投入通常是值得的，它可以很简单的节省你和你团队在项目工作中很多手动操作的负担。\n","slug":"git-hooks","published":1,"updated":"2016-06-05T14:46:08.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirvtn4ok0008plny5cfl3xez","content":"<blockquote>\n<p>翻译自<a href=\"https://www.digitalocean.com/community/tutorials/how-to-use-git-hooks-to-automate-development-and-deployment-tasks\" target=\"_blank\" rel=\"external\">How To Use Git Hooks To Automate Development and Deployment Tasks\n</a></p>\n</blockquote>\n<h2 id=\"介绍\"><a href=\"#介绍\" class=\"headerlink\" title=\"介绍\"></a>介绍</h2><p>版本控制在现代软件开发中变成了一个核心的要求。它使得项目可以安全的记录变更，恢复，完整性检查，多人协作等等。<code>git</code>在这些年里被广泛的接纳，得益于其分布式的架构和它在向各方传递变更的速度。</p>\n<p>虽然<code>git</code>的工具套件提供了很多现成的特性，其中最实用的就是它的灵活性。通过对钩子系统的使用，git允许开发者或者管理员通过让git根据不同的events和actions的触发来运行自己的脚本，从而对git的功能进行扩展。</p>\n<p>这篇文章中，我会介绍git钩子的原理和如何实现自动化任务。我们将会使用Ubuntu 14.04，不过所有系统运行git都大同小异。</p>\n<a id=\"more\"></a>\n<h2 id=\"准备工作\"><a href=\"#准备工作\" class=\"headerlink\" title=\"准备工作\"></a>准备工作</h2><p>开始之前，你需要先在你的运行环境中安装好git。你可以参考这篇教程<a href=\"https://www.digitalocean.com/community/tutorials/how-to-install-git-on-ubuntu-14-04\" target=\"_blank\" rel=\"external\">Ubuntu14.04安装git</a>。</p>\n<p>你应该简要了解git的使用。如果你需要入门，可以看看这个教程<a href=\"https://www.digitalocean.com/community/tutorial_series/introduction-to-git-installation-usage-and-branches\" target=\"_blank\" rel=\"external\">Git介绍：安装，使用，分支</a></p>\n<p>如果上边的都没有问题，继续往下看。</p>\n<h2 id=\"Git-Hooks的基本原理\"><a href=\"#Git-Hooks的基本原理\" class=\"headerlink\" title=\"Git Hooks的基本原理\"></a>Git Hooks的基本原理</h2><p>Git Hooks是一个相当简单的概念，它为了满足特定的需求。当开发者开发一个协作的项目，维护代码风格，或者部署项目（这些都是使用git常见的情况）时，经常有有些重复性任务在每次完成一个动作时都要执行。</p>\n<p>Git钩子是基于事件的。当你运行了特定的git命令，git会检查git仓库中<code>hooks</code>路径下有没有相关脚本要执行。</p>\n<p>有的脚本在git指令之前执行，这可以用来确保代码的完整（进行一些完整性检查）或者提前部署一下环境。那些在git事件之后执行的脚本，一般就是用来部署代码，重新建立权限（一些git不能很好记录的事情）等等。</p>\n<p>使用git的这些功能，就可以强制实施策略，确保一致性，和控制你的环境，甚至处理部署任务。</p>\n<p>Scott Chacon写的<a href=\"http://git-scm.com/book\" target=\"_blank\" rel=\"external\">Pro Git</a>这本书试图将钩子归类，他是这样写的：</p>\n<ul>\n<li><p>客户端钩子：在提交者计算机上被调用和执行的钩子。这些可以进一步分为一些小的类别：</p>\n<ul>\n<li><p>提交工作流钩子：提交钩子是用来检测那些需要在提交的前后需要执行的动作。他们可以用来运行完整性检查,预填充提交信息和验证消息详情。你也可以基于提交来推送通知。</p>\n</li>\n<li><p>邮件工作流的钩子：这一类的钩子包含了当你使用邮件补丁时触发的动作。类似Linux内核提交和通过邮件方法回看补丁。这些都和提交钩子是一样的，但是邮件钩子可以被负责申请提交代码的管理员所使用。</p>\n</li>\n<li><p>其它：其它客户端钩子包括那些在merge,check out,rebase,rewrite,clean时执行的钩子。</p>\n</li>\n</ul>\n</li>\n<li>服务端钩子：这些钩子在那些用来接收推送代码的服务器上执行。通常，这就是项目的主要git仓库。同样，Chacon也把这些细分成一下几类。<ul>\n<li><code>pre-receive</code>和<code>post-receive</code>: 这两个在服务器收到push操作时执行，比如检查项目一致性和在push之后立即部署项目。</li>\n<li><code>update</code>:这个和<code>pre-receive</code>很像，但是它是一个分支接着一个分支的运作的基础上,在每个分支被更新之前执行。</li>\n</ul>\n</li>\n</ul>\n<p>这些分类能使我们对可以建立钩子的事件有了一个大体的认识。但是为了确切了解他们是怎么运作的，最好还是亲身试验来找出你想要实现的方案。</p>\n<p>某些钩子还需要参数。这意味着，当git为某个钩子调用脚本，它会传入脚本会用到的一些相关的数据，以便完成相应的任务。所有的hooks如下表所示。</p>\n<table>\n<thead>\n<tr>\n<th>Hook 名称</th>\n<th>触发命令</th>\n<th>描述</th>\n<th>参数（数量和描述）  </th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>applypatch-msg</td>\n<td><code>git am</code></td>\n<td>可以编辑提交信息，常用于验证或者标准化补丁信息。非零状态会放弃这次提交</td>\n<td>1个参数，包含被建议提交信息的临时文件名</td>\n</tr>\n<tr>\n<td>pre-applypatch</td>\n<td><code>git am</code></td>\n<td>在补丁被运用之后，但是提交之前运行。非零退出，修改仍为未提交状态。可以用来在正式提交之前检查状态树</td>\n<td>无</td>\n</tr>\n<tr>\n<td>post-applypatch</td>\n<td><code>git am</code></td>\n<td>这个钩子在补丁应用和提交之后运行。因此它无法阻止打补丁的过程，主要用于创建通知。</td>\n<td>无</td>\n</tr>\n<tr>\n<td>pre-commit</td>\n<td><code>git commit</code></td>\n<td>这个钩子在获取提交信息之前运行。返回非零值时放弃此次提交，它是用来检查提交本身(而不是提交信息）</td>\n<td>无</td>\n</tr>\n<tr>\n<td>prepare-commit-msg</td>\n<td><code>git commit</code></td>\n<td>在接受到默认提交信息之后，在提交信息编辑器显示之前运行。返回非零值退出，放弃这次提交。它可以用来以一种不可被取消的方式编辑信息。</td>\n<td>(1到3个参数)文件名连同提交信息，原始提交信息（<code>message</code>,<code>template</code>,<code>merge</code>,<code>squash</code>,<code>commit</code>),和提交的SHA-1校验和(当对已有信息进行操作时)。</td>\n</tr>\n<tr>\n<td>commit-msg</td>\n<td><code>git commit</code></td>\n<td>可以被用来在信息被编辑之后调整信息，以便确保它符合标准，或者依照标准驳回此信息。如果该hook脚本以非零退出，<code>Git</code>放弃提交。</td>\n<td>1个参数，存放提交信息的文件。</td>\n</tr>\n<tr>\n<td>post-commit</td>\n<td><code>git commit</code></td>\n<td>在整个提交过程完成后运行。因此，它不能中断提交。这个hook主要用来允许通知。</td>\n<td>无</td>\n</tr>\n<tr>\n<td>pre-rebase</td>\n<td><code>git rebase</code></td>\n<td>当rebase一个分支的时候执行。主要用于在不可取的时候中止rebase。</td>\n<td>(1到2个参数)上游分支的节点，需要被rebase的分支(在rebase分支为当前时不设置)</td>\n</tr>\n<tr>\n<td>post-checkout</td>\n<td><code>git checkout</code>和<code>git clone</code></td>\n<td>在更新工作树之后执行checkout或者clone之后运行。它主要用于验证状态，展示区别和在必要时配置环境。</td>\n<td>(3个参数)之前<code>HEAD</code>的引用，新<code>HEAD</code>的引用，是否为一个检出的分支的标记。（1个参数）或者一个检出的文件（0）</td>\n</tr>\n<tr>\n<td>post-merge</td>\n<td><code>git merge</code>或<code>git pull</code></td>\n<td>在merge之后执行。因此，它不能中止merge操作，它可以用来存储或者申请权限或者其他不属于git的数据。</td>\n<td>(1个参数)merge是否为squash的标记。</td>\n</tr>\n<tr>\n<td>pre-push</td>\n<td><code>git push</code></td>\n<td>在push到远程服务器之前执行。再加上参数，额外的信息，以<code>&lt;本地ref&gt; &lt;本地sha1&gt; &lt;远程ref&gt; &lt;远程sha1&gt;</code>的形式。解析输入可以获得可以用来检验的额外信息。比如说，如果<code>local sha1</code>是40个零的长度，push是一个删除操作，如果<code>remote sha1</code>是40个零，那么它是一个新的分支。这个特性可以将已经提交的refs和当前状况做很多比较。非零退出，将会中止这次提交。</td>\n<td>(2个参数)远程地址名称，远程地址</td>\n</tr>\n<tr>\n<td>pre-receive</td>\n<td>远程仓库<code>git-receive-pack</code></td>\n<td>在更新提交的refs之前，在远程仓库上运行。非零的状态中止。虽然不接受参数，它为每一个ref传递一个标准输入的字符串，以<code>&lt;旧的值&gt; &lt;新的值&gt; &lt;ref的名称&gt;</code>的形式。</td>\n<td>无</td>\n</tr>\n<tr>\n<td>update</td>\n<td>远程仓库<code>git-receive-pack</code></td>\n<td>在远程仓库上，每一个ref被提交运行一次，而不是每次提交都运行。非零的状态会中止。这可以用来确保所有的提交都只用fast forward模式</td>\n<td>(三个参数)被更新的ref名称，旧的对象名，新的对象名。</td>\n</tr>\n<tr>\n<td>post-receive</td>\n<td>远程仓库<code>git-receive-pack</code></td>\n<td>在所有的ref更新后运行。不需要参数，但是通过标准输入接受信息，格式为<code>&lt;旧的值&gt; &lt;新的值&gt; &lt;ref的名称&gt;</code>。因为在更新后运行，所以不能被中止。</td>\n<td>无</td>\n</tr>\n<tr>\n<td>post-update</td>\n<td>远程仓库<code>git-receive-pack</code></td>\n<td>在所有的refs都已经被push之后只运行一次。它在这方面和post-receive很相似，但是不接受之前和之后的值。它主要用来根据被推送的refs实现通知。</td>\n<td>每一个被推送的包含它名字的refs。</td>\n</tr>\n<tr>\n<td>pre-auto-gc</td>\n<td><code>git gc --auto</code></td>\n<td>在<code>clean</code>仓库之前自动做一些检查</td>\n<td>无</td>\n</tr>\n<tr>\n<td>post-rewrite</td>\n<td><code>git commit --amend</code>,<code>git-rebase</code></td>\n<td>当git命令重写已经提交的数据时执行。除了接受的参数，它还以<code>&lt;旧sha1&gt;&lt;新sha1&gt;</code>的格式接受标准输入的字符串。</td>\n<td>(1个参数)触发这个钩子的命令名称(amend或者rebase)</td>\n</tr>\n</tbody>\n</table>\n<p>现在你已经有了大体的概念，我们可以在几个场景下试验一下。</p>\n<h2 id=\"建立一个仓库\"><a href=\"#建立一个仓库\" class=\"headerlink\" title=\"建立一个仓库\"></a>建立一个仓库</h2><p>一开始，我们需要先建立一个新的空仓库，在我们的主目录下。我们可以给它命名为<code>proj</code>。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">mkdir ~/proj</div><div class=\"line\"><span class=\"built_in\">cd</span> ~/proj</div><div class=\"line\">git init</div></pre></td></tr></table></figure>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">Initialized empty Git repository <span class=\"keyword\">in</span> /home/demo/proj/.git/</div></pre></td></tr></table></figure>\n<p>现在，我们在这个在git控制下的空目录内。在我们开始之前，我们先看看目录中的隐藏文件，它们在<code>.git</code>目录下：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">cd</span> .git</div><div class=\"line\">ls -F</div></pre></td></tr></table></figure></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">branches/  config  description  HEAD  hooks/  info/  objects/  refs/</div></pre></td></tr></table></figure>\n<p>我们可以看到一些文件和目录。我们感兴趣的就是这个<code>hooks</code>目录：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">cd</span> hooks</div><div class=\"line\">ls <span class=\"_\">-l</span></div></pre></td></tr></table></figure></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">total 40</div><div class=\"line\">-rwxrwxr-x 1 demo demo  452 Aug  8 16:50 applypatch-msg.sample</div><div class=\"line\">-rwxrwxr-x 1 demo demo  896 Aug  8 16:50 commit-msg.sample</div><div class=\"line\">-rwxrwxr-x 1 demo demo  189 Aug  8 16:50 post-update.sample</div><div class=\"line\">-rwxrwxr-x 1 demo demo  398 Aug  8 16:50 pre-applypatch.sample</div><div class=\"line\">-rwxrwxr-x 1 demo demo 1642 Aug  8 16:50 pre-commit.sample</div><div class=\"line\">-rwxrwxr-x 1 demo demo 1239 Aug  8 16:50 prepare-commit-msg.sample</div><div class=\"line\">-rwxrwxr-x 1 demo demo 1352 Aug  8 16:50 pre-push.sample</div><div class=\"line\">-rwxrwxr-x 1 demo demo 4898 Aug  8 16:50 pre-rebase.sample</div><div class=\"line\">-rwxrwxr-x 1 demo demo 3611 Aug  8 16:50 update.sample</div></pre></td></tr></table></figure>\n<p>在这儿，我们可以看到。首先，每一个文件都标记成了可执行。因为这些脚本都是按照名称执行的，他们必须是可执行的，而且它们的第一行必须是<a href=\"http://en.wikipedia.org/wiki/Shebang_(Unix\" target=\"_blank\" rel=\"external\">Shebang(<code>#!</code>)</a>#Magic_number)指向正确的脚本解释器。比较常见的是bash，perl，python等。</p>\n<p>你还会注意到的是，所有文件都是以<code>.sample</code>结尾的。这是因为git只是简单的看文件名来查找要执行的hook文件。文件名和git想要查找的出现偏差，这样可以达到禁用的目的。想启用任意一个脚本，只需要去掉结尾的<code>.sample</code>后缀。</p>\n<p>让我们退回到我们的工作目录。<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">cd</span> ../..</div></pre></td></tr></table></figure></p>\n<h2 id=\"第一个例子：用一个post-commit-Hook来部署一个web服务。\"><a href=\"#第一个例子：用一个post-commit-Hook来部署一个web服务。\" class=\"headerlink\" title=\"第一个例子：用一个post-commit Hook来部署一个web服务。\"></a>第一个例子：用一个post-commit Hook来部署一个web服务。</h2><p>我们第一个例子，使用<code>post-commit</code>hook来展示，如何在每一次提交之后在本地web服务器中部署代码。这不是在生产环境中使用的hook，但是可以让你验证一些重要的，文档里没怎么体现的东西，他们是你在使用hooks的时候应该知道的。</p>\n<p>首先，我们安装一个Apache web server。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo apt-get update</div><div class=\"line\">sudo apt-get install apache2</div></pre></td></tr></table></figure>\n<p>为了让我们的脚本可以修改web根目录<code>/var/www/html</code>(这是Ubuntu14.04的文档根目录。可以按需修改)，我们需要有写权限。我们给我们的普通用户这个目录的所有权。输入以下命令：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo chown -R `whoami`:`id -gn` /var/www/html</div></pre></td></tr></table></figure></p>\n<p>现在，在我们的项目根目录下，创建<code>index.html</code>文件<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">cd</span> ~/proj</div><div class=\"line\">nano index.html</div></pre></td></tr></table></figure></p>\n<p>在文件中，我们添加一小段HTML主要用做论证我们的观点。不用太复杂：<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>Here is a title!<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>Please deploy me!<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></div></pre></td></tr></table></figure></p>\n<p>添加这个文件到git：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git add .</div></pre></td></tr></table></figure></p>\n<p>在提交之前，我们将要为这个仓库建立我们的<code>post-commit</code>钩子。在<code>.git/hooks</code>中创建文件<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">vim .git/hooks/post-commit</div></pre></td></tr></table></figure></p>\n<p>在我们在文件中添加脚本之前，我们需要知道git在运行钩子时如何建立环境。</p>\n<h2 id=\"关于git钩子环境变量的一些题外话\"><a href=\"#关于git钩子环境变量的一些题外话\" class=\"headerlink\" title=\"关于git钩子环境变量的一些题外话\"></a>关于git钩子环境变量的一些题外话</h2><p>在我们开始写脚本之前，我们需要知道git钩子运行时建立的环境变量。为了让我们的脚本工作，我们最终需要解除一个git调用<code>post-commit</code>钩子时设置的环境变量。</p>\n<p>如果你希望写一个运行稳定的git钩子，你需要先理解一个很重要的知识点。git根据你调用哪个钩子来建立不同的环境变量。这意味着git获取信息的环境会根据钩子的不同而不同。</p>\n<p>第一个状况是，会使得你的脚本运行环境不可预测，如果你不知道哪个变量被自动设置了。第二个状况就是那个被设置的变量在git自身的文档里几乎没有体现。</p>\n<p>幸运的是，Mark Longair开发了当运行钩子时<a href=\"http://longair.net/blog/2011/04/09/missing-git-hooks-documentation/\" target=\"_blank\" rel=\"external\">检测git设置的每一个变量的方法</a>。它涉及到在git钩子脚本中添加下列内容：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">#!/bin/bash</span></div><div class=\"line\"><span class=\"built_in\">echo</span> Running <span class=\"variable\">$BASH_SOURCE</span></div><div class=\"line\"><span class=\"built_in\">set</span> | egrep GIT</div><div class=\"line\"><span class=\"built_in\">echo</span> PWD is <span class=\"variable\">$PWD</span></div></pre></td></tr></table></figure></p>\n<p>他的篇文章是2011年写的，当时git的版本是1.7.1，所以现在已经有了一些变化。我的这篇文章是2014年8月写的，当前git版本是1.9.1。</p>\n<p>在此git版本下的测试结果如下（包括工作目录）。测试用的本地工作目录为<code>/home/demo/test_hooks</code>和一个裸的远程仓库<code>/home/demo/origin/test_hooks.git</code>:</p>\n<ul>\n<li><p>钩子：<code>applypatch-msg</code>, <code>pre-applypatch</code>, <code>post-applypatch</code></p>\n<ul>\n<li>环境变量：</li>\n<li><code>GIT_AUTHOR_DATE=&#39;Mon, 11 Aug 2014 11:25:16 -0400&#39;</code></li>\n<li><code>GIT_AUTHOR_EMAIL=demo@example.com</code></li>\n<li><code>GIT_AUTHOR_NAME=&#39;Demo User&#39;</code></li>\n<li><code>GIT_INTERNAL_GETTEXT_SH_SCHEME=gnu</code></li>\n<li><code>GIT_REFLOG_ACTION=am</code></li>\n<li>工作目录：<code>/home/demo/test_hooks</code></li>\n</ul>\n</li>\n<li><p>钩子：<code>pre-commit</code>, <code>prepare-commit-msg</code>, <code>commit-msg</code>, <code>post-commit</code></p>\n<ul>\n<li>环境变量：</li>\n<li><code>GIT_AUTHOR_DATE=&#39;@1407774159 -0400&#39;</code></li>\n<li><code>GIT_AUTHOR_EMAIL=demo@example.com</code></li>\n<li><code>GIT_AUTHOR_NAME=&#39;Demo User&#39;</code></li>\n<li><code>GIT_DIR=.git</code></li>\n<li><code>GIT_EDITOR=:</code></li>\n<li><code>GIT_INDEX_FILE=.git/index</code></li>\n<li><code>GIT_PREFIX=</code></li>\n<li>工作目录：<code>/home/demo/test_hooks</code></li>\n</ul>\n</li>\n<li>钩子：<code>pre-rebase</code><ul>\n<li>环境变量：</li>\n<li><code>GIT_INTERNAL_GETTEXT_SH_SCHEME=gnu</code></li>\n<li><code>GIT_REFLOG_ACTION=rebase</code></li>\n<li>工作目录：<code>/home/demo/test_hooks</code></li>\n</ul>\n</li>\n<li>钩子：<code>post-checkout</code><ul>\n<li>环境变量：</li>\n<li><code>GIT_DIR=.git</code></li>\n<li><code>GIT_PREFIX=</code></li>\n<li>工作目录：<code>/home/demo/test_hooks</code></li>\n</ul>\n</li>\n<li>钩子：<code>post-merge</code><ul>\n<li>环境变量：</li>\n<li><code>GITHEAD_4b407c...</code></li>\n<li><code>GIT_DIR=.git</code></li>\n<li><code>GIT_INTERNAL_GETTEXT_SH_SCHEME=gnu</code></li>\n<li><code>GIT_PREFIX=</code></li>\n<li><code>GIT_REFLOG_ACTION=&#39;pull other master&#39;</code></li>\n<li>工作目录：<code>/home/demo/test_hooks</code></li>\n</ul>\n</li>\n<li>钩子：<code>pre-push</code><ul>\n<li>环境变量：</li>\n<li><code>GIT_PREFIX=</code></li>\n<li>工作目录：<code>/home/demo/test_hooks</code></li>\n</ul>\n</li>\n<li>钩子：<code>pre-receive·</code>, <code>update</code>, <code>post-receive</code>, <code>post-update</code><ul>\n<li>环境变量：</li>\n<li><code>GIT_DIR=.</code></li>\n<li>工作目录：<code>/home/demo/origin/test_hooks.git</code></li>\n</ul>\n</li>\n<li>钩子：<code>pre-auto-gc</code><ul>\n<li>(未知，因为这个钩子很难可靠地触发)</li>\n</ul>\n</li>\n<li>钩子：<code>post-rewrite</code><ul>\n<li>环境变量：</li>\n<li><code>GIT_AUTHOR_DATE=&#39;@1407773551 -0400&#39;</code></li>\n<li><code>GIT_AUTHOR_EMAIL=demo@example.com</code></li>\n<li><code>GIT_AUTHOR_NAME=&#39;Demo User&#39;</code></li>\n<li><code>GIT_DIR=.git</code></li>\n<li><code>GIT_PREFIX=</code></li>\n<li>工作目录：<code>/home/demo/test_hooks</code></li>\n</ul>\n</li>\n</ul>\n<p>这些变量暗示了git如何查看自己的环境。我们将利用上述关于变量的信息来确保我们的脚本正确考虑了它的环境。</p>\n<h2 id=\"回到脚本\"><a href=\"#回到脚本\" class=\"headerlink\" title=\"回到脚本\"></a>回到脚本</h2><p>现在你对所需的环境有了一定概念（看一下为<code>post-commit</code>钩子所设置的变量），我们可以开始我们的脚本了。</p>\n<p>由于git钩子是标准脚本，我们需要告诉git，我们用什么解释器：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">#!/bin/bash</div></pre></td></tr></table></figure></p>\n<p>在这个之后，我们只要在提交后使用git取出最新版本的仓库，放到web目录下。要完成这件事儿，我们需要把我们的工作目录设置到apache的文件根目录。我们也需要把我们的git目录设置为仓库的地址。</p>\n<p>我们想要强制操作来保证每一次都成功，即使当前工作目录中存在冲突。脚本应该这样：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"> #!/bin/bash</div><div class=\"line\">git --work-tree=/var/www/html --git-dir=/home/demo/proj/.git checkout -f</div></pre></td></tr></table></figure></p>\n<p>这时，我们已经几乎完成了。然而，我们需要更仔细查看每次<code>post-commit</code>钩子运行时的环境变量。尤其是<code>GIT_INDEX_FILE</code>被设置成<code>.git/index</code>。</p>\n<p>这个路径与工作目录相关，在我们的例子中是<code>/var/www/html</code>。由于git的index文件不存在，脚本会失效，如果我们保留当前的设置。为了避免这种情况，我们可以手动设置这个变量，这将导致git相对于仓库目录去搜索。我们需要在脚本中的<code>checkout</code>之前添加一行:<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"> <span class=\"comment\">#!/bin/bash</span></div><div class=\"line\"><span class=\"built_in\">unset</span> GIT_INDEX_FILE</div><div class=\"line\">git --work-tree=/var/www/html --git-dir=/home/demo/proj/.git checkout <span class=\"_\">-f</span></div></pre></td></tr></table></figure></p>\n<p>这些冲突正是git钩子出的问题经常很难诊断的原因。你必须清楚git是怎么构建它的运行环境的。</p>\n<p>当你编辑结束后，保存并退出这个文件。</p>\n<p>因为这是一个常规的脚本文件，我们需要让它有可执行权限：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">chmod +x .git/hooks/post-commit</div></pre></td></tr></table></figure></p>\n<p>现在，我们最终准备好在我们的git仓库中提交变更。确保你退到了正确的目录，并且提交这些变更：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">cd</span> ~/proj</div><div class=\"line\">git commit -m <span class=\"string\">\"here we go...\"</span></div></pre></td></tr></table></figure></p>\n<p>现在，如果你使用浏览器访问服务器的域名或者IP地址，你讲看到你刚刚创建的这个index.html文件：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">http://server_domain_or_IP</div></pre></td></tr></table></figure></p>\n<img src=\"/20160518/git-hooks/first_deploy.png\" alt=\"first_deploy.png\" title=\"\">\n<p>正如你所见，我们最近的变更在提交之后被自动的推送到了服务器根目录下。我们可以再做一些改变来证明，钩子在每次提交之后都正确工作了。<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">\"&lt;p&gt;Here is a change.&lt;/p&gt;\"</span> &gt;&gt; index.html</div><div class=\"line\">git add .</div><div class=\"line\">git commit -m <span class=\"string\">\"First change\"</span></div></pre></td></tr></table></figure></p>\n<p>当我们刷新浏览器，我们可以直接看到新的变化：<br><img src=\"/20160518/git-hooks/deploy_changes.png\" alt=\"deploy_changes.png\" title=\"\"></p>\n<p>如你所见，这种配置比较方便本地测试，然而，你可能永远不希望在生产环境中这样提交。还是在经过测试后确保没问题了再提交，这样比较安全。</p>\n<h2 id=\"利用Git钩子在另外的生产环境中部署\"><a href=\"#利用Git钩子在另外的生产环境中部署\" class=\"headerlink\" title=\"利用Git钩子在另外的生产环境中部署\"></a>利用Git钩子在另外的生产环境中部署</h2><p>在第二个例子中，我们将要示范一个更新生产服务器更好的方式。我们可以通过使用push-to-deploy模型以便当我们推送到裸仓库时更新我们的web服务器。</p>\n<p>我们可以沿用上面的服务器当作开发机。这是我们做改动工作的地方。我们可以在每次提交之后看到改变。</p>\n<p>在我们的生产机器上，我们将会配置另一个web服务器，一个裸的仓库用来推送我们的变更，还有一个git钩子在每次接受到推送都会执行。以普通用户身份，用sudo，完成系列步骤。</p>\n<h2 id=\"建立生产环境的post-receive钩子\"><a href=\"#建立生产环境的post-receive钩子\" class=\"headerlink\" title=\"建立生产环境的post-receive钩子\"></a>建立生产环境的post-receive钩子</h2><p>现在生产环境中安装web服务器：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo apt-get update</div><div class=\"line\">sudo apt-get install apache2</div></pre></td></tr></table></figure></p>\n<p>然后，我们再更改目录拥有者给当前用户：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo chown -R `whoami`:`id -gn` /var/www/html</div></pre></td></tr></table></figure></p>\n<p>我们还需要在服务器上安装git：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo apt-get install git</div></pre></td></tr></table></figure></p>\n<p>现在我们可以在home目录下创建一个目录，来存放我们的仓库。然后我们进入这个目录来初始化一个裸的仓库。裸仓库不包含工作目录，这对于服务器来说更好，因为我们不在上面直接工作：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">mkdir ~/proj</div><div class=\"line\"><span class=\"built_in\">cd</span> ~/proj</div><div class=\"line\">git init --bare</div></pre></td></tr></table></figure></p>\n<p>这是一个裸仓库，所以没有工作目录并且所有文件都在<code>.git</code>文件夹下，该文件夹通常在根目录下。</p>\n<p>我们需要创建另一个git钩子，这一次，我们感兴趣的是post-receive钩子，它是在服务器端接收到<code>git push</code>时执行。在编辑器中打开这个文件：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">nano hooks/post-receive</div></pre></td></tr></table></figure></p>\n<p>在脚本的开始，我们需要指定我们脚本的类型，然后我们可以写和<code>post-commit</code>一样的checkout命令，修改成这台机器使用的目录：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"> <span class=\"comment\">#!/bin/bash</span></div><div class=\"line\">git --work-tree=/var/www/html --git-dir=/home/demo/proj checkout <span class=\"_\">-f</span></div></pre></td></tr></table></figure></p>\n<p>由于这是一个裸仓库，<code>--git-dir</code>应该指向仓库目录的顶层。其它都和之前一样。</p>\n<p>然后，我们需要在脚本里增加一些额外的逻辑。如果我们不小心推送了<code>test-feature</code>分支到服务器上，我们不希望它被部署。我们想确保只部署<code>master</code>分支。</p>\n<p>关于<code>post-receive</code>钩子，你在之前的表格里可能已经注意到，git传递旧版本的提交hash，新版本的提交hash还有作为标准输入到脚本被推送的引用。我们可以通过它检查，该引用是否为<code>master</code>分支。</p>\n<p>首先我们需要读取这个标注输入。每一个被推送的引用，它的三部分信息（旧版本，新版本，引用）被提供给脚本，作为标准输入，之间用空格分开。我们可以用一个<code>while</code>循环包住这条<code>git</code>命令。<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"> <span class=\"comment\">#!/bin/bash</span></div><div class=\"line\"><span class=\"keyword\">while</span> <span class=\"built_in\">read</span> oldrev newrev ref</div><div class=\"line\"><span class=\"keyword\">do</span></div><div class=\"line\">    git --work-tree=/var/www/html --git-dir=/home/demo/proj checkout <span class=\"_\">-f</span></div><div class=\"line\"><span class=\"keyword\">done</span></div></pre></td></tr></table></figure></p>\n<p>现在，我们将根据你被提交的内容产生了3个变量。对于master分支的推送，<code>ref</code>对象将包含像是<code>refs/heads/master</code>的东西。我们可以通过使用<code>if</code>检查一下服务器接收到的<code>ref</code>是否为这种格式：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">#!/bin/bash</span></div><div class=\"line\"><span class=\"keyword\">while</span> <span class=\"built_in\">read</span> oldrev newrev ref</div><div class=\"line\"><span class=\"keyword\">do</span></div><div class=\"line\">    <span class=\"keyword\">if</span> [[ <span class=\"variable\">$ref</span> =~ .*/master$ ]];</div><div class=\"line\">    <span class=\"keyword\">then</span></div><div class=\"line\">        git --work-tree=/var/www/html --git-dir=/home/demo/proj checkout <span class=\"_\">-f</span></div><div class=\"line\">    <span class=\"keyword\">fi</span></div><div class=\"line\"><span class=\"keyword\">done</span></div></pre></td></tr></table></figure>\n<p>对于服务器端的钩子，git实际上可以将信息传回客户端。任何发送到标准输出的东西都会跳转到客户端。这给了我们机会显式通知用户做了什么样的决策。</p>\n<p>我们应该增加一些文字，描述我们检测到的情况，和我们执行的动作。我们应该添加一个<code>else</code>代码，在一个非<code>master</code>分支被成功接收时通知用户，即使这个动作并不触发部署：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\"> <span class=\"comment\">#!/bin/bash</span></div><div class=\"line\"><span class=\"keyword\">while</span> <span class=\"built_in\">read</span> oldrev newrev ref</div><div class=\"line\"><span class=\"keyword\">do</span></div><div class=\"line\">    <span class=\"keyword\">if</span> [[ <span class=\"variable\">$ref</span> =~ .*/master$ ]];</div><div class=\"line\">    <span class=\"keyword\">then</span></div><div class=\"line\">        <span class=\"built_in\">echo</span> <span class=\"string\">\"Master ref received.  Deploying master branch to production...\"</span></div><div class=\"line\">        git --work-tree=/var/www/html --git-dir=/home/demo/proj checkout <span class=\"_\">-f</span></div><div class=\"line\">    <span class=\"keyword\">else</span></div><div class=\"line\">        <span class=\"built_in\">echo</span> <span class=\"string\">\"Ref <span class=\"variable\">$ref</span> successfully received.  Doing nothing: only the master branch may be deployed on this server.\"</span></div><div class=\"line\">    <span class=\"keyword\">fi</span></div><div class=\"line\"><span class=\"keyword\">done</span></div></pre></td></tr></table></figure></p>\n<p>结束之后，保存并关闭这个文件。</p>\n<p>切记，我们必须给这个脚本可执行的权限。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">chmod +x hooks/post-receive</div></pre></td></tr></table></figure>\n<p>现在我们可以在我们本地对这个远程服务器建立访问了。</p>\n<h2 id=\"在本地机器上配置远程服务器\"><a href=\"#在本地机器上配置远程服务器\" class=\"headerlink\" title=\"在本地机器上配置远程服务器\"></a>在本地机器上配置远程服务器</h2><p>回到我们的本地机器（开发机）,进入我们项目的工作目录：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">cd</span> ~/proj</div></pre></td></tr></table></figure></p>\n<p>在文件夹内，添加远程服务器，命名为<code>production</code>。你需要知道声场服务器的用户名，IP地址或者域名。你还需要知道你裸仓库对于home目录的相对路径。</p>\n<p>你输入的命令应该是大体这个样子：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git remote add production demo@server_domain_or_IP:proj</div></pre></td></tr></table></figure></p>\n<p>现在我们推送我们本地分支到生产服务器：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git push production master</div></pre></td></tr></table></figure></p>\n<p>如果你没配置SSH的key，那你可能必须输入生产服务器的用户密码。你会看到类似下面的显示：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">Counting objects: 8, done.</div><div class=\"line\">Delta compression using up to 2 threads.</div><div class=\"line\">Compressing objects: 100% (3/3), done.</div><div class=\"line\">Writing objects: 100% (4/4), 473 bytes | 0 bytes/s, done.</div><div class=\"line\">Total 4 (delta 0), reused 0 (delta 0)</div><div class=\"line\">remote: Master ref received.  Deploying master branch...</div><div class=\"line\">To demo@107.170.14.32:proj</div><div class=\"line\">   009183f..f1b9027  master -&gt; master</div></pre></td></tr></table></figure></p>\n<p>如你所见，来自我们<code>post-receive</code>钩子的文本出现在命令行的输出中。如果我们使用浏览器访问我们生产服务器的域名或者IP地址，我们可以看到我们项目的当前版本：<br><img src=\"/20160518/git-hooks/pushed_prod.png\" alt=\"pushed_prod.png\" title=\"\"></p>\n<p>看起来钩子收到信息时成功将我们的代码推送到生产服务器。</p>\n<p>现在，让我们测试我们的新代码。回到开发机上，我们将创建一个新分支并进行一些改变。这样，我们可以确保在我们部署到生产环境之前，一切就绪。</p>\n<p>建立一个叫<code>\u0006test_feature</code>的新分支，然后checkout：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git checkout -b test_feature</div></pre></td></tr></table></figure></p>\n<p>我们现在处于<code>test_feature</code>分支中，让我们做一些改变，稍后推送到生产服务器中。我们将提交到这个分支中：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">\"&lt;h2&gt;New Feature Here&lt;/h2&gt;\"</span> &gt;&gt; index.html</div><div class=\"line\">git add .</div><div class=\"line\">git commit -m <span class=\"string\">\"Trying out new feature\"</span></div></pre></td></tr></table></figure></p>\n<p>这时候，如果你访问开发机的IP地址或者域名，你将看到你的做的修改。<br><img src=\"/20160518/git-hooks/devel_commit.png\" alt=\"devel_commit.png\" title=\"\"></p>\n<p>这是因为开发机仍在每次提交后部署。这个工作流很棒，它可以让我们在部署生产环境之前测试我们的修改。</p>\n<p>我们可以推送我们的<code>test_feature</code>分支到远程生产服务器：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git push production test_feature</div></pre></td></tr></table></figure></p>\n<p>在<code>post-receive</code>钩子的输出中应该有其它的信息：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">Counting objects: 5, done.</div><div class=\"line\">Delta compression using up to 2 threads.</div><div class=\"line\">Compressing objects: 100% (2/2), done.</div><div class=\"line\">Writing objects: 100% (3/3), 301 bytes | 0 bytes/s, done.</div><div class=\"line\">Total 3 (delta 1), reused 0 (delta 0)</div><div class=\"line\">remote: Ref refs/heads/test_feature successfully received.  Doing nothing: only the master branch may be deployed on this server</div><div class=\"line\">To demo@107.170.14.32:proj</div><div class=\"line\">   83e9dc4..5617b50  test_feature -&gt; test_feature</div></pre></td></tr></table></figure></p>\n<p>如果我们在浏览器中查看生产服务器，你将看到什么都没有改变。<br>这就是我们所希望的，因为我们的改变不在master分支中。</p>\n<p>现在我们已经在开发机器上测试了我们的修改，我们确定要合并这个修改到master分支上。我们可以checkout到master分支，然后在开发机上merge<code>test_feature</code>分支。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">git checkout master</div><div class=\"line\">git merge test_feature</div></pre></td></tr></table></figure>\n<p>现在，你已经将新分支合并到主分支。推送到生产服务器将部署这个修改：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git push production master</div></pre></td></tr></table></figure></p>\n<p>如果我们在浏览器查看生产服务器，我们将看到我们的改变：</p>\n<img src=\"/20160518/git-hooks/new_prod.png\" alt=\"new_prod.png\" title=\"\">\n<p>使用这个工作流，我们可以在开发机上直接显示提交的修改。生产机器只在master分支被推送时候被更新。</p>\n<h2 id=\"结论\"><a href=\"#结论\" class=\"headerlink\" title=\"结论\"></a>结论</h2><p>如果你跟着我的步骤做完，你应该已经了解了git钩子有多种方法将我们一部分工作自动化。它们可以帮你部署代码，可以通过拒绝不符合要求的修改和提交，来控制代码质量。</p>\n<p>然而，git钩子的效用很难讨论，它实际的实现非常复杂。练习实现多种配置，试验解析参数，标准输入，跟踪git如何构建钩子的环境将会带你慢慢了解如何写有效的钩子脚本。从长远上看，时间的投入通常是值得的，它可以很简单的节省你和你团队在项目工作中很多手动操作的负担。</p>\n","excerpt":"<blockquote>\n<p>翻译自<a href=\"https://www.digitalocean.com/community/tutorials/how-to-use-git-hooks-to-automate-development-and-deployment-tasks\">How To Use Git Hooks To Automate Development and Deployment Tasks\n</a></p>\n</blockquote>\n<h2 id=\"介绍\"><a href=\"#介绍\" class=\"headerlink\" title=\"介绍\"></a>介绍</h2><p>版本控制在现代软件开发中变成了一个核心的要求。它使得项目可以安全的记录变更，恢复，完整性检查，多人协作等等。<code>git</code>在这些年里被广泛的接纳，得益于其分布式的架构和它在向各方传递变更的速度。</p>\n<p>虽然<code>git</code>的工具套件提供了很多现成的特性，其中最实用的就是它的灵活性。通过对钩子系统的使用，git允许开发者或者管理员通过让git根据不同的events和actions的触发来运行自己的脚本，从而对git的功能进行扩展。</p>\n<p>这篇文章中，我会介绍git钩子的原理和如何实现自动化任务。我们将会使用Ubuntu 14.04，不过所有系统运行git都大同小异。</p>","more":"<h2 id=\"准备工作\"><a href=\"#准备工作\" class=\"headerlink\" title=\"准备工作\"></a>准备工作</h2><p>开始之前，你需要先在你的运行环境中安装好git。你可以参考这篇教程<a href=\"https://www.digitalocean.com/community/tutorials/how-to-install-git-on-ubuntu-14-04\">Ubuntu14.04安装git</a>。</p>\n<p>你应该简要了解git的使用。如果你需要入门，可以看看这个教程<a href=\"https://www.digitalocean.com/community/tutorial_series/introduction-to-git-installation-usage-and-branches\">Git介绍：安装，使用，分支</a></p>\n<p>如果上边的都没有问题，继续往下看。</p>\n<h2 id=\"Git-Hooks的基本原理\"><a href=\"#Git-Hooks的基本原理\" class=\"headerlink\" title=\"Git Hooks的基本原理\"></a>Git Hooks的基本原理</h2><p>Git Hooks是一个相当简单的概念，它为了满足特定的需求。当开发者开发一个协作的项目，维护代码风格，或者部署项目（这些都是使用git常见的情况）时，经常有有些重复性任务在每次完成一个动作时都要执行。</p>\n<p>Git钩子是基于事件的。当你运行了特定的git命令，git会检查git仓库中<code>hooks</code>路径下有没有相关脚本要执行。</p>\n<p>有的脚本在git指令之前执行，这可以用来确保代码的完整（进行一些完整性检查）或者提前部署一下环境。那些在git事件之后执行的脚本，一般就是用来部署代码，重新建立权限（一些git不能很好记录的事情）等等。</p>\n<p>使用git的这些功能，就可以强制实施策略，确保一致性，和控制你的环境，甚至处理部署任务。</p>\n<p>Scott Chacon写的<a href=\"http://git-scm.com/book\">Pro Git</a>这本书试图将钩子归类，他是这样写的：</p>\n<ul>\n<li><p>客户端钩子：在提交者计算机上被调用和执行的钩子。这些可以进一步分为一些小的类别：</p>\n<ul>\n<li><p>提交工作流钩子：提交钩子是用来检测那些需要在提交的前后需要执行的动作。他们可以用来运行完整性检查,预填充提交信息和验证消息详情。你也可以基于提交来推送通知。</p>\n</li>\n<li><p>邮件工作流的钩子：这一类的钩子包含了当你使用邮件补丁时触发的动作。类似Linux内核提交和通过邮件方法回看补丁。这些都和提交钩子是一样的，但是邮件钩子可以被负责申请提交代码的管理员所使用。</p>\n</li>\n<li><p>其它：其它客户端钩子包括那些在merge,check out,rebase,rewrite,clean时执行的钩子。</p>\n</li>\n</ul>\n</li>\n<li>服务端钩子：这些钩子在那些用来接收推送代码的服务器上执行。通常，这就是项目的主要git仓库。同样，Chacon也把这些细分成一下几类。<ul>\n<li><code>pre-receive</code>和<code>post-receive</code>: 这两个在服务器收到push操作时执行，比如检查项目一致性和在push之后立即部署项目。</li>\n<li><code>update</code>:这个和<code>pre-receive</code>很像，但是它是一个分支接着一个分支的运作的基础上,在每个分支被更新之前执行。</li>\n</ul>\n</li>\n</ul>\n<p>这些分类能使我们对可以建立钩子的事件有了一个大体的认识。但是为了确切了解他们是怎么运作的，最好还是亲身试验来找出你想要实现的方案。</p>\n<p>某些钩子还需要参数。这意味着，当git为某个钩子调用脚本，它会传入脚本会用到的一些相关的数据，以便完成相应的任务。所有的hooks如下表所示。</p>\n<table>\n<thead>\n<tr>\n<th>Hook 名称</th>\n<th>触发命令</th>\n<th>描述</th>\n<th>参数（数量和描述）  </th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>applypatch-msg</td>\n<td><code>git am</code></td>\n<td>可以编辑提交信息，常用于验证或者标准化补丁信息。非零状态会放弃这次提交</td>\n<td>1个参数，包含被建议提交信息的临时文件名</td>\n</tr>\n<tr>\n<td>pre-applypatch</td>\n<td><code>git am</code></td>\n<td>在补丁被运用之后，但是提交之前运行。非零退出，修改仍为未提交状态。可以用来在正式提交之前检查状态树</td>\n<td>无</td>\n</tr>\n<tr>\n<td>post-applypatch</td>\n<td><code>git am</code></td>\n<td>这个钩子在补丁应用和提交之后运行。因此它无法阻止打补丁的过程，主要用于创建通知。</td>\n<td>无</td>\n</tr>\n<tr>\n<td>pre-commit</td>\n<td><code>git commit</code></td>\n<td>这个钩子在获取提交信息之前运行。返回非零值时放弃此次提交，它是用来检查提交本身(而不是提交信息）</td>\n<td>无</td>\n</tr>\n<tr>\n<td>prepare-commit-msg</td>\n<td><code>git commit</code></td>\n<td>在接受到默认提交信息之后，在提交信息编辑器显示之前运行。返回非零值退出，放弃这次提交。它可以用来以一种不可被取消的方式编辑信息。</td>\n<td>(1到3个参数)文件名连同提交信息，原始提交信息（<code>message</code>,<code>template</code>,<code>merge</code>,<code>squash</code>,<code>commit</code>),和提交的SHA-1校验和(当对已有信息进行操作时)。</td>\n</tr>\n<tr>\n<td>commit-msg</td>\n<td><code>git commit</code></td>\n<td>可以被用来在信息被编辑之后调整信息，以便确保它符合标准，或者依照标准驳回此信息。如果该hook脚本以非零退出，<code>Git</code>放弃提交。</td>\n<td>1个参数，存放提交信息的文件。</td>\n</tr>\n<tr>\n<td>post-commit</td>\n<td><code>git commit</code></td>\n<td>在整个提交过程完成后运行。因此，它不能中断提交。这个hook主要用来允许通知。</td>\n<td>无</td>\n</tr>\n<tr>\n<td>pre-rebase</td>\n<td><code>git rebase</code></td>\n<td>当rebase一个分支的时候执行。主要用于在不可取的时候中止rebase。</td>\n<td>(1到2个参数)上游分支的节点，需要被rebase的分支(在rebase分支为当前时不设置)</td>\n</tr>\n<tr>\n<td>post-checkout</td>\n<td><code>git checkout</code>和<code>git clone</code></td>\n<td>在更新工作树之后执行checkout或者clone之后运行。它主要用于验证状态，展示区别和在必要时配置环境。</td>\n<td>(3个参数)之前<code>HEAD</code>的引用，新<code>HEAD</code>的引用，是否为一个检出的分支的标记。（1个参数）或者一个检出的文件（0）</td>\n</tr>\n<tr>\n<td>post-merge</td>\n<td><code>git merge</code>或<code>git pull</code></td>\n<td>在merge之后执行。因此，它不能中止merge操作，它可以用来存储或者申请权限或者其他不属于git的数据。</td>\n<td>(1个参数)merge是否为squash的标记。</td>\n</tr>\n<tr>\n<td>pre-push</td>\n<td><code>git push</code></td>\n<td>在push到远程服务器之前执行。再加上参数，额外的信息，以<code>&lt;本地ref&gt; &lt;本地sha1&gt; &lt;远程ref&gt; &lt;远程sha1&gt;</code>的形式。解析输入可以获得可以用来检验的额外信息。比如说，如果<code>local sha1</code>是40个零的长度，push是一个删除操作，如果<code>remote sha1</code>是40个零，那么它是一个新的分支。这个特性可以将已经提交的refs和当前状况做很多比较。非零退出，将会中止这次提交。</td>\n<td>(2个参数)远程地址名称，远程地址</td>\n</tr>\n<tr>\n<td>pre-receive</td>\n<td>远程仓库<code>git-receive-pack</code></td>\n<td>在更新提交的refs之前，在远程仓库上运行。非零的状态中止。虽然不接受参数，它为每一个ref传递一个标准输入的字符串，以<code>&lt;旧的值&gt; &lt;新的值&gt; &lt;ref的名称&gt;</code>的形式。</td>\n<td>无</td>\n</tr>\n<tr>\n<td>update</td>\n<td>远程仓库<code>git-receive-pack</code></td>\n<td>在远程仓库上，每一个ref被提交运行一次，而不是每次提交都运行。非零的状态会中止。这可以用来确保所有的提交都只用fast forward模式</td>\n<td>(三个参数)被更新的ref名称，旧的对象名，新的对象名。</td>\n</tr>\n<tr>\n<td>post-receive</td>\n<td>远程仓库<code>git-receive-pack</code></td>\n<td>在所有的ref更新后运行。不需要参数，但是通过标准输入接受信息，格式为<code>&lt;旧的值&gt; &lt;新的值&gt; &lt;ref的名称&gt;</code>。因为在更新后运行，所以不能被中止。</td>\n<td>无</td>\n</tr>\n<tr>\n<td>post-update</td>\n<td>远程仓库<code>git-receive-pack</code></td>\n<td>在所有的refs都已经被push之后只运行一次。它在这方面和post-receive很相似，但是不接受之前和之后的值。它主要用来根据被推送的refs实现通知。</td>\n<td>每一个被推送的包含它名字的refs。</td>\n</tr>\n<tr>\n<td>pre-auto-gc</td>\n<td><code>git gc --auto</code></td>\n<td>在<code>clean</code>仓库之前自动做一些检查</td>\n<td>无</td>\n</tr>\n<tr>\n<td>post-rewrite</td>\n<td><code>git commit --amend</code>,<code>git-rebase</code></td>\n<td>当git命令重写已经提交的数据时执行。除了接受的参数，它还以<code>&lt;旧sha1&gt;&lt;新sha1&gt;</code>的格式接受标准输入的字符串。</td>\n<td>(1个参数)触发这个钩子的命令名称(amend或者rebase)</td>\n</tr>\n</tbody>\n</table>\n<p>现在你已经有了大体的概念，我们可以在几个场景下试验一下。</p>\n<h2 id=\"建立一个仓库\"><a href=\"#建立一个仓库\" class=\"headerlink\" title=\"建立一个仓库\"></a>建立一个仓库</h2><p>一开始，我们需要先建立一个新的空仓库，在我们的主目录下。我们可以给它命名为<code>proj</code>。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">mkdir ~/proj</div><div class=\"line\"><span class=\"built_in\">cd</span> ~/proj</div><div class=\"line\">git init</div></pre></td></tr></table></figure>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">Initialized empty Git repository <span class=\"keyword\">in</span> /home/demo/proj/.git/</div></pre></td></tr></table></figure>\n<p>现在，我们在这个在git控制下的空目录内。在我们开始之前，我们先看看目录中的隐藏文件，它们在<code>.git</code>目录下：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">cd</span> .git</div><div class=\"line\">ls -F</div></pre></td></tr></table></figure></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">branches/  config  description  HEAD  hooks/  info/  objects/  refs/</div></pre></td></tr></table></figure>\n<p>我们可以看到一些文件和目录。我们感兴趣的就是这个<code>hooks</code>目录：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">cd</span> hooks</div><div class=\"line\">ls <span class=\"_\">-l</span></div></pre></td></tr></table></figure></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">total 40</div><div class=\"line\">-rwxrwxr-x 1 demo demo  452 Aug  8 16:50 applypatch-msg.sample</div><div class=\"line\">-rwxrwxr-x 1 demo demo  896 Aug  8 16:50 commit-msg.sample</div><div class=\"line\">-rwxrwxr-x 1 demo demo  189 Aug  8 16:50 post-update.sample</div><div class=\"line\">-rwxrwxr-x 1 demo demo  398 Aug  8 16:50 pre-applypatch.sample</div><div class=\"line\">-rwxrwxr-x 1 demo demo 1642 Aug  8 16:50 pre-commit.sample</div><div class=\"line\">-rwxrwxr-x 1 demo demo 1239 Aug  8 16:50 prepare-commit-msg.sample</div><div class=\"line\">-rwxrwxr-x 1 demo demo 1352 Aug  8 16:50 pre-push.sample</div><div class=\"line\">-rwxrwxr-x 1 demo demo 4898 Aug  8 16:50 pre-rebase.sample</div><div class=\"line\">-rwxrwxr-x 1 demo demo 3611 Aug  8 16:50 update.sample</div></pre></td></tr></table></figure>\n<p>在这儿，我们可以看到。首先，每一个文件都标记成了可执行。因为这些脚本都是按照名称执行的，他们必须是可执行的，而且它们的第一行必须是<a href=\"http://en.wikipedia.org/wiki/Shebang_(Unix\">Shebang(<code>#!</code>)</a>#Magic_number)指向正确的脚本解释器。比较常见的是bash，perl，python等。</p>\n<p>你还会注意到的是，所有文件都是以<code>.sample</code>结尾的。这是因为git只是简单的看文件名来查找要执行的hook文件。文件名和git想要查找的出现偏差，这样可以达到禁用的目的。想启用任意一个脚本，只需要去掉结尾的<code>.sample</code>后缀。</p>\n<p>让我们退回到我们的工作目录。<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">cd</span> ../..</div></pre></td></tr></table></figure></p>\n<h2 id=\"第一个例子：用一个post-commit-Hook来部署一个web服务。\"><a href=\"#第一个例子：用一个post-commit-Hook来部署一个web服务。\" class=\"headerlink\" title=\"第一个例子：用一个post-commit Hook来部署一个web服务。\"></a>第一个例子：用一个post-commit Hook来部署一个web服务。</h2><p>我们第一个例子，使用<code>post-commit</code>hook来展示，如何在每一次提交之后在本地web服务器中部署代码。这不是在生产环境中使用的hook，但是可以让你验证一些重要的，文档里没怎么体现的东西，他们是你在使用hooks的时候应该知道的。</p>\n<p>首先，我们安装一个Apache web server。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo apt-get update</div><div class=\"line\">sudo apt-get install apache2</div></pre></td></tr></table></figure>\n<p>为了让我们的脚本可以修改web根目录<code>/var/www/html</code>(这是Ubuntu14.04的文档根目录。可以按需修改)，我们需要有写权限。我们给我们的普通用户这个目录的所有权。输入以下命令：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo chown -R `whoami`:`id -gn` /var/www/html</div></pre></td></tr></table></figure></p>\n<p>现在，在我们的项目根目录下，创建<code>index.html</code>文件<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">cd</span> ~/proj</div><div class=\"line\">nano index.html</div></pre></td></tr></table></figure></p>\n<p>在文件中，我们添加一小段HTML主要用做论证我们的观点。不用太复杂：<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>Here is a title!<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>Please deploy me!<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></div></pre></td></tr></table></figure></p>\n<p>添加这个文件到git：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git add .</div></pre></td></tr></table></figure></p>\n<p>在提交之前，我们将要为这个仓库建立我们的<code>post-commit</code>钩子。在<code>.git/hooks</code>中创建文件<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">vim .git/hooks/post-commit</div></pre></td></tr></table></figure></p>\n<p>在我们在文件中添加脚本之前，我们需要知道git在运行钩子时如何建立环境。</p>\n<h2 id=\"关于git钩子环境变量的一些题外话\"><a href=\"#关于git钩子环境变量的一些题外话\" class=\"headerlink\" title=\"关于git钩子环境变量的一些题外话\"></a>关于git钩子环境变量的一些题外话</h2><p>在我们开始写脚本之前，我们需要知道git钩子运行时建立的环境变量。为了让我们的脚本工作，我们最终需要解除一个git调用<code>post-commit</code>钩子时设置的环境变量。</p>\n<p>如果你希望写一个运行稳定的git钩子，你需要先理解一个很重要的知识点。git根据你调用哪个钩子来建立不同的环境变量。这意味着git获取信息的环境会根据钩子的不同而不同。</p>\n<p>第一个状况是，会使得你的脚本运行环境不可预测，如果你不知道哪个变量被自动设置了。第二个状况就是那个被设置的变量在git自身的文档里几乎没有体现。</p>\n<p>幸运的是，Mark Longair开发了当运行钩子时<a href=\"http://longair.net/blog/2011/04/09/missing-git-hooks-documentation/\">检测git设置的每一个变量的方法</a>。它涉及到在git钩子脚本中添加下列内容：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">#!/bin/bash</span></div><div class=\"line\"><span class=\"built_in\">echo</span> Running <span class=\"variable\">$BASH_SOURCE</span></div><div class=\"line\"><span class=\"built_in\">set</span> | egrep GIT</div><div class=\"line\"><span class=\"built_in\">echo</span> PWD is <span class=\"variable\">$PWD</span></div></pre></td></tr></table></figure></p>\n<p>他的篇文章是2011年写的，当时git的版本是1.7.1，所以现在已经有了一些变化。我的这篇文章是2014年8月写的，当前git版本是1.9.1。</p>\n<p>在此git版本下的测试结果如下（包括工作目录）。测试用的本地工作目录为<code>/home/demo/test_hooks</code>和一个裸的远程仓库<code>/home/demo/origin/test_hooks.git</code>:</p>\n<ul>\n<li><p>钩子：<code>applypatch-msg</code>, <code>pre-applypatch</code>, <code>post-applypatch</code></p>\n<ul>\n<li>环境变量：</li>\n<li><code>GIT_AUTHOR_DATE=&#39;Mon, 11 Aug 2014 11:25:16 -0400&#39;</code></li>\n<li><code>GIT_AUTHOR_EMAIL=demo@example.com</code></li>\n<li><code>GIT_AUTHOR_NAME=&#39;Demo User&#39;</code></li>\n<li><code>GIT_INTERNAL_GETTEXT_SH_SCHEME=gnu</code></li>\n<li><code>GIT_REFLOG_ACTION=am</code></li>\n<li>工作目录：<code>/home/demo/test_hooks</code></li>\n</ul>\n</li>\n<li><p>钩子：<code>pre-commit</code>, <code>prepare-commit-msg</code>, <code>commit-msg</code>, <code>post-commit</code></p>\n<ul>\n<li>环境变量：</li>\n<li><code>GIT_AUTHOR_DATE=&#39;@1407774159 -0400&#39;</code></li>\n<li><code>GIT_AUTHOR_EMAIL=demo@example.com</code></li>\n<li><code>GIT_AUTHOR_NAME=&#39;Demo User&#39;</code></li>\n<li><code>GIT_DIR=.git</code></li>\n<li><code>GIT_EDITOR=:</code></li>\n<li><code>GIT_INDEX_FILE=.git/index</code></li>\n<li><code>GIT_PREFIX=</code></li>\n<li>工作目录：<code>/home/demo/test_hooks</code></li>\n</ul>\n</li>\n<li>钩子：<code>pre-rebase</code><ul>\n<li>环境变量：</li>\n<li><code>GIT_INTERNAL_GETTEXT_SH_SCHEME=gnu</code></li>\n<li><code>GIT_REFLOG_ACTION=rebase</code></li>\n<li>工作目录：<code>/home/demo/test_hooks</code></li>\n</ul>\n</li>\n<li>钩子：<code>post-checkout</code><ul>\n<li>环境变量：</li>\n<li><code>GIT_DIR=.git</code></li>\n<li><code>GIT_PREFIX=</code></li>\n<li>工作目录：<code>/home/demo/test_hooks</code></li>\n</ul>\n</li>\n<li>钩子：<code>post-merge</code><ul>\n<li>环境变量：</li>\n<li><code>GITHEAD_4b407c...</code></li>\n<li><code>GIT_DIR=.git</code></li>\n<li><code>GIT_INTERNAL_GETTEXT_SH_SCHEME=gnu</code></li>\n<li><code>GIT_PREFIX=</code></li>\n<li><code>GIT_REFLOG_ACTION=&#39;pull other master&#39;</code></li>\n<li>工作目录：<code>/home/demo/test_hooks</code></li>\n</ul>\n</li>\n<li>钩子：<code>pre-push</code><ul>\n<li>环境变量：</li>\n<li><code>GIT_PREFIX=</code></li>\n<li>工作目录：<code>/home/demo/test_hooks</code></li>\n</ul>\n</li>\n<li>钩子：<code>pre-receive·</code>, <code>update</code>, <code>post-receive</code>, <code>post-update</code><ul>\n<li>环境变量：</li>\n<li><code>GIT_DIR=.</code></li>\n<li>工作目录：<code>/home/demo/origin/test_hooks.git</code></li>\n</ul>\n</li>\n<li>钩子：<code>pre-auto-gc</code><ul>\n<li>(未知，因为这个钩子很难可靠地触发)</li>\n</ul>\n</li>\n<li>钩子：<code>post-rewrite</code><ul>\n<li>环境变量：</li>\n<li><code>GIT_AUTHOR_DATE=&#39;@1407773551 -0400&#39;</code></li>\n<li><code>GIT_AUTHOR_EMAIL=demo@example.com</code></li>\n<li><code>GIT_AUTHOR_NAME=&#39;Demo User&#39;</code></li>\n<li><code>GIT_DIR=.git</code></li>\n<li><code>GIT_PREFIX=</code></li>\n<li>工作目录：<code>/home/demo/test_hooks</code></li>\n</ul>\n</li>\n</ul>\n<p>这些变量暗示了git如何查看自己的环境。我们将利用上述关于变量的信息来确保我们的脚本正确考虑了它的环境。</p>\n<h2 id=\"回到脚本\"><a href=\"#回到脚本\" class=\"headerlink\" title=\"回到脚本\"></a>回到脚本</h2><p>现在你对所需的环境有了一定概念（看一下为<code>post-commit</code>钩子所设置的变量），我们可以开始我们的脚本了。</p>\n<p>由于git钩子是标准脚本，我们需要告诉git，我们用什么解释器：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">#!/bin/bash</div></pre></td></tr></table></figure></p>\n<p>在这个之后，我们只要在提交后使用git取出最新版本的仓库，放到web目录下。要完成这件事儿，我们需要把我们的工作目录设置到apache的文件根目录。我们也需要把我们的git目录设置为仓库的地址。</p>\n<p>我们想要强制操作来保证每一次都成功，即使当前工作目录中存在冲突。脚本应该这样：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"> #!/bin/bash</div><div class=\"line\">git --work-tree=/var/www/html --git-dir=/home/demo/proj/.git checkout -f</div></pre></td></tr></table></figure></p>\n<p>这时，我们已经几乎完成了。然而，我们需要更仔细查看每次<code>post-commit</code>钩子运行时的环境变量。尤其是<code>GIT_INDEX_FILE</code>被设置成<code>.git/index</code>。</p>\n<p>这个路径与工作目录相关，在我们的例子中是<code>/var/www/html</code>。由于git的index文件不存在，脚本会失效，如果我们保留当前的设置。为了避免这种情况，我们可以手动设置这个变量，这将导致git相对于仓库目录去搜索。我们需要在脚本中的<code>checkout</code>之前添加一行:<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"> <span class=\"comment\">#!/bin/bash</span></div><div class=\"line\"><span class=\"built_in\">unset</span> GIT_INDEX_FILE</div><div class=\"line\">git --work-tree=/var/www/html --git-dir=/home/demo/proj/.git checkout <span class=\"_\">-f</span></div></pre></td></tr></table></figure></p>\n<p>这些冲突正是git钩子出的问题经常很难诊断的原因。你必须清楚git是怎么构建它的运行环境的。</p>\n<p>当你编辑结束后，保存并退出这个文件。</p>\n<p>因为这是一个常规的脚本文件，我们需要让它有可执行权限：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">chmod +x .git/hooks/post-commit</div></pre></td></tr></table></figure></p>\n<p>现在，我们最终准备好在我们的git仓库中提交变更。确保你退到了正确的目录，并且提交这些变更：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">cd</span> ~/proj</div><div class=\"line\">git commit -m <span class=\"string\">\"here we go...\"</span></div></pre></td></tr></table></figure></p>\n<p>现在，如果你使用浏览器访问服务器的域名或者IP地址，你讲看到你刚刚创建的这个index.html文件：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">http://server_domain_or_IP</div></pre></td></tr></table></figure></p>\n<img src=\"/20160518/git-hooks/first_deploy.png\" alt=\"first_deploy.png\" title=\"\">\n<p>正如你所见，我们最近的变更在提交之后被自动的推送到了服务器根目录下。我们可以再做一些改变来证明，钩子在每次提交之后都正确工作了。<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">\"&lt;p&gt;Here is a change.&lt;/p&gt;\"</span> &gt;&gt; index.html</div><div class=\"line\">git add .</div><div class=\"line\">git commit -m <span class=\"string\">\"First change\"</span></div></pre></td></tr></table></figure></p>\n<p>当我们刷新浏览器，我们可以直接看到新的变化：<br><img src=\"/20160518/git-hooks/deploy_changes.png\" alt=\"deploy_changes.png\" title=\"\"></p>\n<p>如你所见，这种配置比较方便本地测试，然而，你可能永远不希望在生产环境中这样提交。还是在经过测试后确保没问题了再提交，这样比较安全。</p>\n<h2 id=\"利用Git钩子在另外的生产环境中部署\"><a href=\"#利用Git钩子在另外的生产环境中部署\" class=\"headerlink\" title=\"利用Git钩子在另外的生产环境中部署\"></a>利用Git钩子在另外的生产环境中部署</h2><p>在第二个例子中，我们将要示范一个更新生产服务器更好的方式。我们可以通过使用push-to-deploy模型以便当我们推送到裸仓库时更新我们的web服务器。</p>\n<p>我们可以沿用上面的服务器当作开发机。这是我们做改动工作的地方。我们可以在每次提交之后看到改变。</p>\n<p>在我们的生产机器上，我们将会配置另一个web服务器，一个裸的仓库用来推送我们的变更，还有一个git钩子在每次接受到推送都会执行。以普通用户身份，用sudo，完成系列步骤。</p>\n<h2 id=\"建立生产环境的post-receive钩子\"><a href=\"#建立生产环境的post-receive钩子\" class=\"headerlink\" title=\"建立生产环境的post-receive钩子\"></a>建立生产环境的post-receive钩子</h2><p>现在生产环境中安装web服务器：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo apt-get update</div><div class=\"line\">sudo apt-get install apache2</div></pre></td></tr></table></figure></p>\n<p>然后，我们再更改目录拥有者给当前用户：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo chown -R `whoami`:`id -gn` /var/www/html</div></pre></td></tr></table></figure></p>\n<p>我们还需要在服务器上安装git：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo apt-get install git</div></pre></td></tr></table></figure></p>\n<p>现在我们可以在home目录下创建一个目录，来存放我们的仓库。然后我们进入这个目录来初始化一个裸的仓库。裸仓库不包含工作目录，这对于服务器来说更好，因为我们不在上面直接工作：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">mkdir ~/proj</div><div class=\"line\"><span class=\"built_in\">cd</span> ~/proj</div><div class=\"line\">git init --bare</div></pre></td></tr></table></figure></p>\n<p>这是一个裸仓库，所以没有工作目录并且所有文件都在<code>.git</code>文件夹下，该文件夹通常在根目录下。</p>\n<p>我们需要创建另一个git钩子，这一次，我们感兴趣的是post-receive钩子，它是在服务器端接收到<code>git push</code>时执行。在编辑器中打开这个文件：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">nano hooks/post-receive</div></pre></td></tr></table></figure></p>\n<p>在脚本的开始，我们需要指定我们脚本的类型，然后我们可以写和<code>post-commit</code>一样的checkout命令，修改成这台机器使用的目录：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"> <span class=\"comment\">#!/bin/bash</span></div><div class=\"line\">git --work-tree=/var/www/html --git-dir=/home/demo/proj checkout <span class=\"_\">-f</span></div></pre></td></tr></table></figure></p>\n<p>由于这是一个裸仓库，<code>--git-dir</code>应该指向仓库目录的顶层。其它都和之前一样。</p>\n<p>然后，我们需要在脚本里增加一些额外的逻辑。如果我们不小心推送了<code>test-feature</code>分支到服务器上，我们不希望它被部署。我们想确保只部署<code>master</code>分支。</p>\n<p>关于<code>post-receive</code>钩子，你在之前的表格里可能已经注意到，git传递旧版本的提交hash，新版本的提交hash还有作为标准输入到脚本被推送的引用。我们可以通过它检查，该引用是否为<code>master</code>分支。</p>\n<p>首先我们需要读取这个标注输入。每一个被推送的引用，它的三部分信息（旧版本，新版本，引用）被提供给脚本，作为标准输入，之间用空格分开。我们可以用一个<code>while</code>循环包住这条<code>git</code>命令。<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"> <span class=\"comment\">#!/bin/bash</span></div><div class=\"line\"><span class=\"keyword\">while</span> <span class=\"built_in\">read</span> oldrev newrev ref</div><div class=\"line\"><span class=\"keyword\">do</span></div><div class=\"line\">    git --work-tree=/var/www/html --git-dir=/home/demo/proj checkout <span class=\"_\">-f</span></div><div class=\"line\"><span class=\"keyword\">done</span></div></pre></td></tr></table></figure></p>\n<p>现在，我们将根据你被提交的内容产生了3个变量。对于master分支的推送，<code>ref</code>对象将包含像是<code>refs/heads/master</code>的东西。我们可以通过使用<code>if</code>检查一下服务器接收到的<code>ref</code>是否为这种格式：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">#!/bin/bash</span></div><div class=\"line\"><span class=\"keyword\">while</span> <span class=\"built_in\">read</span> oldrev newrev ref</div><div class=\"line\"><span class=\"keyword\">do</span></div><div class=\"line\">    <span class=\"keyword\">if</span> [[ <span class=\"variable\">$ref</span> =~ .*/master$ ]];</div><div class=\"line\">    <span class=\"keyword\">then</span></div><div class=\"line\">        git --work-tree=/var/www/html --git-dir=/home/demo/proj checkout <span class=\"_\">-f</span></div><div class=\"line\">    <span class=\"keyword\">fi</span></div><div class=\"line\"><span class=\"keyword\">done</span></div></pre></td></tr></table></figure>\n<p>对于服务器端的钩子，git实际上可以将信息传回客户端。任何发送到标准输出的东西都会跳转到客户端。这给了我们机会显式通知用户做了什么样的决策。</p>\n<p>我们应该增加一些文字，描述我们检测到的情况，和我们执行的动作。我们应该添加一个<code>else</code>代码，在一个非<code>master</code>分支被成功接收时通知用户，即使这个动作并不触发部署：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\"> <span class=\"comment\">#!/bin/bash</span></div><div class=\"line\"><span class=\"keyword\">while</span> <span class=\"built_in\">read</span> oldrev newrev ref</div><div class=\"line\"><span class=\"keyword\">do</span></div><div class=\"line\">    <span class=\"keyword\">if</span> [[ <span class=\"variable\">$ref</span> =~ .*/master$ ]];</div><div class=\"line\">    <span class=\"keyword\">then</span></div><div class=\"line\">        <span class=\"built_in\">echo</span> <span class=\"string\">\"Master ref received.  Deploying master branch to production...\"</span></div><div class=\"line\">        git --work-tree=/var/www/html --git-dir=/home/demo/proj checkout <span class=\"_\">-f</span></div><div class=\"line\">    <span class=\"keyword\">else</span></div><div class=\"line\">        <span class=\"built_in\">echo</span> <span class=\"string\">\"Ref <span class=\"variable\">$ref</span> successfully received.  Doing nothing: only the master branch may be deployed on this server.\"</span></div><div class=\"line\">    <span class=\"keyword\">fi</span></div><div class=\"line\"><span class=\"keyword\">done</span></div></pre></td></tr></table></figure></p>\n<p>结束之后，保存并关闭这个文件。</p>\n<p>切记，我们必须给这个脚本可执行的权限。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">chmod +x hooks/post-receive</div></pre></td></tr></table></figure>\n<p>现在我们可以在我们本地对这个远程服务器建立访问了。</p>\n<h2 id=\"在本地机器上配置远程服务器\"><a href=\"#在本地机器上配置远程服务器\" class=\"headerlink\" title=\"在本地机器上配置远程服务器\"></a>在本地机器上配置远程服务器</h2><p>回到我们的本地机器（开发机）,进入我们项目的工作目录：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">cd</span> ~/proj</div></pre></td></tr></table></figure></p>\n<p>在文件夹内，添加远程服务器，命名为<code>production</code>。你需要知道声场服务器的用户名，IP地址或者域名。你还需要知道你裸仓库对于home目录的相对路径。</p>\n<p>你输入的命令应该是大体这个样子：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git remote add production demo@server_domain_or_IP:proj</div></pre></td></tr></table></figure></p>\n<p>现在我们推送我们本地分支到生产服务器：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git push production master</div></pre></td></tr></table></figure></p>\n<p>如果你没配置SSH的key，那你可能必须输入生产服务器的用户密码。你会看到类似下面的显示：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">Counting objects: 8, done.</div><div class=\"line\">Delta compression using up to 2 threads.</div><div class=\"line\">Compressing objects: 100% (3/3), done.</div><div class=\"line\">Writing objects: 100% (4/4), 473 bytes | 0 bytes/s, done.</div><div class=\"line\">Total 4 (delta 0), reused 0 (delta 0)</div><div class=\"line\">remote: Master ref received.  Deploying master branch...</div><div class=\"line\">To demo@107.170.14.32:proj</div><div class=\"line\">   009183f..f1b9027  master -&gt; master</div></pre></td></tr></table></figure></p>\n<p>如你所见，来自我们<code>post-receive</code>钩子的文本出现在命令行的输出中。如果我们使用浏览器访问我们生产服务器的域名或者IP地址，我们可以看到我们项目的当前版本：<br><img src=\"/20160518/git-hooks/pushed_prod.png\" alt=\"pushed_prod.png\" title=\"\"></p>\n<p>看起来钩子收到信息时成功将我们的代码推送到生产服务器。</p>\n<p>现在，让我们测试我们的新代码。回到开发机上，我们将创建一个新分支并进行一些改变。这样，我们可以确保在我们部署到生产环境之前，一切就绪。</p>\n<p>建立一个叫<code>\u0006test_feature</code>的新分支，然后checkout：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git checkout -b test_feature</div></pre></td></tr></table></figure></p>\n<p>我们现在处于<code>test_feature</code>分支中，让我们做一些改变，稍后推送到生产服务器中。我们将提交到这个分支中：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">\"&lt;h2&gt;New Feature Here&lt;/h2&gt;\"</span> &gt;&gt; index.html</div><div class=\"line\">git add .</div><div class=\"line\">git commit -m <span class=\"string\">\"Trying out new feature\"</span></div></pre></td></tr></table></figure></p>\n<p>这时候，如果你访问开发机的IP地址或者域名，你将看到你的做的修改。<br><img src=\"/20160518/git-hooks/devel_commit.png\" alt=\"devel_commit.png\" title=\"\"></p>\n<p>这是因为开发机仍在每次提交后部署。这个工作流很棒，它可以让我们在部署生产环境之前测试我们的修改。</p>\n<p>我们可以推送我们的<code>test_feature</code>分支到远程生产服务器：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git push production test_feature</div></pre></td></tr></table></figure></p>\n<p>在<code>post-receive</code>钩子的输出中应该有其它的信息：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">Counting objects: 5, done.</div><div class=\"line\">Delta compression using up to 2 threads.</div><div class=\"line\">Compressing objects: 100% (2/2), done.</div><div class=\"line\">Writing objects: 100% (3/3), 301 bytes | 0 bytes/s, done.</div><div class=\"line\">Total 3 (delta 1), reused 0 (delta 0)</div><div class=\"line\">remote: Ref refs/heads/test_feature successfully received.  Doing nothing: only the master branch may be deployed on this server</div><div class=\"line\">To demo@107.170.14.32:proj</div><div class=\"line\">   83e9dc4..5617b50  test_feature -&gt; test_feature</div></pre></td></tr></table></figure></p>\n<p>如果我们在浏览器中查看生产服务器，你将看到什么都没有改变。<br>这就是我们所希望的，因为我们的改变不在master分支中。</p>\n<p>现在我们已经在开发机器上测试了我们的修改，我们确定要合并这个修改到master分支上。我们可以checkout到master分支，然后在开发机上merge<code>test_feature</code>分支。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">git checkout master</div><div class=\"line\">git merge test_feature</div></pre></td></tr></table></figure>\n<p>现在，你已经将新分支合并到主分支。推送到生产服务器将部署这个修改：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git push production master</div></pre></td></tr></table></figure></p>\n<p>如果我们在浏览器查看生产服务器，我们将看到我们的改变：</p>\n<img src=\"/20160518/git-hooks/new_prod.png\" alt=\"new_prod.png\" title=\"\">\n<p>使用这个工作流，我们可以在开发机上直接显示提交的修改。生产机器只在master分支被推送时候被更新。</p>\n<h2 id=\"结论\"><a href=\"#结论\" class=\"headerlink\" title=\"结论\"></a>结论</h2><p>如果你跟着我的步骤做完，你应该已经了解了git钩子有多种方法将我们一部分工作自动化。它们可以帮你部署代码，可以通过拒绝不符合要求的修改和提交，来控制代码质量。</p>\n<p>然而，git钩子的效用很难讨论，它实际的实现非常复杂。练习实现多种配置，试验解析参数，标准输入，跟踪git如何构建钩子的环境将会带你慢慢了解如何写有效的钩子脚本。从长远上看，时间的投入通常是值得的，它可以很简单的节省你和你团队在项目工作中很多手动操作的负担。</p>"},{"title":"Medium的CSS编写指南の学习笔记","date":"2016-08-15T06:21:05.000Z","_content":"\n最近看了[《Medium的CSS写的真特么好》](https://medium.com/@fat/mediums-css-is-actually-pretty-fucking-good-b8e2a6c78b06#.71ttzygsz)这篇文章，我终于可以为我CSS一直以来杂乱无章的命名思路划上一个圆满的句号了。\n\n<!-- more -->\n\n### Javascript\n\n#### 命名规则为：`js-<targetname>`\n\n将那些被需要被js选择器捕获的class加上js前缀，**这些类绝对不要包含任何样式**\n\n```html\n<a href=\"/login\" class=\"btn btn-primary js-login\"></a>\n```\n\n### Utility\n\n#### 命名规则为：`u-<utilityName>`\nUtility这词我还不太会翻译，姑且叫它\"小功能吧\"，主要是一些常用的CSS特性，比如：浮动，垂直居中，文字截取什么的。方便复用代码。\n\n```html\n<div class=\"u-clearfix\">\n  <p class=\"u-textTruncate\">{$text}</p>\n  <img class=\"u-pullLeft\" src=\"{$src}\" alt=\"\">\n  <img class=\"u-pullLeft\" src=\"{$src}\" alt=\"\">\n  <img class=\"u-pullLeft\" src=\"{$src}\" alt=\"\">\n</div>\n```\n\n### Components\n\n#### 命名规则为：`<componentName>[--modifierName|-descendantName]`\n\nmodifier是那些基础组件的派生样式需要的类，使用时要和基础组件的类一起使用,两条横线加上`camelCase`形式的名字。例子如下：\n```css\n/* Core button */\n.btn { /* … */ }\n/* Default button style */\n.btn--default { /* … */ }\n```\n```html\n<button class=\"btn btn--primary\">…</button>\n```\n\ndescendantName是指组件跟节点下的子节点的名称，用一个横线加上`camelCase`形式的名字。例子如下：\n```html\n<article class=\"tweet\">\n  <header class=\"tweet-header\">\n    <img class=\"tweet-avatar\" src=\"{$src}\" alt=\"{$alt}\">\n    …\n  </header>\n  <div class=\"tweet-body\">\n    …\n  </div>\n</article>\n```\n#### 命名规则为：componentName.is-stateOfComponent\n使用`is-stateName`来描述组件的特定状态，使用`CamelCase`命名。**永远也别给这些类单独的样式，它们只用在和其他类串联的样式上**。\n```CSS\n.tweet { /* … */ }\n.tweet.is-expanded { /* … */ }\n```\n```html\n<article class=\"tweet is-expanded\">\n  …\n</article>\n```\n### Variables\n\n#### 命名规则：`<property>-<value>[--componentName]`\n\nMedium用的是less，使用其他的预编译系统也是一样，使用变量是一个可以提升工作效率的方式，\n\n#### Color\n推荐全部使用RGB或RGBA的形式。\n\n#### z-index\n提前定义好`z-index`变量\n形如`@zIndex-1 - @zIndex-9`分别代表100到900，不直接使用数字。\n\n#### Font\n提前定义一些字体粗细和大小，使用mixin：`.font-sansI7, .font-sansN7`等\n```\nN = normal\nI = italic\n4 = normal font-weight\n7 = bold font-weight\n```\n\n```css\n@fontSize-micro\n@fontSize-smallest\n@fontSize-smaller\n@fontSize-small\n@fontSize-base\n@fontSize-large\n@fontSize-larger\n@fontSize-largest\n@fontSize-jumbo\n```\n#### Line Height\n\n```css\n@lineHeight-tightest\n@lineHeight-tighter\n@lineHeight-tight\n@lineHeight-baseSans\n@lineHeight-base\n@lineHeight-loose\n@lineHeight-looser\n```\n\n`line-height`永远比它的容器的高度少1\n\n```CSS\n.btn {\n  height: 50px;\n  line-height: 49px;\n}\n```\n\n### Letter spacing\n\n提前预定义一些值：\n\n```css\n@letterSpacing-tightest\n@letterSpacing-tighter\n@letterSpacing-tight\n@letterSpacing-normal\n@letterSpacing-loose\n@letterSpacing-looser\n```\n\n### Polyfills\n\n#### 命名规则：`m-<propertyName>`\n\n使用mixin来生成不同浏览器的前缀，或者csshack之类的代码，（如果是用postcss，autoprefixer直接就搞定了✨）\n```css\n.m-borderRadius(@radius) {\n  -webkit-border-radius: @radius;\n     -moz-border-radius: @radius;\n          border-radius: @radius;\n}\n```\n","source":"_posts/medium-css-note.md","raw":"---\ntitle: Medium的CSS编写指南の学习笔记\ncategories: CSS\ndate: 2016-08-15 14:21:05\ntags:\n- Medium\n- CSS\n- 笔记\n- less\n- 编码\n- 指南\n---\n\n最近看了[《Medium的CSS写的真特么好》](https://medium.com/@fat/mediums-css-is-actually-pretty-fucking-good-b8e2a6c78b06#.71ttzygsz)这篇文章，我终于可以为我CSS一直以来杂乱无章的命名思路划上一个圆满的句号了。\n\n<!-- more -->\n\n### Javascript\n\n#### 命名规则为：`js-<targetname>`\n\n将那些被需要被js选择器捕获的class加上js前缀，**这些类绝对不要包含任何样式**\n\n```html\n<a href=\"/login\" class=\"btn btn-primary js-login\"></a>\n```\n\n### Utility\n\n#### 命名规则为：`u-<utilityName>`\nUtility这词我还不太会翻译，姑且叫它\"小功能吧\"，主要是一些常用的CSS特性，比如：浮动，垂直居中，文字截取什么的。方便复用代码。\n\n```html\n<div class=\"u-clearfix\">\n  <p class=\"u-textTruncate\">{$text}</p>\n  <img class=\"u-pullLeft\" src=\"{$src}\" alt=\"\">\n  <img class=\"u-pullLeft\" src=\"{$src}\" alt=\"\">\n  <img class=\"u-pullLeft\" src=\"{$src}\" alt=\"\">\n</div>\n```\n\n### Components\n\n#### 命名规则为：`<componentName>[--modifierName|-descendantName]`\n\nmodifier是那些基础组件的派生样式需要的类，使用时要和基础组件的类一起使用,两条横线加上`camelCase`形式的名字。例子如下：\n```css\n/* Core button */\n.btn { /* … */ }\n/* Default button style */\n.btn--default { /* … */ }\n```\n```html\n<button class=\"btn btn--primary\">…</button>\n```\n\ndescendantName是指组件跟节点下的子节点的名称，用一个横线加上`camelCase`形式的名字。例子如下：\n```html\n<article class=\"tweet\">\n  <header class=\"tweet-header\">\n    <img class=\"tweet-avatar\" src=\"{$src}\" alt=\"{$alt}\">\n    …\n  </header>\n  <div class=\"tweet-body\">\n    …\n  </div>\n</article>\n```\n#### 命名规则为：componentName.is-stateOfComponent\n使用`is-stateName`来描述组件的特定状态，使用`CamelCase`命名。**永远也别给这些类单独的样式，它们只用在和其他类串联的样式上**。\n```CSS\n.tweet { /* … */ }\n.tweet.is-expanded { /* … */ }\n```\n```html\n<article class=\"tweet is-expanded\">\n  …\n</article>\n```\n### Variables\n\n#### 命名规则：`<property>-<value>[--componentName]`\n\nMedium用的是less，使用其他的预编译系统也是一样，使用变量是一个可以提升工作效率的方式，\n\n#### Color\n推荐全部使用RGB或RGBA的形式。\n\n#### z-index\n提前定义好`z-index`变量\n形如`@zIndex-1 - @zIndex-9`分别代表100到900，不直接使用数字。\n\n#### Font\n提前定义一些字体粗细和大小，使用mixin：`.font-sansI7, .font-sansN7`等\n```\nN = normal\nI = italic\n4 = normal font-weight\n7 = bold font-weight\n```\n\n```css\n@fontSize-micro\n@fontSize-smallest\n@fontSize-smaller\n@fontSize-small\n@fontSize-base\n@fontSize-large\n@fontSize-larger\n@fontSize-largest\n@fontSize-jumbo\n```\n#### Line Height\n\n```css\n@lineHeight-tightest\n@lineHeight-tighter\n@lineHeight-tight\n@lineHeight-baseSans\n@lineHeight-base\n@lineHeight-loose\n@lineHeight-looser\n```\n\n`line-height`永远比它的容器的高度少1\n\n```CSS\n.btn {\n  height: 50px;\n  line-height: 49px;\n}\n```\n\n### Letter spacing\n\n提前预定义一些值：\n\n```css\n@letterSpacing-tightest\n@letterSpacing-tighter\n@letterSpacing-tight\n@letterSpacing-normal\n@letterSpacing-loose\n@letterSpacing-looser\n```\n\n### Polyfills\n\n#### 命名规则：`m-<propertyName>`\n\n使用mixin来生成不同浏览器的前缀，或者csshack之类的代码，（如果是用postcss，autoprefixer直接就搞定了✨）\n```css\n.m-borderRadius(@radius) {\n  -webkit-border-radius: @radius;\n     -moz-border-radius: @radius;\n          border-radius: @radius;\n}\n```\n","slug":"medium-css-note","published":1,"updated":"2016-08-15T08:31:17.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirvtn4om000aplnydu2r4409","content":"<p>最近看了<a href=\"https://medium.com/@fat/mediums-css-is-actually-pretty-fucking-good-b8e2a6c78b06#.71ttzygsz\" target=\"_blank\" rel=\"external\">《Medium的CSS写的真特么好》</a>这篇文章，我终于可以为我CSS一直以来杂乱无章的命名思路划上一个圆满的句号了。</p>\n<a id=\"more\"></a>\n<h3 id=\"Javascript\"><a href=\"#Javascript\" class=\"headerlink\" title=\"Javascript\"></a>Javascript</h3><h4 id=\"命名规则为：js-lt-targetname-gt\"><a href=\"#命名规则为：js-lt-targetname-gt\" class=\"headerlink\" title=\"命名规则为：js-&lt;targetname&gt;\"></a>命名规则为：<code>js-&lt;targetname&gt;</code></h4><p>将那些被需要被js选择器捕获的class加上js前缀，<strong>这些类绝对不要包含任何样式</strong></p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"/login\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"btn btn-primary js-login\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></div></pre></td></tr></table></figure>\n<h3 id=\"Utility\"><a href=\"#Utility\" class=\"headerlink\" title=\"Utility\"></a>Utility</h3><h4 id=\"命名规则为：u-lt-utilityName-gt\"><a href=\"#命名规则为：u-lt-utilityName-gt\" class=\"headerlink\" title=\"命名规则为：u-&lt;utilityName&gt;\"></a>命名规则为：<code>u-&lt;utilityName&gt;</code></h4><p>Utility这词我还不太会翻译，姑且叫它”小功能吧”，主要是一些常用的CSS特性，比如：浮动，垂直居中，文字截取什么的。方便复用代码。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"u-clearfix\"</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">p</span> <span class=\"attr\">class</span>=<span class=\"string\">\"u-textTruncate\"</span>&gt;</span>&#123;$text&#125;<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">class</span>=<span class=\"string\">\"u-pullLeft\"</span> <span class=\"attr\">src</span>=<span class=\"string\">\"&#123;$src&#125;\"</span> <span class=\"attr\">alt</span>=<span class=\"string\">\"\"</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">class</span>=<span class=\"string\">\"u-pullLeft\"</span> <span class=\"attr\">src</span>=<span class=\"string\">\"&#123;$src&#125;\"</span> <span class=\"attr\">alt</span>=<span class=\"string\">\"\"</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">class</span>=<span class=\"string\">\"u-pullLeft\"</span> <span class=\"attr\">src</span>=<span class=\"string\">\"&#123;$src&#125;\"</span> <span class=\"attr\">alt</span>=<span class=\"string\">\"\"</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div></pre></td></tr></table></figure>\n<h3 id=\"Components\"><a href=\"#Components\" class=\"headerlink\" title=\"Components\"></a>Components</h3><h4 id=\"命名规则为：-lt-componentName-gt-modifierName-descendantName\"><a href=\"#命名规则为：-lt-componentName-gt-modifierName-descendantName\" class=\"headerlink\" title=\"命名规则为：&lt;componentName&gt;[--modifierName|-descendantName]\"></a>命名规则为：<code>&lt;componentName&gt;[--modifierName|-descendantName]</code></h4><p>modifier是那些基础组件的派生样式需要的类，使用时要和基础组件的类一起使用,两条横线加上<code>camelCase</code>形式的名字。例子如下：<br><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">/* Core button */</span></div><div class=\"line\"><span class=\"selector-class\">.btn</span> &#123; <span class=\"comment\">/* … */</span> &#125;</div><div class=\"line\"><span class=\"comment\">/* Default button style */</span></div><div class=\"line\"><span class=\"selector-class\">.btn--default</span> &#123; <span class=\"comment\">/* … */</span> &#125;</div></pre></td></tr></table></figure></p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">class</span>=<span class=\"string\">\"btn btn--primary\"</span>&gt;</span>…<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></div></pre></td></tr></table></figure>\n<p>descendantName是指组件跟节点下的子节点的名称，用一个横线加上<code>camelCase</code>形式的名字。例子如下：<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">article</span> <span class=\"attr\">class</span>=<span class=\"string\">\"tweet\"</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">header</span> <span class=\"attr\">class</span>=<span class=\"string\">\"tweet-header\"</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">class</span>=<span class=\"string\">\"tweet-avatar\"</span> <span class=\"attr\">src</span>=<span class=\"string\">\"&#123;$src&#125;\"</span> <span class=\"attr\">alt</span>=<span class=\"string\">\"&#123;$alt&#125;\"</span>&gt;</span></div><div class=\"line\">    …</div><div class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">header</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"tweet-body\"</span>&gt;</span></div><div class=\"line\">    …</div><div class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">article</span>&gt;</span></div></pre></td></tr></table></figure></p>\n<h4 id=\"命名规则为：componentName-is-stateOfComponent\"><a href=\"#命名规则为：componentName-is-stateOfComponent\" class=\"headerlink\" title=\"命名规则为：componentName.is-stateOfComponent\"></a>命名规则为：componentName.is-stateOfComponent</h4><p>使用<code>is-stateName</code>来描述组件的特定状态，使用<code>CamelCase</code>命名。<strong>永远也别给这些类单独的样式，它们只用在和其他类串联的样式上</strong>。<br><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-class\">.tweet</span> &#123; <span class=\"comment\">/* … */</span> &#125;</div><div class=\"line\"><span class=\"selector-class\">.tweet</span><span class=\"selector-class\">.is-expanded</span> &#123; <span class=\"comment\">/* … */</span> &#125;</div></pre></td></tr></table></figure></p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">article</span> <span class=\"attr\">class</span>=<span class=\"string\">\"tweet is-expanded\"</span>&gt;</span></div><div class=\"line\">  …</div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">article</span>&gt;</span></div></pre></td></tr></table></figure>\n<h3 id=\"Variables\"><a href=\"#Variables\" class=\"headerlink\" title=\"Variables\"></a>Variables</h3><h4 id=\"命名规则：-lt-property-gt-lt-value-gt-componentName\"><a href=\"#命名规则：-lt-property-gt-lt-value-gt-componentName\" class=\"headerlink\" title=\"命名规则：&lt;property&gt;-&lt;value&gt;[--componentName]\"></a>命名规则：<code>&lt;property&gt;-&lt;value&gt;[--componentName]</code></h4><p>Medium用的是less，使用其他的预编译系统也是一样，使用变量是一个可以提升工作效率的方式，</p>\n<h4 id=\"Color\"><a href=\"#Color\" class=\"headerlink\" title=\"Color\"></a>Color</h4><p>推荐全部使用RGB或RGBA的形式。</p>\n<h4 id=\"z-index\"><a href=\"#z-index\" class=\"headerlink\" title=\"z-index\"></a>z-index</h4><p>提前定义好<code>z-index</code>变量<br>形如<code>@zIndex-1 - @zIndex-9</code>分别代表100到900，不直接使用数字。</p>\n<h4 id=\"Font\"><a href=\"#Font\" class=\"headerlink\" title=\"Font\"></a>Font</h4><p>提前定义一些字体粗细和大小，使用mixin：<code>.font-sansI7, .font-sansN7</code>等<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">N = normal</div><div class=\"line\">I = italic</div><div class=\"line\">4 = normal font-weight</div><div class=\"line\">7 = bold font-weight</div></pre></td></tr></table></figure></p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">@<span class=\"keyword\">fontSize</span>-<span class=\"keyword\">micro</span></div><div class=\"line\">@fontSize-smallest</div><div class=\"line\">@fontSize-smaller</div><div class=\"line\">@fontSize-small</div><div class=\"line\">@fontSize-base</div><div class=\"line\">@fontSize-large</div><div class=\"line\">@fontSize-larger</div><div class=\"line\">@fontSize-largest</div><div class=\"line\">@fontSize-jumbo</div></pre></td></tr></table></figure>\n<h4 id=\"Line-Height\"><a href=\"#Line-Height\" class=\"headerlink\" title=\"Line Height\"></a>Line Height</h4><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">@<span class=\"keyword\">lineHeight</span>-<span class=\"keyword\">tightest</span></div><div class=\"line\">@lineHeight-tighter</div><div class=\"line\">@lineHeight-tight</div><div class=\"line\">@lineHeight-baseSans</div><div class=\"line\">@lineHeight-base</div><div class=\"line\">@lineHeight-loose</div><div class=\"line\">@lineHeight-looser</div></pre></td></tr></table></figure>\n<p><code>line-height</code>永远比它的容器的高度少1</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-class\">.btn</span> &#123;</div><div class=\"line\">  <span class=\"attribute\">height</span>: <span class=\"number\">50px</span>;</div><div class=\"line\">  <span class=\"attribute\">line-height</span>: <span class=\"number\">49px</span>;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h3 id=\"Letter-spacing\"><a href=\"#Letter-spacing\" class=\"headerlink\" title=\"Letter spacing\"></a>Letter spacing</h3><p>提前预定义一些值：</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">@<span class=\"keyword\">letterSpacing</span>-<span class=\"keyword\">tightest</span></div><div class=\"line\">@letterSpacing-tighter</div><div class=\"line\">@letterSpacing-tight</div><div class=\"line\">@letterSpacing-normal</div><div class=\"line\">@letterSpacing-loose</div><div class=\"line\">@letterSpacing-looser</div></pre></td></tr></table></figure>\n<h3 id=\"Polyfills\"><a href=\"#Polyfills\" class=\"headerlink\" title=\"Polyfills\"></a>Polyfills</h3><h4 id=\"命名规则：m-lt-propertyName-gt\"><a href=\"#命名规则：m-lt-propertyName-gt\" class=\"headerlink\" title=\"命名规则：m-&lt;propertyName&gt;\"></a>命名规则：<code>m-&lt;propertyName&gt;</code></h4><p>使用mixin来生成不同浏览器的前缀，或者csshack之类的代码，（如果是用postcss，autoprefixer直接就搞定了✨）<br><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-class\">.m-borderRadius</span>(@<span class=\"keyword\">radius</span>) &#123;</div><div class=\"line\">  <span class=\"selector-tag\">-webkit-border-radius</span>: @<span class=\"keyword\">radius</span>;</div><div class=\"line\">     <span class=\"selector-tag\">-moz-border-radius</span>: @<span class=\"keyword\">radius</span>;</div><div class=\"line\">          <span class=\"selector-tag\">border-radius</span>: @<span class=\"keyword\">radius</span>;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n","excerpt":"<p>最近看了<a href=\"https://medium.com/@fat/mediums-css-is-actually-pretty-fucking-good-b8e2a6c78b06#.71ttzygsz\">《Medium的CSS写的真特么好》</a>这篇文章，我终于可以为我CSS一直以来杂乱无章的命名思路划上一个圆满的句号了。</p>","more":"<h3 id=\"Javascript\"><a href=\"#Javascript\" class=\"headerlink\" title=\"Javascript\"></a>Javascript</h3><h4 id=\"命名规则为：js-lt-targetname-gt\"><a href=\"#命名规则为：js-lt-targetname-gt\" class=\"headerlink\" title=\"命名规则为：js-&lt;targetname&gt;\"></a>命名规则为：<code>js-&lt;targetname&gt;</code></h4><p>将那些被需要被js选择器捕获的class加上js前缀，<strong>这些类绝对不要包含任何样式</strong></p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"/login\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"btn btn-primary js-login\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></div></pre></td></tr></table></figure>\n<h3 id=\"Utility\"><a href=\"#Utility\" class=\"headerlink\" title=\"Utility\"></a>Utility</h3><h4 id=\"命名规则为：u-lt-utilityName-gt\"><a href=\"#命名规则为：u-lt-utilityName-gt\" class=\"headerlink\" title=\"命名规则为：u-&lt;utilityName&gt;\"></a>命名规则为：<code>u-&lt;utilityName&gt;</code></h4><p>Utility这词我还不太会翻译，姑且叫它”小功能吧”，主要是一些常用的CSS特性，比如：浮动，垂直居中，文字截取什么的。方便复用代码。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"u-clearfix\"</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">p</span> <span class=\"attr\">class</span>=<span class=\"string\">\"u-textTruncate\"</span>&gt;</span>&#123;$text&#125;<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">class</span>=<span class=\"string\">\"u-pullLeft\"</span> <span class=\"attr\">src</span>=<span class=\"string\">\"&#123;$src&#125;\"</span> <span class=\"attr\">alt</span>=<span class=\"string\">\"\"</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">class</span>=<span class=\"string\">\"u-pullLeft\"</span> <span class=\"attr\">src</span>=<span class=\"string\">\"&#123;$src&#125;\"</span> <span class=\"attr\">alt</span>=<span class=\"string\">\"\"</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">class</span>=<span class=\"string\">\"u-pullLeft\"</span> <span class=\"attr\">src</span>=<span class=\"string\">\"&#123;$src&#125;\"</span> <span class=\"attr\">alt</span>=<span class=\"string\">\"\"</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div></pre></td></tr></table></figure>\n<h3 id=\"Components\"><a href=\"#Components\" class=\"headerlink\" title=\"Components\"></a>Components</h3><h4 id=\"命名规则为：-lt-componentName-gt-modifierName-descendantName\"><a href=\"#命名规则为：-lt-componentName-gt-modifierName-descendantName\" class=\"headerlink\" title=\"命名规则为：&lt;componentName&gt;[--modifierName|-descendantName]\"></a>命名规则为：<code>&lt;componentName&gt;[--modifierName|-descendantName]</code></h4><p>modifier是那些基础组件的派生样式需要的类，使用时要和基础组件的类一起使用,两条横线加上<code>camelCase</code>形式的名字。例子如下：<br><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">/* Core button */</span></div><div class=\"line\"><span class=\"selector-class\">.btn</span> &#123; <span class=\"comment\">/* … */</span> &#125;</div><div class=\"line\"><span class=\"comment\">/* Default button style */</span></div><div class=\"line\"><span class=\"selector-class\">.btn--default</span> &#123; <span class=\"comment\">/* … */</span> &#125;</div></pre></td></tr></table></figure></p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">class</span>=<span class=\"string\">\"btn btn--primary\"</span>&gt;</span>…<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></div></pre></td></tr></table></figure>\n<p>descendantName是指组件跟节点下的子节点的名称，用一个横线加上<code>camelCase</code>形式的名字。例子如下：<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">article</span> <span class=\"attr\">class</span>=<span class=\"string\">\"tweet\"</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">header</span> <span class=\"attr\">class</span>=<span class=\"string\">\"tweet-header\"</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">class</span>=<span class=\"string\">\"tweet-avatar\"</span> <span class=\"attr\">src</span>=<span class=\"string\">\"&#123;$src&#125;\"</span> <span class=\"attr\">alt</span>=<span class=\"string\">\"&#123;$alt&#125;\"</span>&gt;</span></div><div class=\"line\">    …</div><div class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">header</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"tweet-body\"</span>&gt;</span></div><div class=\"line\">    …</div><div class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">article</span>&gt;</span></div></pre></td></tr></table></figure></p>\n<h4 id=\"命名规则为：componentName-is-stateOfComponent\"><a href=\"#命名规则为：componentName-is-stateOfComponent\" class=\"headerlink\" title=\"命名规则为：componentName.is-stateOfComponent\"></a>命名规则为：componentName.is-stateOfComponent</h4><p>使用<code>is-stateName</code>来描述组件的特定状态，使用<code>CamelCase</code>命名。<strong>永远也别给这些类单独的样式，它们只用在和其他类串联的样式上</strong>。<br><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-class\">.tweet</span> &#123; <span class=\"comment\">/* … */</span> &#125;</div><div class=\"line\"><span class=\"selector-class\">.tweet</span><span class=\"selector-class\">.is-expanded</span> &#123; <span class=\"comment\">/* … */</span> &#125;</div></pre></td></tr></table></figure></p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">article</span> <span class=\"attr\">class</span>=<span class=\"string\">\"tweet is-expanded\"</span>&gt;</span></div><div class=\"line\">  …</div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">article</span>&gt;</span></div></pre></td></tr></table></figure>\n<h3 id=\"Variables\"><a href=\"#Variables\" class=\"headerlink\" title=\"Variables\"></a>Variables</h3><h4 id=\"命名规则：-lt-property-gt-lt-value-gt-componentName\"><a href=\"#命名规则：-lt-property-gt-lt-value-gt-componentName\" class=\"headerlink\" title=\"命名规则：&lt;property&gt;-&lt;value&gt;[--componentName]\"></a>命名规则：<code>&lt;property&gt;-&lt;value&gt;[--componentName]</code></h4><p>Medium用的是less，使用其他的预编译系统也是一样，使用变量是一个可以提升工作效率的方式，</p>\n<h4 id=\"Color\"><a href=\"#Color\" class=\"headerlink\" title=\"Color\"></a>Color</h4><p>推荐全部使用RGB或RGBA的形式。</p>\n<h4 id=\"z-index\"><a href=\"#z-index\" class=\"headerlink\" title=\"z-index\"></a>z-index</h4><p>提前定义好<code>z-index</code>变量<br>形如<code>@zIndex-1 - @zIndex-9</code>分别代表100到900，不直接使用数字。</p>\n<h4 id=\"Font\"><a href=\"#Font\" class=\"headerlink\" title=\"Font\"></a>Font</h4><p>提前定义一些字体粗细和大小，使用mixin：<code>.font-sansI7, .font-sansN7</code>等<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">N = normal</div><div class=\"line\">I = italic</div><div class=\"line\">4 = normal font-weight</div><div class=\"line\">7 = bold font-weight</div></pre></td></tr></table></figure></p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">@<span class=\"keyword\">fontSize</span>-<span class=\"keyword\">micro</span></div><div class=\"line\">@fontSize-smallest</div><div class=\"line\">@fontSize-smaller</div><div class=\"line\">@fontSize-small</div><div class=\"line\">@fontSize-base</div><div class=\"line\">@fontSize-large</div><div class=\"line\">@fontSize-larger</div><div class=\"line\">@fontSize-largest</div><div class=\"line\">@fontSize-jumbo</div></pre></td></tr></table></figure>\n<h4 id=\"Line-Height\"><a href=\"#Line-Height\" class=\"headerlink\" title=\"Line Height\"></a>Line Height</h4><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">@<span class=\"keyword\">lineHeight</span>-<span class=\"keyword\">tightest</span></div><div class=\"line\">@lineHeight-tighter</div><div class=\"line\">@lineHeight-tight</div><div class=\"line\">@lineHeight-baseSans</div><div class=\"line\">@lineHeight-base</div><div class=\"line\">@lineHeight-loose</div><div class=\"line\">@lineHeight-looser</div></pre></td></tr></table></figure>\n<p><code>line-height</code>永远比它的容器的高度少1</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-class\">.btn</span> &#123;</div><div class=\"line\">  <span class=\"attribute\">height</span>: <span class=\"number\">50px</span>;</div><div class=\"line\">  <span class=\"attribute\">line-height</span>: <span class=\"number\">49px</span>;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h3 id=\"Letter-spacing\"><a href=\"#Letter-spacing\" class=\"headerlink\" title=\"Letter spacing\"></a>Letter spacing</h3><p>提前预定义一些值：</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">@<span class=\"keyword\">letterSpacing</span>-<span class=\"keyword\">tightest</span></div><div class=\"line\">@letterSpacing-tighter</div><div class=\"line\">@letterSpacing-tight</div><div class=\"line\">@letterSpacing-normal</div><div class=\"line\">@letterSpacing-loose</div><div class=\"line\">@letterSpacing-looser</div></pre></td></tr></table></figure>\n<h3 id=\"Polyfills\"><a href=\"#Polyfills\" class=\"headerlink\" title=\"Polyfills\"></a>Polyfills</h3><h4 id=\"命名规则：m-lt-propertyName-gt\"><a href=\"#命名规则：m-lt-propertyName-gt\" class=\"headerlink\" title=\"命名规则：m-&lt;propertyName&gt;\"></a>命名规则：<code>m-&lt;propertyName&gt;</code></h4><p>使用mixin来生成不同浏览器的前缀，或者csshack之类的代码，（如果是用postcss，autoprefixer直接就搞定了✨）<br><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-class\">.m-borderRadius</span>(@<span class=\"keyword\">radius</span>) &#123;</div><div class=\"line\">  <span class=\"selector-tag\">-webkit-border-radius</span>: @<span class=\"keyword\">radius</span>;</div><div class=\"line\">     <span class=\"selector-tag\">-moz-border-radius</span>: @<span class=\"keyword\">radius</span>;</div><div class=\"line\">          <span class=\"selector-tag\">border-radius</span>: @<span class=\"keyword\">radius</span>;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>"},{"title":"在javascript中，callback和this的那点事儿","date":"2016-07-08T08:47:36.000Z","_content":"\njs中的this是一个很灵活的东西，可能给你带来便利，也可能让你焦头烂额。尤其在callback中可能会经常出错。下面我结合例子说明一下。\n\n### 反面典型\n```js\nfunction MyConstructor(data,callback){\n  this.data = data;\n  callback.on('data',function(){\n    alert(this.data);\n  });\n}\n\n//callback\nvar mycallback = {\n  on: function(event, callback){\n    setTimeout(callback,1000);\n  }\n};\n\n//调用\nvar obj = new MyConstructor('hao', mycallback);\n```\n<!-- more -->\n上面代码的返回结果是：`undefined`\n\nthis是每个函数中都存在的一个特殊的变量，它的值是取决于函数是如何执行的，**而不是何时何地如何定义的**。它不像其它变量一样，被语义上的作用域所影响。\n\n再给几个例子：\n```js\nfunction foo(){\n  console.log(this);\n}\n\nfoo();//此处的this指向window\n\nvar obj = {bar: foo};\nobj.bar();//此处this指向的是obj\n\nnew foo();//这个this会指向继承自'foo.prototype'的实例对象\n```\n### 如何找到正确的`this`\n\n#### 1、为了让上边的例子变正确，我们可以用另一个变量存储this\n```js\n\nfunction MyConstructor(data,callback){\n  this.data = data;\n  var self = this;\n  callback.on('data',function(){\n    alert(self.data);\n  });\n}\n\n```\n#### 2、使用bind()\n\n```js\n\nfunction MyConstructor(data, callback) {\n    this.data = data;\n    var boundFunction = (function() { // 最外层括号非必须\n        alert(this.data);             // 只是增强阅读性\n    }).bind(this); // <- 使用bind()\n    callback.on('data', boundFunction);\n}\n\n```\n这里，我们将回调函数中的this和MyConstructor的this绑定了。\n\n#### 3、es6的箭头函数\n\nes6中的箭头函数中的this对象，它就是定义是所在的对象，而不是使用时所在的对象。\n```js\nfunction MyConstructor(data, callback) {\n    this.data = data;\n    callback.on('data', () => alert(this.data));\n}\n```\n","source":"_posts/js-bind-callback.md","raw":"---\ntitle: 在javascript中，callback和this的那点事儿\ndate: 2016-07-08 16:47:36\ncategories: Javascript\ntags:\n- javascript\n- callback\n- bind\n- 回调\n---\n\njs中的this是一个很灵活的东西，可能给你带来便利，也可能让你焦头烂额。尤其在callback中可能会经常出错。下面我结合例子说明一下。\n\n### 反面典型\n```js\nfunction MyConstructor(data,callback){\n  this.data = data;\n  callback.on('data',function(){\n    alert(this.data);\n  });\n}\n\n//callback\nvar mycallback = {\n  on: function(event, callback){\n    setTimeout(callback,1000);\n  }\n};\n\n//调用\nvar obj = new MyConstructor('hao', mycallback);\n```\n<!-- more -->\n上面代码的返回结果是：`undefined`\n\nthis是每个函数中都存在的一个特殊的变量，它的值是取决于函数是如何执行的，**而不是何时何地如何定义的**。它不像其它变量一样，被语义上的作用域所影响。\n\n再给几个例子：\n```js\nfunction foo(){\n  console.log(this);\n}\n\nfoo();//此处的this指向window\n\nvar obj = {bar: foo};\nobj.bar();//此处this指向的是obj\n\nnew foo();//这个this会指向继承自'foo.prototype'的实例对象\n```\n### 如何找到正确的`this`\n\n#### 1、为了让上边的例子变正确，我们可以用另一个变量存储this\n```js\n\nfunction MyConstructor(data,callback){\n  this.data = data;\n  var self = this;\n  callback.on('data',function(){\n    alert(self.data);\n  });\n}\n\n```\n#### 2、使用bind()\n\n```js\n\nfunction MyConstructor(data, callback) {\n    this.data = data;\n    var boundFunction = (function() { // 最外层括号非必须\n        alert(this.data);             // 只是增强阅读性\n    }).bind(this); // <- 使用bind()\n    callback.on('data', boundFunction);\n}\n\n```\n这里，我们将回调函数中的this和MyConstructor的this绑定了。\n\n#### 3、es6的箭头函数\n\nes6中的箭头函数中的this对象，它就是定义是所在的对象，而不是使用时所在的对象。\n```js\nfunction MyConstructor(data, callback) {\n    this.data = data;\n    callback.on('data', () => alert(this.data));\n}\n```\n","slug":"js-bind-callback","published":1,"updated":"2016-07-10T08:54:04.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirvtn4oo000cplny8ijyp88d","content":"<p>js中的this是一个很灵活的东西，可能给你带来便利，也可能让你焦头烂额。尤其在callback中可能会经常出错。下面我结合例子说明一下。</p>\n<h3 id=\"反面典型\"><a href=\"#反面典型\" class=\"headerlink\" title=\"反面典型\"></a>反面典型</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">MyConstructor</span>(<span class=\"params\">data,callback</span>)</span>&#123;</div><div class=\"line\">  <span class=\"keyword\">this</span>.data = data;</div><div class=\"line\">  callback.on(<span class=\"string\">'data'</span>,<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">    alert(<span class=\"keyword\">this</span>.data);</div><div class=\"line\">  &#125;);</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//callback</span></div><div class=\"line\"><span class=\"keyword\">var</span> mycallback = &#123;</div><div class=\"line\">  on: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">event, callback</span>)</span>&#123;</div><div class=\"line\">    setTimeout(callback,<span class=\"number\">1000</span>);</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//调用</span></div><div class=\"line\"><span class=\"keyword\">var</span> obj = <span class=\"keyword\">new</span> MyConstructor(<span class=\"string\">'hao'</span>, mycallback);</div></pre></td></tr></table></figure>\n<a id=\"more\"></a>\n<p>上面代码的返回结果是：<code>undefined</code></p>\n<p>this是每个函数中都存在的一个特殊的变量，它的值是取决于函数是如何执行的，<strong>而不是何时何地如何定义的</strong>。它不像其它变量一样，被语义上的作用域所影响。</p>\n<p>再给几个例子：<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">foo</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"keyword\">this</span>);</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">foo();<span class=\"comment\">//此处的this指向window</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">var</span> obj = &#123;bar: foo&#125;;</div><div class=\"line\">obj.bar();<span class=\"comment\">//此处this指向的是obj</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">new</span> foo();<span class=\"comment\">//这个this会指向继承自'foo.prototype'的实例对象</span></div></pre></td></tr></table></figure></p>\n<h3 id=\"如何找到正确的this\"><a href=\"#如何找到正确的this\" class=\"headerlink\" title=\"如何找到正确的this\"></a>如何找到正确的<code>this</code></h3><h4 id=\"1、为了让上边的例子变正确，我们可以用另一个变量存储this\"><a href=\"#1、为了让上边的例子变正确，我们可以用另一个变量存储this\" class=\"headerlink\" title=\"1、为了让上边的例子变正确，我们可以用另一个变量存储this\"></a>1、为了让上边的例子变正确，我们可以用另一个变量存储this</h4><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">MyConstructor</span>(<span class=\"params\">data,callback</span>)</span>&#123;</div><div class=\"line\">  <span class=\"keyword\">this</span>.data = data;</div><div class=\"line\">  <span class=\"keyword\">var</span> self = <span class=\"keyword\">this</span>;</div><div class=\"line\">  callback.on(<span class=\"string\">'data'</span>,<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">    alert(self.data);</div><div class=\"line\">  &#125;);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h4 id=\"2、使用bind\"><a href=\"#2、使用bind\" class=\"headerlink\" title=\"2、使用bind()\"></a>2、使用bind()</h4><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">MyConstructor</span>(<span class=\"params\">data, callback</span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">this</span>.data = data;</div><div class=\"line\">    <span class=\"keyword\">var</span> boundFunction = (<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123; <span class=\"comment\">// 最外层括号非必须</span></div><div class=\"line\">        alert(<span class=\"keyword\">this</span>.data);             <span class=\"comment\">// 只是增强阅读性</span></div><div class=\"line\">    &#125;).bind(<span class=\"keyword\">this</span>); <span class=\"comment\">// &lt;- 使用bind()</span></div><div class=\"line\">    callback.on(<span class=\"string\">'data'</span>, boundFunction);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>这里，我们将回调函数中的this和MyConstructor的this绑定了。</p>\n<h4 id=\"3、es6的箭头函数\"><a href=\"#3、es6的箭头函数\" class=\"headerlink\" title=\"3、es6的箭头函数\"></a>3、es6的箭头函数</h4><p>es6中的箭头函数中的this对象，它就是定义是所在的对象，而不是使用时所在的对象。<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">MyConstructor</span>(<span class=\"params\">data, callback</span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">this</span>.data = data;</div><div class=\"line\">    callback.on(<span class=\"string\">'data'</span>, () =&gt; alert(<span class=\"keyword\">this</span>.data));</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n","excerpt":"<p>js中的this是一个很灵活的东西，可能给你带来便利，也可能让你焦头烂额。尤其在callback中可能会经常出错。下面我结合例子说明一下。</p>\n<h3 id=\"反面典型\"><a href=\"#反面典型\" class=\"headerlink\" title=\"反面典型\"></a>反面典型</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">MyConstructor</span>(<span class=\"params\">data,callback</span>)</span>&#123;</div><div class=\"line\">  <span class=\"keyword\">this</span>.data = data;</div><div class=\"line\">  callback.on(<span class=\"string\">'data'</span>,<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">    alert(<span class=\"keyword\">this</span>.data);</div><div class=\"line\">  &#125;);</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//callback</span></div><div class=\"line\"><span class=\"keyword\">var</span> mycallback = &#123;</div><div class=\"line\">  on: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">event, callback</span>)</span>&#123;</div><div class=\"line\">    setTimeout(callback,<span class=\"number\">1000</span>);</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//调用</span></div><div class=\"line\"><span class=\"keyword\">var</span> obj = <span class=\"keyword\">new</span> MyConstructor(<span class=\"string\">'hao'</span>, mycallback);</div></pre></td></tr></table></figure>","more":"<p>上面代码的返回结果是：<code>undefined</code></p>\n<p>this是每个函数中都存在的一个特殊的变量，它的值是取决于函数是如何执行的，<strong>而不是何时何地如何定义的</strong>。它不像其它变量一样，被语义上的作用域所影响。</p>\n<p>再给几个例子：<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">foo</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"keyword\">this</span>);</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">foo();<span class=\"comment\">//此处的this指向window</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">var</span> obj = &#123;bar: foo&#125;;</div><div class=\"line\">obj.bar();<span class=\"comment\">//此处this指向的是obj</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">new</span> foo();<span class=\"comment\">//这个this会指向继承自'foo.prototype'的实例对象</span></div></pre></td></tr></table></figure></p>\n<h3 id=\"如何找到正确的this\"><a href=\"#如何找到正确的this\" class=\"headerlink\" title=\"如何找到正确的this\"></a>如何找到正确的<code>this</code></h3><h4 id=\"1、为了让上边的例子变正确，我们可以用另一个变量存储this\"><a href=\"#1、为了让上边的例子变正确，我们可以用另一个变量存储this\" class=\"headerlink\" title=\"1、为了让上边的例子变正确，我们可以用另一个变量存储this\"></a>1、为了让上边的例子变正确，我们可以用另一个变量存储this</h4><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">MyConstructor</span>(<span class=\"params\">data,callback</span>)</span>&#123;</div><div class=\"line\">  <span class=\"keyword\">this</span>.data = data;</div><div class=\"line\">  <span class=\"keyword\">var</span> self = <span class=\"keyword\">this</span>;</div><div class=\"line\">  callback.on(<span class=\"string\">'data'</span>,<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">    alert(self.data);</div><div class=\"line\">  &#125;);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h4 id=\"2、使用bind\"><a href=\"#2、使用bind\" class=\"headerlink\" title=\"2、使用bind()\"></a>2、使用bind()</h4><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">MyConstructor</span>(<span class=\"params\">data, callback</span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">this</span>.data = data;</div><div class=\"line\">    <span class=\"keyword\">var</span> boundFunction = (<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123; <span class=\"comment\">// 最外层括号非必须</span></div><div class=\"line\">        alert(<span class=\"keyword\">this</span>.data);             <span class=\"comment\">// 只是增强阅读性</span></div><div class=\"line\">    &#125;).bind(<span class=\"keyword\">this</span>); <span class=\"comment\">// &lt;- 使用bind()</span></div><div class=\"line\">    callback.on(<span class=\"string\">'data'</span>, boundFunction);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>这里，我们将回调函数中的this和MyConstructor的this绑定了。</p>\n<h4 id=\"3、es6的箭头函数\"><a href=\"#3、es6的箭头函数\" class=\"headerlink\" title=\"3、es6的箭头函数\"></a>3、es6的箭头函数</h4><p>es6中的箭头函数中的this对象，它就是定义是所在的对象，而不是使用时所在的对象。<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">MyConstructor</span>(<span class=\"params\">data, callback</span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">this</span>.data = data;</div><div class=\"line\">    callback.on(<span class=\"string\">'data'</span>, () =&gt; alert(<span class=\"keyword\">this</span>.data));</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>"},{"title":"在响应式布局下，保证不同元素的相同高度","date":"2016-07-11T07:50:55.000Z","_content":"\n在响应式布局中限制不同元素的高度依靠单纯的css应该是无能为力了，翻了翻[CSS-TRICKS](https://css-tricks.com/equal-height-blocks-in-rows/)找到了解决方案。\n\n依赖jQuery的[matchHeight.js](http://brm.io/jquery-match-height/)可以将全部所选元素等高。\n\n再有就是将处在同一行的元素等高。原理就是在在同一行元素中选择最高的，然后将所有元素的高度设置成该数值，代码如下：\n\n<!-- more -->\n\n```js\n\nequalheight = function(container){\n\nvar currentTallest = 0,\n     currentRowStart = 0,\n     rowDivs = new Array(),\n     $el,\n     topPosition = 0;\n $(container).each(function() {\n\n   $el = $(this);\n   $($el).height('auto')\n   topPostion = $el.position().top;\n\n   if (currentRowStart != topPostion) {\n     for (currentDiv = 0 ; currentDiv < rowDivs.length ; currentDiv++) {\n       rowDivs[currentDiv].height(currentTallest);\n     }\n     rowDivs.length = 0; // empty the array\n     currentRowStart = topPostion;\n     currentTallest = $el.height();\n     rowDivs.push($el);\n   } else {\n     rowDivs.push($el);\n     currentTallest = (currentTallest < $el.height()) ? ($el.height()) : (currentTallest);\n  }\n   for (currentDiv = 0 ; currentDiv < rowDivs.length ; currentDiv++) {\n     rowDivs[currentDiv].height(currentTallest);\n   }\n });\n}\n\n//例子，比如想具有相同的class的元素有相等的高度\n$(window).load(function() {\n  equalheight('.eqheight');\n});\n\n\n$(window).resize(function(){\n  equalheight('.eqheight');\n});\n```\n\n[codepen上的例子](https://codepen.io/micahgodbolt/pen/FgqLc)。\n","source":"_posts/responsive-equal-height.md","raw":"---\ntitle: 在响应式布局下，保证不同元素的相同高度\ndate: 2016-07-11 15:50:55\ncategories: CSS\ntags:\n- 响应式\n- 高度\n- 相等\n---\n\n在响应式布局中限制不同元素的高度依靠单纯的css应该是无能为力了，翻了翻[CSS-TRICKS](https://css-tricks.com/equal-height-blocks-in-rows/)找到了解决方案。\n\n依赖jQuery的[matchHeight.js](http://brm.io/jquery-match-height/)可以将全部所选元素等高。\n\n再有就是将处在同一行的元素等高。原理就是在在同一行元素中选择最高的，然后将所有元素的高度设置成该数值，代码如下：\n\n<!-- more -->\n\n```js\n\nequalheight = function(container){\n\nvar currentTallest = 0,\n     currentRowStart = 0,\n     rowDivs = new Array(),\n     $el,\n     topPosition = 0;\n $(container).each(function() {\n\n   $el = $(this);\n   $($el).height('auto')\n   topPostion = $el.position().top;\n\n   if (currentRowStart != topPostion) {\n     for (currentDiv = 0 ; currentDiv < rowDivs.length ; currentDiv++) {\n       rowDivs[currentDiv].height(currentTallest);\n     }\n     rowDivs.length = 0; // empty the array\n     currentRowStart = topPostion;\n     currentTallest = $el.height();\n     rowDivs.push($el);\n   } else {\n     rowDivs.push($el);\n     currentTallest = (currentTallest < $el.height()) ? ($el.height()) : (currentTallest);\n  }\n   for (currentDiv = 0 ; currentDiv < rowDivs.length ; currentDiv++) {\n     rowDivs[currentDiv].height(currentTallest);\n   }\n });\n}\n\n//例子，比如想具有相同的class的元素有相等的高度\n$(window).load(function() {\n  equalheight('.eqheight');\n});\n\n\n$(window).resize(function(){\n  equalheight('.eqheight');\n});\n```\n\n[codepen上的例子](https://codepen.io/micahgodbolt/pen/FgqLc)。\n","slug":"responsive-equal-height","published":1,"updated":"2016-07-11T09:03:06.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirvtn4os000gplnyyfx1zkq0","content":"<p>在响应式布局中限制不同元素的高度依靠单纯的css应该是无能为力了，翻了翻<a href=\"https://css-tricks.com/equal-height-blocks-in-rows/\" target=\"_blank\" rel=\"external\">CSS-TRICKS</a>找到了解决方案。</p>\n<p>依赖jQuery的<a href=\"http://brm.io/jquery-match-height/\" target=\"_blank\" rel=\"external\">matchHeight.js</a>可以将全部所选元素等高。</p>\n<p>再有就是将处在同一行的元素等高。原理就是在在同一行元素中选择最高的，然后将所有元素的高度设置成该数值，代码如下：</p>\n<a id=\"more\"></a>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">equalheight = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">container</span>)</span>&#123;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">var</span> currentTallest = <span class=\"number\">0</span>,</div><div class=\"line\">     currentRowStart = <span class=\"number\">0</span>,</div><div class=\"line\">     rowDivs = <span class=\"keyword\">new</span> <span class=\"built_in\">Array</span>(),</div><div class=\"line\">     $el,</div><div class=\"line\">     topPosition = <span class=\"number\">0</span>;</div><div class=\"line\"> $(container).each(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\"></div><div class=\"line\">   $el = $(<span class=\"keyword\">this</span>);</div><div class=\"line\">   $($el).height(<span class=\"string\">'auto'</span>)</div><div class=\"line\">   topPostion = $el.position().top;</div><div class=\"line\"></div><div class=\"line\">   <span class=\"keyword\">if</span> (currentRowStart != topPostion) &#123;</div><div class=\"line\">     <span class=\"keyword\">for</span> (currentDiv = <span class=\"number\">0</span> ; currentDiv &lt; rowDivs.length ; currentDiv++) &#123;</div><div class=\"line\">       rowDivs[currentDiv].height(currentTallest);</div><div class=\"line\">     &#125;</div><div class=\"line\">     rowDivs.length = <span class=\"number\">0</span>; <span class=\"comment\">// empty the array</span></div><div class=\"line\">     currentRowStart = topPostion;</div><div class=\"line\">     currentTallest = $el.height();</div><div class=\"line\">     rowDivs.push($el);</div><div class=\"line\">   &#125; <span class=\"keyword\">else</span> &#123;</div><div class=\"line\">     rowDivs.push($el);</div><div class=\"line\">     currentTallest = (currentTallest &lt; $el.height()) ? ($el.height()) : (currentTallest);</div><div class=\"line\">  &#125;</div><div class=\"line\">   <span class=\"keyword\">for</span> (currentDiv = <span class=\"number\">0</span> ; currentDiv &lt; rowDivs.length ; currentDiv++) &#123;</div><div class=\"line\">     rowDivs[currentDiv].height(currentTallest);</div><div class=\"line\">   &#125;</div><div class=\"line\"> &#125;);</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//例子，比如想具有相同的class的元素有相等的高度</span></div><div class=\"line\">$(<span class=\"built_in\">window</span>).load(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">  equalheight(<span class=\"string\">'.eqheight'</span>);</div><div class=\"line\">&#125;);</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">$(<span class=\"built_in\">window</span>).resize(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">  equalheight(<span class=\"string\">'.eqheight'</span>);</div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure>\n<p><a href=\"https://codepen.io/micahgodbolt/pen/FgqLc\" target=\"_blank\" rel=\"external\">codepen上的例子</a>。</p>\n","excerpt":"<p>在响应式布局中限制不同元素的高度依靠单纯的css应该是无能为力了，翻了翻<a href=\"https://css-tricks.com/equal-height-blocks-in-rows/\">CSS-TRICKS</a>找到了解决方案。</p>\n<p>依赖jQuery的<a href=\"http://brm.io/jquery-match-height/\">matchHeight.js</a>可以将全部所选元素等高。</p>\n<p>再有就是将处在同一行的元素等高。原理就是在在同一行元素中选择最高的，然后将所有元素的高度设置成该数值，代码如下：</p>","more":"<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">equalheight = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">container</span>)</span>&#123;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">var</span> currentTallest = <span class=\"number\">0</span>,</div><div class=\"line\">     currentRowStart = <span class=\"number\">0</span>,</div><div class=\"line\">     rowDivs = <span class=\"keyword\">new</span> <span class=\"built_in\">Array</span>(),</div><div class=\"line\">     $el,</div><div class=\"line\">     topPosition = <span class=\"number\">0</span>;</div><div class=\"line\"> $(container).each(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\"></div><div class=\"line\">   $el = $(<span class=\"keyword\">this</span>);</div><div class=\"line\">   $($el).height(<span class=\"string\">'auto'</span>)</div><div class=\"line\">   topPostion = $el.position().top;</div><div class=\"line\"></div><div class=\"line\">   <span class=\"keyword\">if</span> (currentRowStart != topPostion) &#123;</div><div class=\"line\">     <span class=\"keyword\">for</span> (currentDiv = <span class=\"number\">0</span> ; currentDiv &lt; rowDivs.length ; currentDiv++) &#123;</div><div class=\"line\">       rowDivs[currentDiv].height(currentTallest);</div><div class=\"line\">     &#125;</div><div class=\"line\">     rowDivs.length = <span class=\"number\">0</span>; <span class=\"comment\">// empty the array</span></div><div class=\"line\">     currentRowStart = topPostion;</div><div class=\"line\">     currentTallest = $el.height();</div><div class=\"line\">     rowDivs.push($el);</div><div class=\"line\">   &#125; <span class=\"keyword\">else</span> &#123;</div><div class=\"line\">     rowDivs.push($el);</div><div class=\"line\">     currentTallest = (currentTallest &lt; $el.height()) ? ($el.height()) : (currentTallest);</div><div class=\"line\">  &#125;</div><div class=\"line\">   <span class=\"keyword\">for</span> (currentDiv = <span class=\"number\">0</span> ; currentDiv &lt; rowDivs.length ; currentDiv++) &#123;</div><div class=\"line\">     rowDivs[currentDiv].height(currentTallest);</div><div class=\"line\">   &#125;</div><div class=\"line\"> &#125;);</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//例子，比如想具有相同的class的元素有相等的高度</span></div><div class=\"line\">$(<span class=\"built_in\">window</span>).load(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">  equalheight(<span class=\"string\">'.eqheight'</span>);</div><div class=\"line\">&#125;);</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">$(<span class=\"built_in\">window</span>).resize(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">  equalheight(<span class=\"string\">'.eqheight'</span>);</div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure>\n<p><a href=\"https://codepen.io/micahgodbolt/pen/FgqLc\">codepen上的例子</a>。</p>"},{"title":"在Hexo下使用Algolia搜索","date":"2016-06-06T15:23:19.000Z","_content":"Swiftype悄无声息的就取消了免费模式，得赶紧找个下家了，现在来推一个新的第三方搜索----algolia。\n<!-- more -->\n\n## 官网注册\n1、 [官网地址](http://www.algolia.com)注册帐号。\n2、 新建一个INDEX如图。\n{% asset_img algolia-index.png %}\n3、 来到[API-KEYS](https://www.algolia.com/api-keys)页面，上面有后面需要的信息（记得还有上面的INDEX名）。\n{% asset_img algolia-api-keys.png %}\n\n## 第二步：上传数据到Algolia\n1、 在Hexo主目录下执行\n```\nnpm install hexo-algolia --save\n```\n2、 在根目录的_config.yml中加入如下配置，使用前边注册成果的数据\n```\nalgolia:\n  applicationID: 'your applicationID'\n  apiKey: 'your apiKey'\n  adminApiKey: 'your adminApiKey'\n  indexName: 'your indexName'\n  chunkSize: 5000\n```\n3、 接着执行，确保提交成功提示\n```\nhexo algolia\n```\n## 第三步：修改Hexo主题集成Algolia\n1、 确保在head.swig文件中加入如下配置，注意改成自己的\n```\n<script type=\"text/javascript\" id=\"hexo.configuration\">\n  var CONFIG = {\n    root: '/',\n    algolia: {\n          applicationID: 'your applicationID',\n          apiKey: 'your apiKey',\n          indexName: ''your indexName',\n          hits: {\"per_page\":10},\n          labels: {\"input_placeholder\":\"搜索...\",\"hits_empty\":\"未发现与 「${query}」相关的内容\",\"hits_stats\":\"${hits} 条相关条目，使用了 ${time} 毫秒\"}\n        }\n  };\n</script>\n```\n2、 在主题配置文件_config.yml中加入,作为开启关闭的开关\n```\n# Algolia\nalgolia: true\n```\n> 以Next为例，修改主题目录下`layout/search.swig`为：\n```\n{% if theme.swiftype_key %}\n  {% include 'search/swiftype.swig' %}\n{% elseif theme.tinysou_Key %}\n  {% include 'search/tinysou.swig' %}\n{% elseif config.search.path %}\n  {% include 'search/localsearch.swig' %}\n{% elseif theme.algolia %}\n  {% include 'search/algolia.swig' %}\n{% endif %}\n\n```\n3、 在要搜索的页面加入下面html,Next主题中在`layout/_partials/search/`中添加algolia.swig文件，写入如下内容：\n```html\n<div class=\"site-search\">\n  <div class=\"algolia-popup popup\">\n    <div class=\"algolia-search\">\n      <div class=\"algolia-search-input-icon\">\n        <i class=\"fa fa-search\"></i>\n      </div>\n      <div class=\"algolia-search-input\" id=\"algolia-search-input\"></div>\n    </div>\n\n    <div class=\"algolia-results\">\n      <div id=\"algolia-stats\"></div>\n      <div id=\"algolia-hits\"></div>\n      <div id=\"algolia-pagination\" class=\"algolia-pagination\"></div>\n    </div>\n\n    <span class=\"popup-btn-close\">\n      <i class=\"fa fa-times-circle\"></i>\n    </span>\n  </div>\n</div>\n```\n4、 触发搜索的HTML节点中加入class名为`popup-trigger`的标签，如下：\n```\n<a href=\"#\" class=\"popup-trigger\">\n```\n> Next为例：在`layout/_partials/header.swig`修改如下（注释位置）：\n```html\n<nav class=\"site-nav\">\n  {% set hasSearch = theme.swiftype_key || theme.tinysou_Key || config.search || theme.algolia %}\n  <!-- 添加algolia判断条件 -->\n  {% if theme.menu %}\n    <ul id=\"menu\" class=\"menu\">\n      {% for name, path in theme.menu %}\n        {% set itemName = name.toLowerCase() %}\n        <li class=\"menu-item menu-item-{{ itemName }}\">\n          <a href=\"{{ url_for(path) }}\" rel=\"section\">\n            {% if theme.menu_icons.enable %}\n              <i class=\"menu-item-icon fa fa-fw fa-{{theme.menu_icons[itemName] | default('question-circle') | lower }}\"></i> <br />\n            {% endif %}\n            {{ __('menu.' + itemName) }}\n          </a>\n        </li>\n      {% endfor %}\n\n      {% if hasSearch %}\n        <li class=\"menu-item menu-item-search\">\n          {% if theme.swiftype_key %}\n            <a href=\"#\" class=\"st-search-show-outputs\">\n          {% elseif config.search %}\n            <a href=\"#\" class=\"popup-trigger\">\n            <!-- 判断algolia -->\n          {% elseif theme.algolia %}\n            <a href=\"#\" class=\"popup-trigger\">\n          {% endif %}\n            {% if theme.menu_icons.enable %}\n              <i class=\"menu-item-icon fa fa-search fa-fw\"></i> <br />\n            {% endif %}\n            {{ __('menu.search') }}\n          </a>\n        </li>\n      {% endif %}\n    </ul>\n  {% endif %}\n\n  {% if hasSearch %}\n    <div class=\"site-search\">\n      {% include 'search.swig' %}\n    </div>\n  {% endif %}\n</nav>\n```\n5、 需要确保页面包含如下JS代码（可以单独建立一个.swig文件，然后在整体layout的swig文件中加入）\n```js\n<script src=\"http://cdn.bootcss.com/instantsearch.js/1.5.1/instantsearch.js\"></script>\n\n<script type=\"text/javascript\">\n$(document).ready(function () {\n  var algoliaSettings = CONFIG.algolia;\n  var isAlgoliaSettingsValid = algoliaSettings.applicationID &&\n    algoliaSettings.apiKey &&\n    algoliaSettings.indexName;\n\n  if (!isAlgoliaSettingsValid) {\n    window.console.error('Algolia Settings are invalid.');\n    return;\n  }\n\n  var search = instantsearch({\n    appId: algoliaSettings.applicationID,\n    apiKey: algoliaSettings.apiKey,\n    indexName: algoliaSettings.indexName,\n    searchFunction: function (helper) {\n      var searchInput = $('#algolia-search-input').find('input');\n\n      if (searchInput.val()) {\n        helper.search();\n      }\n    }\n  });\n\n  // Registering Widgets\n  [\n    instantsearch.widgets.searchBox({\n      container: '#algolia-search-input',\n      placeholder: algoliaSettings.labels.input_placeholder\n    }),\n\n    instantsearch.widgets.hits({\n      container: '#algolia-hits',\n      hitsPerPage: algoliaSettings.hits.per_page || 10,\n      templates: {\n        item: function (data) {\n          return (\n            '<a href=\"' + CONFIG.root + data.path + '\" class=\"algolia-hit-item-link\">' +\n            data._highlightResult.title.value +\n            '</a>'\n          );\n        },\n        empty: function (data) {\n          return (\n            '<div id=\"algolia-hits-empty\">' +\n            algoliaSettings.labels.hits_empty.replace(/\\$\\{query}/, data.query) +\n            '</div>'\n          );\n        }\n      },\n      cssClasses: {\n        item: 'algolia-hit-item'\n      }\n    }),\n\n    instantsearch.widgets.stats({\n      container: '#algolia-stats',\n      templates: {\n        body: function (data) {\n          var stats = algoliaSettings.labels.hits_stats\n            .replace(/\\$\\{hits}/, data.nbHits)\n            .replace(/\\$\\{time}/, data.processingTimeMS);\n          return (\n            stats +\n            '<span class=\"algolia-powered\">' +\n            '  <img src=\"' + CONFIG.root + 'images/algolia_logo.svg\" alt=\"Algolia\" />' +\n            '</span>' +\n            '<hr />'\n          );\n        }\n      }\n    }),\n\n    instantsearch.widgets.pagination({\n      container: '#algolia-pagination',\n      scrollTo: false,\n      showFirstLast: false,\n      labels: {\n        first: '<i class=\"fa fa-angle-double-left\"></i>',\n        last: '<i class=\"fa fa-angle-double-right\"></i>',\n        previous: '<i class=\"fa fa-angle-left\"></i>',\n        next: '<i class=\"fa fa-angle-right\"></i>'\n      },\n      cssClasses: {\n        root: 'pagination',\n        item: 'pagination-item',\n        link: 'page-number',\n        active: 'current',\n        disabled: 'disabled-item'\n      }\n    })\n  ].forEach(search.addWidget, search);\n\n  search.start();\n\n  $('.popup-trigger').on('click', function(e) {\n    e.stopPropagation();\n    $('body').append('<div class=\"popoverlay\">').css('overflow', 'hidden');\n    $('.popup').toggle();\n    $('#algolia-search-input').find('input').focus();\n  });\n\n  $('.popup-btn-close').click(function(){\n    $('.popup').hide();\n    $('.popoverlay').remove();\n    $('body').css('overflow', '');\n  });\n\n});\n</script>\n\n<script type=\"text/javascript\">\n  $(document).ready(function () {\n    if ( $('#local-search-input').size() === 0) {\n      return;\n    }\n\n    // Popup Window;\n    var isfetched = false;\n    // Search DB path;\n    var search_path = \"search.xml\";\n    if (search_path.length == 0) {\n      search_path = \"search.xml\";\n    }\n    var path = \"/\" + search_path;\n    // monitor main search box;\n\n    function proceedsearch() {\n      $(\"body\").append('<div class=\"popoverlay\">').css('overflow', 'hidden');\n      $('.popup').toggle();\n\n    }\n    // search function;\n    var searchFunc = function(path, search_id, content_id) {\n      'use strict';\n      $.ajax({\n        url: path,\n        dataType: \"xml\",\n        async: true,\n        success: function( xmlResponse ) {\n          // get the contents from search data\n          isfetched = true;\n          $('.popup').detach().appendTo('.header-inner');\n          var datas = $( \"entry\", xmlResponse ).map(function() {\n            return {\n              title: $( \"title\", this ).text(),\n              content: $(\"content\",this).text(),\n              url: $( \"url\" , this).text()\n            };\n          }).get();\n          var $input = document.getElementById(search_id);\n          var $resultContent = document.getElementById(content_id);\n          $input.addEventListener('input', function(){\n            var matchcounts = 0;\n            var str='<ul class=\\\"search-result-list\\\">';\n            var keywords = this.value.trim().toLowerCase().split(/[\\s\\-]+/);\n            $resultContent.innerHTML = \"\";\n            if (this.value.trim().length > 1) {\n              // perform local searching\n              datas.forEach(function(data) {\n                var isMatch = true;\n                var content_index = [];\n                var data_title = data.title.trim().toLowerCase();\n                var data_content = data.content.trim().replace(/<[^>]+>/g,\"\").toLowerCase();\n                var data_url = data.url;\n                var index_title = -1;\n                var index_content = -1;\n                var first_occur = -1;\n                // only match artiles with not empty titles and contents\n                if(data_title != '' && data_content != '') {\n                  keywords.forEach(function(keyword, i) {\n                    index_title = data_title.indexOf(keyword);\n                    index_content = data_content.indexOf(keyword);\n                    if( index_title < 0 && index_content < 0 ){\n                      isMatch = false;\n                    } else {\n                      if (index_content < 0) {\n                        index_content = 0;\n                      }\n                      if (i == 0) {\n                        first_occur = index_content;\n                      }\n                    }\n                  });\n                }\n                // show search results\n                if (isMatch) {\n                  matchcounts += 1;\n                  str += \"<li><a href='\"+ data_url +\"' class='search-result-title'>\"+ data_title +\"</a>\";\n                  var content = data.content.trim().replace(/<[^>]+>/g,\"\");\n                  if (first_occur >= 0) {\n                    // cut out 100 characters\n                    var start = first_occur - 20;\n                    var end = first_occur + 80;\n                    if(start < 0){\n                      start = 0;\n                    }\n                    if(start == 0){\n                      end = 50;\n                    }\n                    if(end > content.length){\n                      end = content.length;\n                    }\n                    var match_content = content.substring(start, end);\n                    // highlight all keywords\n                    keywords.forEach(function(keyword){\n                      var regS = new RegExp(keyword, \"gi\");\n                      match_content = match_content.replace(regS, \"<b class=\\\"search-keyword\\\">\"+keyword+\"</b>\");\n                    });\n\n                    str += \"<p class=\\\"search-result\\\">\" + match_content +\"...</p>\"\n                  }\n                  str += \"</li>\";\n                }\n              })};\n            str += \"</ul>\";\n            if (matchcounts == 0) { str = '<div id=\"no-result\"><i class=\"fa fa-frown-o fa-5x\" /></div>' }\n            if (keywords == \"\") { str = '<div id=\"no-result\"><i class=\"fa fa-search fa-5x\" /></div>' }\n            $resultContent.innerHTML = str;\n          });\n          proceedsearch();\n        }\n      });}\n\n    // handle and trigger popup window;\n    $('.popup-trigger').mousedown(function(e) {\n      e.stopPropagation();\n      if (isfetched == false) {\n        searchFunc(path, 'local-search-input', 'local-search-result');\n      } else {\n        proceedsearch();\n      };\n\n    });\n\n    $('.popup-btn-close').click(function(e){\n      $('.popup').hide();\n      $(\".popoverlay\").remove();\n      $('body').css('overflow', '');\n    });\n    $('.popup').click(function(e){\n      e.stopPropagation();\n    });\n  });\n</script>\n```\n> Next中可以新建一个js文件，`myalgolia.js`存放上述代码，然后存入主题的`source/js/src`中，然后修改主题的`layout/_layout.swig`,添加如下内容：\n```\n{% if theme.algolia %}\n  {% include '_scripts/algolia.swig' %}\n{% endif %}\n```\n>然后在`layout/_scripts`中新建`algolia.swig`，内容如下：\n```\n{%\n  set js_algolia = [\n    'src/myalgolia.js'\n  ]\n%}\n\n{% for common in js_algolia %}\n  <script type=\"text/javascript\" src=\"{{ url_for(theme.js) }}/{{ common }}?v={{ theme.version }}\"></script>\n{% endfor %}\n  <script src=\"http://cdn.bootcss.com/instantsearch.js/1.5.1/instantsearch.js\"></script>\n\n```\n6、确保要搜索页包含如下CSS代码（可以单独建立一个.styl文件，然后在整体css的styl文件中加入，注意确保生成正确，必要时可以执行hexo clean）\n```css\nul.search-result-list {\n  padding-left: 0px;\n  margin: 0px 5px 0px 8px;\n}\np.search-result {\n  border-bottom: 1px dashed #ccc;\n  padding: 5px 0;\n}\na.search-result-title {\n  font-weight: bold;\n}\na.search-result {\n  border-bottom: transparent;\n  display: block;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n.search-keyword {\n  border-bottom: 1px dashed #4088b8;\n  font-weight: bold;\n}\n#local-search-result {\n  height: 90%;\n  overflow: auto;\n}\n.popup {\n  display: none;\n  position: fixed;\n  top: 10%;\n  left: 50%;\n  width: 700px;\n  height: 80%;\n  margin-left: -350px;\n  padding: 3px 0 0 10px;\n  background: #fff;\n  color: #333;\n  z-index: 9999;\n  border-radius: 5px;\n}\n@media (max-width: 767px) {\n  .popup {\n    padding: 3px;\n    top: 0;\n    left: 0;\n    margin: 0;\n    width: 100%;\n    height: 100%;\n    border-radius: 0px;\n  }\n}\n.popoverlay {\n  position: fixed;\n  width: 100%;\n  height: 100%;\n  top: 0px;\n  left: 0px;\n  z-index: 2080;\n  background-color: rgba(0,0,0,0.3);\n}\n#local-search-input {\n  margin-bottom: 10px;\n  width: 50%;\n}\n.popup-btn-close {\n  position: absolute;\n  top: 6px;\n  right: 14px;\n  color: #4ebd79;\n  font-size: 14px;\n  font-weight: bold;\n  text-transform: uppercase;\n  cursor: pointer;\n}\n#no-result {\n  position: absolute;\n  left: 44%;\n  top: 42%;\n  color: #ccc;\n}\n.busuanzi-count:before {\n  content: \" \";\n  float: left;\n  width: 260px;\n  min-height: 25px;\n}\n@media (min-width: 768px) and (max-width: 991px) {\n  .busuanzi-count {\n    width: auto;\n  }\n  .busuanzi-count:before {\n    display: none;\n  }\n}\n@media (max-width: 767px) {\n  .busuanzi-count {\n    width: auto;\n  }\n  .busuanzi-count:before {\n    display: none;\n  }\n}\n.site-uv,\n.site-pv,\n.page-pv {\n  display: inline-block;\n}\n.site-uv .busuanzi-value,\n.site-pv .busuanzi-value,\n.page-pv .busuanzi-value {\n  margin: 0 5px;\n}\n.site-uv {\n  margin-right: 10px;\n}\n.site-uv::after {\n  content: \"|\";\n  padding-left: 10px;\n}\n.algolia-popup {\n  overflow: hidden;\n  padding: 0;\n}\n.algolia-popup .popup-btn-close {\n  padding-left: 15px;\n  border-left: 1px solid #eee;\n  top: 10px;\n}\n.algolia-popup .popup-btn-close .fa {\n  color: #999;\n  font-size: 18px;\n}\n.algolia-popup .popup-btn-close:hover .fa {\n  color: #222;\n}\n.algolia-search {\n  padding: 10px 15px 5px;\n  max-height: 50px;\n  border-bottom: 1px solid #ccc;\n  background: #f5f5f5;\n  border-top-left-radius: 5px;\n  border-top-right-radius: 5px;\n}\n.algolia-search-input-icon {\n  display: inline-block;\n  width: 20px;\n}\n.algolia-search-input-icon .fa {\n  font-size: 18px;\n}\n.algolia-search-input {\n  display: inline-block;\n  width: calc(90% - 20px);\n}\n.algolia-search-input input {\n  padding: 5px 0;\n  width: 100%;\n  outline: none;\n  border: none;\n  background: transparent;\n}\n.algolia-powered {\n  float: right;\n}\n.algolia-powered img {\n  display: inline-block;\n  height: 18px;\n  vertical-align: middle;\n}\n.algolia-results {\n  position: relative;\n  overflow: auto;\n  padding: 10px 30px;\n  height: calc(100% - 50px);\n}\n.algolia-results hr {\n  margin: 10px 0;\n}\n.algolia-results .highlight {\n  font-style: normal;\n  margin: 0;\n  padding: 0 2px;\n  font-size: inherit;\n  color: #f00;\n}\n.algolia-hits {\n  margin-top: 20px;\n}\n.algolia-hit-item {\n  margin: 15px 0;\n}\n.algolia-hit-item-link {\n  display: block;\n  border-bottom: 1px dashed #ccc;\n  transition-duration: 0.2s;\n  transition-timing-function: ease-in-out;\n  transition-delay: 0s;\n}\n.algolia-pagination .pagination {\n  margin-top: 40px;\n  border-top: none;\n  padding: 0;\n}\n.algolia-pagination .pagination-item {\n  display: inline-block;\n}\n.algolia-pagination .page-number {\n  border-top: none;\n}\n.algolia-pagination .page-number:hover {\n  border-bottom: 1px solid #222;\n}\n.algolia-pagination .disabled-item {\n  visibility: hidden;\n}\n```\n7、将如下图片放入主题的`source/images`下\n{% asset_img algolia_logo.svg %}\n\n## 大功告成~，可以参考本站搜索功能。\n\nps：最后再说一句，algolia最开始会给你14天的高级试用功能，结束之后会停止工作，你需要手动切换到免费模式下才能继续。\n\n\n\n\n\n>写作时参考[《Hexo集成Algolia搜索插件》](http://kuwoku.com/2016/05/30/Hexo%E9%9B%86%E6%88%90Algolia%E6%90%9C%E7%B4%A2%E6%8F%92%E4%BB%B6/)\n","source":"_posts/hexo-next-use-algolia.md","raw":"---\ntitle: 在Hexo下使用Algolia搜索\ndate: 2016-06-06 23:23:19\ncategories: Hexo\ntags:\n- Algolia\n- Next\n- swiftype\n---\nSwiftype悄无声息的就取消了免费模式，得赶紧找个下家了，现在来推一个新的第三方搜索----algolia。\n<!-- more -->\n\n## 官网注册\n1、 [官网地址](http://www.algolia.com)注册帐号。\n2、 新建一个INDEX如图。\n{% asset_img algolia-index.png %}\n3、 来到[API-KEYS](https://www.algolia.com/api-keys)页面，上面有后面需要的信息（记得还有上面的INDEX名）。\n{% asset_img algolia-api-keys.png %}\n\n## 第二步：上传数据到Algolia\n1、 在Hexo主目录下执行\n```\nnpm install hexo-algolia --save\n```\n2、 在根目录的_config.yml中加入如下配置，使用前边注册成果的数据\n```\nalgolia:\n  applicationID: 'your applicationID'\n  apiKey: 'your apiKey'\n  adminApiKey: 'your adminApiKey'\n  indexName: 'your indexName'\n  chunkSize: 5000\n```\n3、 接着执行，确保提交成功提示\n```\nhexo algolia\n```\n## 第三步：修改Hexo主题集成Algolia\n1、 确保在head.swig文件中加入如下配置，注意改成自己的\n```\n<script type=\"text/javascript\" id=\"hexo.configuration\">\n  var CONFIG = {\n    root: '/',\n    algolia: {\n          applicationID: 'your applicationID',\n          apiKey: 'your apiKey',\n          indexName: ''your indexName',\n          hits: {\"per_page\":10},\n          labels: {\"input_placeholder\":\"搜索...\",\"hits_empty\":\"未发现与 「${query}」相关的内容\",\"hits_stats\":\"${hits} 条相关条目，使用了 ${time} 毫秒\"}\n        }\n  };\n</script>\n```\n2、 在主题配置文件_config.yml中加入,作为开启关闭的开关\n```\n# Algolia\nalgolia: true\n```\n> 以Next为例，修改主题目录下`layout/search.swig`为：\n```\n{% if theme.swiftype_key %}\n  {% include 'search/swiftype.swig' %}\n{% elseif theme.tinysou_Key %}\n  {% include 'search/tinysou.swig' %}\n{% elseif config.search.path %}\n  {% include 'search/localsearch.swig' %}\n{% elseif theme.algolia %}\n  {% include 'search/algolia.swig' %}\n{% endif %}\n\n```\n3、 在要搜索的页面加入下面html,Next主题中在`layout/_partials/search/`中添加algolia.swig文件，写入如下内容：\n```html\n<div class=\"site-search\">\n  <div class=\"algolia-popup popup\">\n    <div class=\"algolia-search\">\n      <div class=\"algolia-search-input-icon\">\n        <i class=\"fa fa-search\"></i>\n      </div>\n      <div class=\"algolia-search-input\" id=\"algolia-search-input\"></div>\n    </div>\n\n    <div class=\"algolia-results\">\n      <div id=\"algolia-stats\"></div>\n      <div id=\"algolia-hits\"></div>\n      <div id=\"algolia-pagination\" class=\"algolia-pagination\"></div>\n    </div>\n\n    <span class=\"popup-btn-close\">\n      <i class=\"fa fa-times-circle\"></i>\n    </span>\n  </div>\n</div>\n```\n4、 触发搜索的HTML节点中加入class名为`popup-trigger`的标签，如下：\n```\n<a href=\"#\" class=\"popup-trigger\">\n```\n> Next为例：在`layout/_partials/header.swig`修改如下（注释位置）：\n```html\n<nav class=\"site-nav\">\n  {% set hasSearch = theme.swiftype_key || theme.tinysou_Key || config.search || theme.algolia %}\n  <!-- 添加algolia判断条件 -->\n  {% if theme.menu %}\n    <ul id=\"menu\" class=\"menu\">\n      {% for name, path in theme.menu %}\n        {% set itemName = name.toLowerCase() %}\n        <li class=\"menu-item menu-item-{{ itemName }}\">\n          <a href=\"{{ url_for(path) }}\" rel=\"section\">\n            {% if theme.menu_icons.enable %}\n              <i class=\"menu-item-icon fa fa-fw fa-{{theme.menu_icons[itemName] | default('question-circle') | lower }}\"></i> <br />\n            {% endif %}\n            {{ __('menu.' + itemName) }}\n          </a>\n        </li>\n      {% endfor %}\n\n      {% if hasSearch %}\n        <li class=\"menu-item menu-item-search\">\n          {% if theme.swiftype_key %}\n            <a href=\"#\" class=\"st-search-show-outputs\">\n          {% elseif config.search %}\n            <a href=\"#\" class=\"popup-trigger\">\n            <!-- 判断algolia -->\n          {% elseif theme.algolia %}\n            <a href=\"#\" class=\"popup-trigger\">\n          {% endif %}\n            {% if theme.menu_icons.enable %}\n              <i class=\"menu-item-icon fa fa-search fa-fw\"></i> <br />\n            {% endif %}\n            {{ __('menu.search') }}\n          </a>\n        </li>\n      {% endif %}\n    </ul>\n  {% endif %}\n\n  {% if hasSearch %}\n    <div class=\"site-search\">\n      {% include 'search.swig' %}\n    </div>\n  {% endif %}\n</nav>\n```\n5、 需要确保页面包含如下JS代码（可以单独建立一个.swig文件，然后在整体layout的swig文件中加入）\n```js\n<script src=\"http://cdn.bootcss.com/instantsearch.js/1.5.1/instantsearch.js\"></script>\n\n<script type=\"text/javascript\">\n$(document).ready(function () {\n  var algoliaSettings = CONFIG.algolia;\n  var isAlgoliaSettingsValid = algoliaSettings.applicationID &&\n    algoliaSettings.apiKey &&\n    algoliaSettings.indexName;\n\n  if (!isAlgoliaSettingsValid) {\n    window.console.error('Algolia Settings are invalid.');\n    return;\n  }\n\n  var search = instantsearch({\n    appId: algoliaSettings.applicationID,\n    apiKey: algoliaSettings.apiKey,\n    indexName: algoliaSettings.indexName,\n    searchFunction: function (helper) {\n      var searchInput = $('#algolia-search-input').find('input');\n\n      if (searchInput.val()) {\n        helper.search();\n      }\n    }\n  });\n\n  // Registering Widgets\n  [\n    instantsearch.widgets.searchBox({\n      container: '#algolia-search-input',\n      placeholder: algoliaSettings.labels.input_placeholder\n    }),\n\n    instantsearch.widgets.hits({\n      container: '#algolia-hits',\n      hitsPerPage: algoliaSettings.hits.per_page || 10,\n      templates: {\n        item: function (data) {\n          return (\n            '<a href=\"' + CONFIG.root + data.path + '\" class=\"algolia-hit-item-link\">' +\n            data._highlightResult.title.value +\n            '</a>'\n          );\n        },\n        empty: function (data) {\n          return (\n            '<div id=\"algolia-hits-empty\">' +\n            algoliaSettings.labels.hits_empty.replace(/\\$\\{query}/, data.query) +\n            '</div>'\n          );\n        }\n      },\n      cssClasses: {\n        item: 'algolia-hit-item'\n      }\n    }),\n\n    instantsearch.widgets.stats({\n      container: '#algolia-stats',\n      templates: {\n        body: function (data) {\n          var stats = algoliaSettings.labels.hits_stats\n            .replace(/\\$\\{hits}/, data.nbHits)\n            .replace(/\\$\\{time}/, data.processingTimeMS);\n          return (\n            stats +\n            '<span class=\"algolia-powered\">' +\n            '  <img src=\"' + CONFIG.root + 'images/algolia_logo.svg\" alt=\"Algolia\" />' +\n            '</span>' +\n            '<hr />'\n          );\n        }\n      }\n    }),\n\n    instantsearch.widgets.pagination({\n      container: '#algolia-pagination',\n      scrollTo: false,\n      showFirstLast: false,\n      labels: {\n        first: '<i class=\"fa fa-angle-double-left\"></i>',\n        last: '<i class=\"fa fa-angle-double-right\"></i>',\n        previous: '<i class=\"fa fa-angle-left\"></i>',\n        next: '<i class=\"fa fa-angle-right\"></i>'\n      },\n      cssClasses: {\n        root: 'pagination',\n        item: 'pagination-item',\n        link: 'page-number',\n        active: 'current',\n        disabled: 'disabled-item'\n      }\n    })\n  ].forEach(search.addWidget, search);\n\n  search.start();\n\n  $('.popup-trigger').on('click', function(e) {\n    e.stopPropagation();\n    $('body').append('<div class=\"popoverlay\">').css('overflow', 'hidden');\n    $('.popup').toggle();\n    $('#algolia-search-input').find('input').focus();\n  });\n\n  $('.popup-btn-close').click(function(){\n    $('.popup').hide();\n    $('.popoverlay').remove();\n    $('body').css('overflow', '');\n  });\n\n});\n</script>\n\n<script type=\"text/javascript\">\n  $(document).ready(function () {\n    if ( $('#local-search-input').size() === 0) {\n      return;\n    }\n\n    // Popup Window;\n    var isfetched = false;\n    // Search DB path;\n    var search_path = \"search.xml\";\n    if (search_path.length == 0) {\n      search_path = \"search.xml\";\n    }\n    var path = \"/\" + search_path;\n    // monitor main search box;\n\n    function proceedsearch() {\n      $(\"body\").append('<div class=\"popoverlay\">').css('overflow', 'hidden');\n      $('.popup').toggle();\n\n    }\n    // search function;\n    var searchFunc = function(path, search_id, content_id) {\n      'use strict';\n      $.ajax({\n        url: path,\n        dataType: \"xml\",\n        async: true,\n        success: function( xmlResponse ) {\n          // get the contents from search data\n          isfetched = true;\n          $('.popup').detach().appendTo('.header-inner');\n          var datas = $( \"entry\", xmlResponse ).map(function() {\n            return {\n              title: $( \"title\", this ).text(),\n              content: $(\"content\",this).text(),\n              url: $( \"url\" , this).text()\n            };\n          }).get();\n          var $input = document.getElementById(search_id);\n          var $resultContent = document.getElementById(content_id);\n          $input.addEventListener('input', function(){\n            var matchcounts = 0;\n            var str='<ul class=\\\"search-result-list\\\">';\n            var keywords = this.value.trim().toLowerCase().split(/[\\s\\-]+/);\n            $resultContent.innerHTML = \"\";\n            if (this.value.trim().length > 1) {\n              // perform local searching\n              datas.forEach(function(data) {\n                var isMatch = true;\n                var content_index = [];\n                var data_title = data.title.trim().toLowerCase();\n                var data_content = data.content.trim().replace(/<[^>]+>/g,\"\").toLowerCase();\n                var data_url = data.url;\n                var index_title = -1;\n                var index_content = -1;\n                var first_occur = -1;\n                // only match artiles with not empty titles and contents\n                if(data_title != '' && data_content != '') {\n                  keywords.forEach(function(keyword, i) {\n                    index_title = data_title.indexOf(keyword);\n                    index_content = data_content.indexOf(keyword);\n                    if( index_title < 0 && index_content < 0 ){\n                      isMatch = false;\n                    } else {\n                      if (index_content < 0) {\n                        index_content = 0;\n                      }\n                      if (i == 0) {\n                        first_occur = index_content;\n                      }\n                    }\n                  });\n                }\n                // show search results\n                if (isMatch) {\n                  matchcounts += 1;\n                  str += \"<li><a href='\"+ data_url +\"' class='search-result-title'>\"+ data_title +\"</a>\";\n                  var content = data.content.trim().replace(/<[^>]+>/g,\"\");\n                  if (first_occur >= 0) {\n                    // cut out 100 characters\n                    var start = first_occur - 20;\n                    var end = first_occur + 80;\n                    if(start < 0){\n                      start = 0;\n                    }\n                    if(start == 0){\n                      end = 50;\n                    }\n                    if(end > content.length){\n                      end = content.length;\n                    }\n                    var match_content = content.substring(start, end);\n                    // highlight all keywords\n                    keywords.forEach(function(keyword){\n                      var regS = new RegExp(keyword, \"gi\");\n                      match_content = match_content.replace(regS, \"<b class=\\\"search-keyword\\\">\"+keyword+\"</b>\");\n                    });\n\n                    str += \"<p class=\\\"search-result\\\">\" + match_content +\"...</p>\"\n                  }\n                  str += \"</li>\";\n                }\n              })};\n            str += \"</ul>\";\n            if (matchcounts == 0) { str = '<div id=\"no-result\"><i class=\"fa fa-frown-o fa-5x\" /></div>' }\n            if (keywords == \"\") { str = '<div id=\"no-result\"><i class=\"fa fa-search fa-5x\" /></div>' }\n            $resultContent.innerHTML = str;\n          });\n          proceedsearch();\n        }\n      });}\n\n    // handle and trigger popup window;\n    $('.popup-trigger').mousedown(function(e) {\n      e.stopPropagation();\n      if (isfetched == false) {\n        searchFunc(path, 'local-search-input', 'local-search-result');\n      } else {\n        proceedsearch();\n      };\n\n    });\n\n    $('.popup-btn-close').click(function(e){\n      $('.popup').hide();\n      $(\".popoverlay\").remove();\n      $('body').css('overflow', '');\n    });\n    $('.popup').click(function(e){\n      e.stopPropagation();\n    });\n  });\n</script>\n```\n> Next中可以新建一个js文件，`myalgolia.js`存放上述代码，然后存入主题的`source/js/src`中，然后修改主题的`layout/_layout.swig`,添加如下内容：\n```\n{% if theme.algolia %}\n  {% include '_scripts/algolia.swig' %}\n{% endif %}\n```\n>然后在`layout/_scripts`中新建`algolia.swig`，内容如下：\n```\n{%\n  set js_algolia = [\n    'src/myalgolia.js'\n  ]\n%}\n\n{% for common in js_algolia %}\n  <script type=\"text/javascript\" src=\"{{ url_for(theme.js) }}/{{ common }}?v={{ theme.version }}\"></script>\n{% endfor %}\n  <script src=\"http://cdn.bootcss.com/instantsearch.js/1.5.1/instantsearch.js\"></script>\n\n```\n6、确保要搜索页包含如下CSS代码（可以单独建立一个.styl文件，然后在整体css的styl文件中加入，注意确保生成正确，必要时可以执行hexo clean）\n```css\nul.search-result-list {\n  padding-left: 0px;\n  margin: 0px 5px 0px 8px;\n}\np.search-result {\n  border-bottom: 1px dashed #ccc;\n  padding: 5px 0;\n}\na.search-result-title {\n  font-weight: bold;\n}\na.search-result {\n  border-bottom: transparent;\n  display: block;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n.search-keyword {\n  border-bottom: 1px dashed #4088b8;\n  font-weight: bold;\n}\n#local-search-result {\n  height: 90%;\n  overflow: auto;\n}\n.popup {\n  display: none;\n  position: fixed;\n  top: 10%;\n  left: 50%;\n  width: 700px;\n  height: 80%;\n  margin-left: -350px;\n  padding: 3px 0 0 10px;\n  background: #fff;\n  color: #333;\n  z-index: 9999;\n  border-radius: 5px;\n}\n@media (max-width: 767px) {\n  .popup {\n    padding: 3px;\n    top: 0;\n    left: 0;\n    margin: 0;\n    width: 100%;\n    height: 100%;\n    border-radius: 0px;\n  }\n}\n.popoverlay {\n  position: fixed;\n  width: 100%;\n  height: 100%;\n  top: 0px;\n  left: 0px;\n  z-index: 2080;\n  background-color: rgba(0,0,0,0.3);\n}\n#local-search-input {\n  margin-bottom: 10px;\n  width: 50%;\n}\n.popup-btn-close {\n  position: absolute;\n  top: 6px;\n  right: 14px;\n  color: #4ebd79;\n  font-size: 14px;\n  font-weight: bold;\n  text-transform: uppercase;\n  cursor: pointer;\n}\n#no-result {\n  position: absolute;\n  left: 44%;\n  top: 42%;\n  color: #ccc;\n}\n.busuanzi-count:before {\n  content: \" \";\n  float: left;\n  width: 260px;\n  min-height: 25px;\n}\n@media (min-width: 768px) and (max-width: 991px) {\n  .busuanzi-count {\n    width: auto;\n  }\n  .busuanzi-count:before {\n    display: none;\n  }\n}\n@media (max-width: 767px) {\n  .busuanzi-count {\n    width: auto;\n  }\n  .busuanzi-count:before {\n    display: none;\n  }\n}\n.site-uv,\n.site-pv,\n.page-pv {\n  display: inline-block;\n}\n.site-uv .busuanzi-value,\n.site-pv .busuanzi-value,\n.page-pv .busuanzi-value {\n  margin: 0 5px;\n}\n.site-uv {\n  margin-right: 10px;\n}\n.site-uv::after {\n  content: \"|\";\n  padding-left: 10px;\n}\n.algolia-popup {\n  overflow: hidden;\n  padding: 0;\n}\n.algolia-popup .popup-btn-close {\n  padding-left: 15px;\n  border-left: 1px solid #eee;\n  top: 10px;\n}\n.algolia-popup .popup-btn-close .fa {\n  color: #999;\n  font-size: 18px;\n}\n.algolia-popup .popup-btn-close:hover .fa {\n  color: #222;\n}\n.algolia-search {\n  padding: 10px 15px 5px;\n  max-height: 50px;\n  border-bottom: 1px solid #ccc;\n  background: #f5f5f5;\n  border-top-left-radius: 5px;\n  border-top-right-radius: 5px;\n}\n.algolia-search-input-icon {\n  display: inline-block;\n  width: 20px;\n}\n.algolia-search-input-icon .fa {\n  font-size: 18px;\n}\n.algolia-search-input {\n  display: inline-block;\n  width: calc(90% - 20px);\n}\n.algolia-search-input input {\n  padding: 5px 0;\n  width: 100%;\n  outline: none;\n  border: none;\n  background: transparent;\n}\n.algolia-powered {\n  float: right;\n}\n.algolia-powered img {\n  display: inline-block;\n  height: 18px;\n  vertical-align: middle;\n}\n.algolia-results {\n  position: relative;\n  overflow: auto;\n  padding: 10px 30px;\n  height: calc(100% - 50px);\n}\n.algolia-results hr {\n  margin: 10px 0;\n}\n.algolia-results .highlight {\n  font-style: normal;\n  margin: 0;\n  padding: 0 2px;\n  font-size: inherit;\n  color: #f00;\n}\n.algolia-hits {\n  margin-top: 20px;\n}\n.algolia-hit-item {\n  margin: 15px 0;\n}\n.algolia-hit-item-link {\n  display: block;\n  border-bottom: 1px dashed #ccc;\n  transition-duration: 0.2s;\n  transition-timing-function: ease-in-out;\n  transition-delay: 0s;\n}\n.algolia-pagination .pagination {\n  margin-top: 40px;\n  border-top: none;\n  padding: 0;\n}\n.algolia-pagination .pagination-item {\n  display: inline-block;\n}\n.algolia-pagination .page-number {\n  border-top: none;\n}\n.algolia-pagination .page-number:hover {\n  border-bottom: 1px solid #222;\n}\n.algolia-pagination .disabled-item {\n  visibility: hidden;\n}\n```\n7、将如下图片放入主题的`source/images`下\n{% asset_img algolia_logo.svg %}\n\n## 大功告成~，可以参考本站搜索功能。\n\nps：最后再说一句，algolia最开始会给你14天的高级试用功能，结束之后会停止工作，你需要手动切换到免费模式下才能继续。\n\n\n\n\n\n>写作时参考[《Hexo集成Algolia搜索插件》](http://kuwoku.com/2016/05/30/Hexo%E9%9B%86%E6%88%90Algolia%E6%90%9C%E7%B4%A2%E6%8F%92%E4%BB%B6/)\n","slug":"hexo-next-use-algolia","published":1,"updated":"2016-06-30T04:49:55.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirvtn4ot000iplnynpe2f70p","content":"<p>Swiftype悄无声息的就取消了免费模式，得赶紧找个下家了，现在来推一个新的第三方搜索—-algolia。<br><a id=\"more\"></a></p>\n<h2 id=\"官网注册\"><a href=\"#官网注册\" class=\"headerlink\" title=\"官网注册\"></a>官网注册</h2><p>1、 <a href=\"http://www.algolia.com\" target=\"_blank\" rel=\"external\">官网地址</a>注册帐号。<br>2、 新建一个INDEX如图。<br><img src=\"/20160606/hexo-next-use-algolia/algolia-index.png\" alt=\"algolia-index.png\" title=\"\"><br>3、 来到<a href=\"https://www.algolia.com/api-keys\" target=\"_blank\" rel=\"external\">API-KEYS</a>页面，上面有后面需要的信息（记得还有上面的INDEX名）。<br><img src=\"/20160606/hexo-next-use-algolia/algolia-api-keys.png\" alt=\"algolia-api-keys.png\" title=\"\"></p>\n<h2 id=\"第二步：上传数据到Algolia\"><a href=\"#第二步：上传数据到Algolia\" class=\"headerlink\" title=\"第二步：上传数据到Algolia\"></a>第二步：上传数据到Algolia</h2><p>1、 在Hexo主目录下执行<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm install hexo-algolia --save</div></pre></td></tr></table></figure></p>\n<p>2、 在根目录的_config.yml中加入如下配置，使用前边注册成果的数据<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">algolia:</div><div class=\"line\">  applicationID: &apos;your applicationID&apos;</div><div class=\"line\">  apiKey: &apos;your apiKey&apos;</div><div class=\"line\">  adminApiKey: &apos;your adminApiKey&apos;</div><div class=\"line\">  indexName: &apos;your indexName&apos;</div><div class=\"line\">  chunkSize: 5000</div></pre></td></tr></table></figure></p>\n<p>3、 接着执行，确保提交成功提示<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">hexo algolia</div></pre></td></tr></table></figure></p>\n<h2 id=\"第三步：修改Hexo主题集成Algolia\"><a href=\"#第三步：修改Hexo主题集成Algolia\" class=\"headerlink\" title=\"第三步：修改Hexo主题集成Algolia\"></a>第三步：修改Hexo主题集成Algolia</h2><p>1、 确保在head.swig文件中加入如下配置，注意改成自己的<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;script type=&quot;text/javascript&quot; id=&quot;hexo.configuration&quot;&gt;</div><div class=\"line\">  var CONFIG = &#123;</div><div class=\"line\">    root: &apos;/&apos;,</div><div class=\"line\">    algolia: &#123;</div><div class=\"line\">          applicationID: &apos;your applicationID&apos;,</div><div class=\"line\">          apiKey: &apos;your apiKey&apos;,</div><div class=\"line\">          indexName: &apos;&apos;your indexName&apos;,</div><div class=\"line\">          hits: &#123;&quot;per_page&quot;:10&#125;,</div><div class=\"line\">          labels: &#123;&quot;input_placeholder&quot;:&quot;搜索...&quot;,&quot;hits_empty&quot;:&quot;未发现与 「$&#123;query&#125;」相关的内容&quot;,&quot;hits_stats&quot;:&quot;$&#123;hits&#125; 条相关条目，使用了 $&#123;time&#125; 毫秒&quot;&#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">  &#125;;</div><div class=\"line\">&lt;/script&gt;</div></pre></td></tr></table></figure></p>\n<p>2、 在主题配置文件_config.yml中加入,作为开启关闭的开关<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"># Algolia</div><div class=\"line\">algolia: true</div></pre></td></tr></table></figure></p>\n<blockquote>\n<p>以Next为例，修改主题目录下<code>layout/search.swig</code>为：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">&#123;% if theme.swiftype_key %&#125;</div><div class=\"line\">  &#123;% include &apos;search/swiftype.swig&apos; %&#125;</div><div class=\"line\">&#123;% elseif theme.tinysou_Key %&#125;</div><div class=\"line\">  &#123;% include &apos;search/tinysou.swig&apos; %&#125;</div><div class=\"line\">&#123;% elseif config.search.path %&#125;</div><div class=\"line\">  &#123;% include &apos;search/localsearch.swig&apos; %&#125;</div><div class=\"line\">&#123;% elseif theme.algolia %&#125;</div><div class=\"line\">  &#123;% include &apos;search/algolia.swig&apos; %&#125;</div><div class=\"line\">&#123;% endif %&#125;</div></pre></td></tr></table></figure></p>\n</blockquote>\n<p>3、 在要搜索的页面加入下面html,Next主题中在<code>layout/_partials/search/</code>中添加algolia.swig文件，写入如下内容：<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"site-search\"</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"algolia-popup popup\"</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"algolia-search\"</span>&gt;</span></div><div class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"algolia-search-input-icon\"</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">i</span> <span class=\"attr\">class</span>=<span class=\"string\">\"fa fa-search\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">i</span>&gt;</span></div><div class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"algolia-search-input\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"algolia-search-input\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"algolia-results\"</span>&gt;</span></div><div class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"algolia-stats\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"algolia-hits\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"algolia-pagination\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"algolia-pagination\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">class</span>=<span class=\"string\">\"popup-btn-close\"</span>&gt;</span></div><div class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">i</span> <span class=\"attr\">class</span>=<span class=\"string\">\"fa fa-times-circle\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">i</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div></pre></td></tr></table></figure></p>\n<p>4、 触发搜索的HTML节点中加入class名为<code>popup-trigger</code>的标签，如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;a href=&quot;#&quot; class=&quot;popup-trigger&quot;&gt;</div></pre></td></tr></table></figure></p>\n<blockquote>\n<p>Next为例：在<code>layout/_partials/header.swig</code>修改如下（注释位置）：<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">nav</span> <span class=\"attr\">class</span>=<span class=\"string\">\"site-nav\"</span>&gt;</span></div><div class=\"line\">  &#123;% set hasSearch = theme.swiftype_key || theme.tinysou_Key || config.search || theme.algolia %&#125;</div><div class=\"line\">  <span class=\"comment\">&lt;!-- 添加algolia判断条件 --&gt;</span></div><div class=\"line\">  &#123;% if theme.menu %&#125;</div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">ul</span> <span class=\"attr\">id</span>=<span class=\"string\">\"menu\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"menu\"</span>&gt;</span></div><div class=\"line\">      &#123;% for name, path in theme.menu %&#125;</div><div class=\"line\">        &#123;% set itemName = name.toLowerCase() %&#125;</div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">class</span>=<span class=\"string\">\"menu-item menu-item-&#123;&#123; itemName &#125;&#125;\"</span>&gt;</span></div><div class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"&#123;&#123; url_for(path) &#125;&#125;\"</span> <span class=\"attr\">rel</span>=<span class=\"string\">\"section\"</span>&gt;</span></div><div class=\"line\">            &#123;% if theme.menu_icons.enable %&#125;</div><div class=\"line\">              <span class=\"tag\">&lt;<span class=\"name\">i</span> <span class=\"attr\">class</span>=<span class=\"string\">\"menu-item-icon fa fa-fw fa-&#123;&#123;theme.menu_icons[itemName] | default('question-circle') | lower &#125;&#125;\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">i</span>&gt;</span> <span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span></div><div class=\"line\">            &#123;% endif %&#125;</div><div class=\"line\">            &#123;&#123; __('menu.' + itemName) &#125;&#125;</div><div class=\"line\">          <span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></div><div class=\"line\">      &#123;% endfor %&#125;</div><div class=\"line\"></div><div class=\"line\">      &#123;% if hasSearch %&#125;</div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">class</span>=<span class=\"string\">\"menu-item menu-item-search\"</span>&gt;</span></div><div class=\"line\">          &#123;% if theme.swiftype_key %&#125;</div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"#\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"st-search-show-outputs\"</span>&gt;</span></div><div class=\"line\">          &#123;% elseif config.search %&#125;</div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"#\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"popup-trigger\"</span>&gt;</span></div><div class=\"line\">            <span class=\"comment\">&lt;!-- 判断algolia --&gt;</span></div><div class=\"line\">          &#123;% elseif theme.algolia %&#125;</div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"#\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"popup-trigger\"</span>&gt;</span></div><div class=\"line\">          &#123;% endif %&#125;</div><div class=\"line\">            &#123;% if theme.menu_icons.enable %&#125;</div><div class=\"line\">              <span class=\"tag\">&lt;<span class=\"name\">i</span> <span class=\"attr\">class</span>=<span class=\"string\">\"menu-item-icon fa fa-search fa-fw\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">i</span>&gt;</span> <span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span></div><div class=\"line\">            &#123;% endif %&#125;</div><div class=\"line\">            &#123;&#123; __('menu.search') &#125;&#125;</div><div class=\"line\">          <span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></div><div class=\"line\">      &#123;% endif %&#125;</div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></div><div class=\"line\">  &#123;% endif %&#125;</div><div class=\"line\"></div><div class=\"line\">  &#123;% if hasSearch %&#125;</div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"site-search\"</span>&gt;</span></div><div class=\"line\">      &#123;% include 'search.swig' %&#125;</div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\">  &#123;% endif %&#125;</div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">nav</span>&gt;</span></div></pre></td></tr></table></figure></p>\n</blockquote>\n<p>5、 需要确保页面包含如下JS代码（可以单独建立一个.swig文件，然后在整体layout的swig文件中加入）<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div><div class=\"line\">106</div><div class=\"line\">107</div><div class=\"line\">108</div><div class=\"line\">109</div><div class=\"line\">110</div><div class=\"line\">111</div><div class=\"line\">112</div><div class=\"line\">113</div><div class=\"line\">114</div><div class=\"line\">115</div><div class=\"line\">116</div><div class=\"line\">117</div><div class=\"line\">118</div><div class=\"line\">119</div><div class=\"line\">120</div><div class=\"line\">121</div><div class=\"line\">122</div><div class=\"line\">123</div><div class=\"line\">124</div><div class=\"line\">125</div><div class=\"line\">126</div><div class=\"line\">127</div><div class=\"line\">128</div><div class=\"line\">129</div><div class=\"line\">130</div><div class=\"line\">131</div><div class=\"line\">132</div><div class=\"line\">133</div><div class=\"line\">134</div><div class=\"line\">135</div><div class=\"line\">136</div><div class=\"line\">137</div><div class=\"line\">138</div><div class=\"line\">139</div><div class=\"line\">140</div><div class=\"line\">141</div><div class=\"line\">142</div><div class=\"line\">143</div><div class=\"line\">144</div><div class=\"line\">145</div><div class=\"line\">146</div><div class=\"line\">147</div><div class=\"line\">148</div><div class=\"line\">149</div><div class=\"line\">150</div><div class=\"line\">151</div><div class=\"line\">152</div><div class=\"line\">153</div><div class=\"line\">154</div><div class=\"line\">155</div><div class=\"line\">156</div><div class=\"line\">157</div><div class=\"line\">158</div><div class=\"line\">159</div><div class=\"line\">160</div><div class=\"line\">161</div><div class=\"line\">162</div><div class=\"line\">163</div><div class=\"line\">164</div><div class=\"line\">165</div><div class=\"line\">166</div><div class=\"line\">167</div><div class=\"line\">168</div><div class=\"line\">169</div><div class=\"line\">170</div><div class=\"line\">171</div><div class=\"line\">172</div><div class=\"line\">173</div><div class=\"line\">174</div><div class=\"line\">175</div><div class=\"line\">176</div><div class=\"line\">177</div><div class=\"line\">178</div><div class=\"line\">179</div><div class=\"line\">180</div><div class=\"line\">181</div><div class=\"line\">182</div><div class=\"line\">183</div><div class=\"line\">184</div><div class=\"line\">185</div><div class=\"line\">186</div><div class=\"line\">187</div><div class=\"line\">188</div><div class=\"line\">189</div><div class=\"line\">190</div><div class=\"line\">191</div><div class=\"line\">192</div><div class=\"line\">193</div><div class=\"line\">194</div><div class=\"line\">195</div><div class=\"line\">196</div><div class=\"line\">197</div><div class=\"line\">198</div><div class=\"line\">199</div><div class=\"line\">200</div><div class=\"line\">201</div><div class=\"line\">202</div><div class=\"line\">203</div><div class=\"line\">204</div><div class=\"line\">205</div><div class=\"line\">206</div><div class=\"line\">207</div><div class=\"line\">208</div><div class=\"line\">209</div><div class=\"line\">210</div><div class=\"line\">211</div><div class=\"line\">212</div><div class=\"line\">213</div><div class=\"line\">214</div><div class=\"line\">215</div><div class=\"line\">216</div><div class=\"line\">217</div><div class=\"line\">218</div><div class=\"line\">219</div><div class=\"line\">220</div><div class=\"line\">221</div><div class=\"line\">222</div><div class=\"line\">223</div><div class=\"line\">224</div><div class=\"line\">225</div><div class=\"line\">226</div><div class=\"line\">227</div><div class=\"line\">228</div><div class=\"line\">229</div><div class=\"line\">230</div><div class=\"line\">231</div><div class=\"line\">232</div><div class=\"line\">233</div><div class=\"line\">234</div><div class=\"line\">235</div><div class=\"line\">236</div><div class=\"line\">237</div><div class=\"line\">238</div><div class=\"line\">239</div><div class=\"line\">240</div><div class=\"line\">241</div><div class=\"line\">242</div><div class=\"line\">243</div><div class=\"line\">244</div><div class=\"line\">245</div><div class=\"line\">246</div><div class=\"line\">247</div><div class=\"line\">248</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;script src=<span class=\"string\">\"http://cdn.bootcss.com/instantsearch.js/1.5.1/instantsearch.js\"</span>&gt;<span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span></div><div class=\"line\"></div><div class=\"line\">&lt;script type=<span class=\"string\">\"text/javascript\"</span>&gt;</div><div class=\"line\">$(<span class=\"built_in\">document</span>).ready(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">  <span class=\"keyword\">var</span> algoliaSettings = CONFIG.algolia;</div><div class=\"line\">  <span class=\"keyword\">var</span> isAlgoliaSettingsValid = algoliaSettings.applicationID &amp;&amp;</div><div class=\"line\">    algoliaSettings.apiKey &amp;&amp;</div><div class=\"line\">    algoliaSettings.indexName;</div><div class=\"line\"></div><div class=\"line\">  <span class=\"keyword\">if</span> (!isAlgoliaSettingsValid) &#123;</div><div class=\"line\">    <span class=\"built_in\">window</span>.console.error(<span class=\"string\">'Algolia Settings are invalid.'</span>);</div><div class=\"line\">    <span class=\"keyword\">return</span>;</div><div class=\"line\">  &#125;</div><div class=\"line\"></div><div class=\"line\">  <span class=\"keyword\">var</span> search = instantsearch(&#123;</div><div class=\"line\">    appId: algoliaSettings.applicationID,</div><div class=\"line\">    apiKey: algoliaSettings.apiKey,</div><div class=\"line\">    indexName: algoliaSettings.indexName,</div><div class=\"line\">    searchFunction: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">helper</span>) </span>&#123;</div><div class=\"line\">      <span class=\"keyword\">var</span> searchInput = $(<span class=\"string\">'#algolia-search-input'</span>).find(<span class=\"string\">'input'</span>);</div><div class=\"line\"></div><div class=\"line\">      <span class=\"keyword\">if</span> (searchInput.val()) &#123;</div><div class=\"line\">        helper.search();</div><div class=\"line\">      &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">  &#125;);</div><div class=\"line\"></div><div class=\"line\">  <span class=\"comment\">// Registering Widgets</span></div><div class=\"line\">  [</div><div class=\"line\">    instantsearch.widgets.searchBox(&#123;</div><div class=\"line\">      container: <span class=\"string\">'#algolia-search-input'</span>,</div><div class=\"line\">      placeholder: algoliaSettings.labels.input_placeholder</div><div class=\"line\">    &#125;),</div><div class=\"line\"></div><div class=\"line\">    instantsearch.widgets.hits(&#123;</div><div class=\"line\">      container: <span class=\"string\">'#algolia-hits'</span>,</div><div class=\"line\">      hitsPerPage: algoliaSettings.hits.per_page || <span class=\"number\">10</span>,</div><div class=\"line\">      templates: &#123;</div><div class=\"line\">        item: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">data</span>) </span>&#123;</div><div class=\"line\">          <span class=\"keyword\">return</span> (</div><div class=\"line\">            <span class=\"string\">'&lt;a href=\"'</span> + CONFIG.root + data.path + <span class=\"string\">'\" class=\"algolia-hit-item-link\"&gt;'</span> +</div><div class=\"line\">            data._highlightResult.title.value +</div><div class=\"line\">            <span class=\"string\">'&lt;/a&gt;'</span></div><div class=\"line\">          );</div><div class=\"line\">        &#125;,</div><div class=\"line\">        empty: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">data</span>) </span>&#123;</div><div class=\"line\">          <span class=\"keyword\">return</span> (</div><div class=\"line\">            <span class=\"string\">'&lt;div id=\"algolia-hits-empty\"&gt;'</span> +</div><div class=\"line\">            algoliaSettings.labels.hits_empty.replace(<span class=\"regexp\">/\\$\\&#123;query&#125;/</span>, data.query) +</div><div class=\"line\">            <span class=\"string\">'&lt;/div&gt;'</span></div><div class=\"line\">          );</div><div class=\"line\">        &#125;</div><div class=\"line\">      &#125;,</div><div class=\"line\">      cssClasses: &#123;</div><div class=\"line\">        item: <span class=\"string\">'algolia-hit-item'</span></div><div class=\"line\">      &#125;</div><div class=\"line\">    &#125;),</div><div class=\"line\"></div><div class=\"line\">    instantsearch.widgets.stats(&#123;</div><div class=\"line\">      container: <span class=\"string\">'#algolia-stats'</span>,</div><div class=\"line\">      templates: &#123;</div><div class=\"line\">        body: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">data</span>) </span>&#123;</div><div class=\"line\">          <span class=\"keyword\">var</span> stats = algoliaSettings.labels.hits_stats</div><div class=\"line\">            .replace(<span class=\"regexp\">/\\$\\&#123;hits&#125;/</span>, data.nbHits)</div><div class=\"line\">            .replace(<span class=\"regexp\">/\\$\\&#123;time&#125;/</span>, data.processingTimeMS);</div><div class=\"line\">          <span class=\"keyword\">return</span> (</div><div class=\"line\">            stats +</div><div class=\"line\">            <span class=\"string\">'&lt;span class=\"algolia-powered\"&gt;'</span> +</div><div class=\"line\">            <span class=\"string\">'  &lt;img src=\"'</span> + CONFIG.root + <span class=\"string\">'images/algolia_logo.svg\" alt=\"Algolia\" /&gt;'</span> +</div><div class=\"line\">            <span class=\"string\">'&lt;/span&gt;'</span> +</div><div class=\"line\">            <span class=\"string\">'&lt;hr /&gt;'</span></div><div class=\"line\">          );</div><div class=\"line\">        &#125;</div><div class=\"line\">      &#125;</div><div class=\"line\">    &#125;),</div><div class=\"line\"></div><div class=\"line\">    instantsearch.widgets.pagination(&#123;</div><div class=\"line\">      container: <span class=\"string\">'#algolia-pagination'</span>,</div><div class=\"line\">      scrollTo: <span class=\"literal\">false</span>,</div><div class=\"line\">      showFirstLast: <span class=\"literal\">false</span>,</div><div class=\"line\">      labels: &#123;</div><div class=\"line\">        first: <span class=\"string\">'&lt;i class=\"fa fa-angle-double-left\"&gt;&lt;/i&gt;'</span>,</div><div class=\"line\">        last: <span class=\"string\">'&lt;i class=\"fa fa-angle-double-right\"&gt;&lt;/i&gt;'</span>,</div><div class=\"line\">        previous: <span class=\"string\">'&lt;i class=\"fa fa-angle-left\"&gt;&lt;/i&gt;'</span>,</div><div class=\"line\">        next: <span class=\"string\">'&lt;i class=\"fa fa-angle-right\"&gt;&lt;/i&gt;'</span></div><div class=\"line\">      &#125;,</div><div class=\"line\">      cssClasses: &#123;</div><div class=\"line\">        root: <span class=\"string\">'pagination'</span>,</div><div class=\"line\">        item: <span class=\"string\">'pagination-item'</span>,</div><div class=\"line\">        link: <span class=\"string\">'page-number'</span>,</div><div class=\"line\">        active: <span class=\"string\">'current'</span>,</div><div class=\"line\">        disabled: <span class=\"string\">'disabled-item'</span></div><div class=\"line\">      &#125;</div><div class=\"line\">    &#125;)</div><div class=\"line\">  ].forEach(search.addWidget, search);</div><div class=\"line\"></div><div class=\"line\">  search.start();</div><div class=\"line\"></div><div class=\"line\">  $(<span class=\"string\">'.popup-trigger'</span>).on(<span class=\"string\">'click'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">e</span>) </span>&#123;</div><div class=\"line\">    e.stopPropagation();</div><div class=\"line\">    $(<span class=\"string\">'body'</span>).append(<span class=\"string\">'&lt;div class=\"popoverlay\"&gt;'</span>).css(<span class=\"string\">'overflow'</span>, <span class=\"string\">'hidden'</span>);</div><div class=\"line\">    $(<span class=\"string\">'.popup'</span>).toggle();</div><div class=\"line\">    $(<span class=\"string\">'#algolia-search-input'</span>).find(<span class=\"string\">'input'</span>).focus();</div><div class=\"line\">  &#125;);</div><div class=\"line\"></div><div class=\"line\">  $(<span class=\"string\">'.popup-btn-close'</span>).click(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">    $(<span class=\"string\">'.popup'</span>).hide();</div><div class=\"line\">    $(<span class=\"string\">'.popoverlay'</span>).remove();</div><div class=\"line\">    $(<span class=\"string\">'body'</span>).css(<span class=\"string\">'overflow'</span>, <span class=\"string\">''</span>);</div><div class=\"line\">  &#125;);</div><div class=\"line\"></div><div class=\"line\">&#125;);</div><div class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span></div><div class=\"line\"></div><div class=\"line\">&lt;script type=<span class=\"string\">\"text/javascript\"</span>&gt;</div><div class=\"line\">  $(<span class=\"built_in\">document</span>).ready(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">if</span> ( $(<span class=\"string\">'#local-search-input'</span>).size() === <span class=\"number\">0</span>) &#123;</div><div class=\"line\">      <span class=\"keyword\">return</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">// Popup Window;</span></div><div class=\"line\">    <span class=\"keyword\">var</span> isfetched = <span class=\"literal\">false</span>;</div><div class=\"line\">    <span class=\"comment\">// Search DB path;</span></div><div class=\"line\">    <span class=\"keyword\">var</span> search_path = <span class=\"string\">\"search.xml\"</span>;</div><div class=\"line\">    <span class=\"keyword\">if</span> (search_path.length == <span class=\"number\">0</span>) &#123;</div><div class=\"line\">      search_path = <span class=\"string\">\"search.xml\"</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">var</span> path = <span class=\"string\">\"/\"</span> + search_path;</div><div class=\"line\">    <span class=\"comment\">// monitor main search box;</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">proceedsearch</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">      $(<span class=\"string\">\"body\"</span>).append(<span class=\"string\">'&lt;div class=\"popoverlay\"&gt;'</span>).css(<span class=\"string\">'overflow'</span>, <span class=\"string\">'hidden'</span>);</div><div class=\"line\">      $(<span class=\"string\">'.popup'</span>).toggle();</div><div class=\"line\"></div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"comment\">// search function;</span></div><div class=\"line\">    <span class=\"keyword\">var</span> searchFunc = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">path, search_id, content_id</span>) </span>&#123;</div><div class=\"line\"><span class=\"meta\">      'use strict'</span>;</div><div class=\"line\">      $.ajax(&#123;</div><div class=\"line\">        url: path,</div><div class=\"line\">        dataType: <span class=\"string\">\"xml\"</span>,</div><div class=\"line\">        <span class=\"keyword\">async</span>: <span class=\"literal\">true</span>,</div><div class=\"line\">        success: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"> xmlResponse </span>) </span>&#123;</div><div class=\"line\">          <span class=\"comment\">// get the contents from search data</span></div><div class=\"line\">          isfetched = <span class=\"literal\">true</span>;</div><div class=\"line\">          $(<span class=\"string\">'.popup'</span>).detach().appendTo(<span class=\"string\">'.header-inner'</span>);</div><div class=\"line\">          <span class=\"keyword\">var</span> datas = $( <span class=\"string\">\"entry\"</span>, xmlResponse ).map(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">            <span class=\"keyword\">return</span> &#123;</div><div class=\"line\">              title: $( <span class=\"string\">\"title\"</span>, <span class=\"keyword\">this</span> ).text(),</div><div class=\"line\">              content: $(<span class=\"string\">\"content\"</span>,<span class=\"keyword\">this</span>).text(),</div><div class=\"line\">              url: $( <span class=\"string\">\"url\"</span> , <span class=\"keyword\">this</span>).text()</div><div class=\"line\">            &#125;;</div><div class=\"line\">          &#125;).get();</div><div class=\"line\">          <span class=\"keyword\">var</span> $input = <span class=\"built_in\">document</span>.getElementById(search_id);</div><div class=\"line\">          <span class=\"keyword\">var</span> $resultContent = <span class=\"built_in\">document</span>.getElementById(content_id);</div><div class=\"line\">          $input.addEventListener(<span class=\"string\">'input'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">            <span class=\"keyword\">var</span> matchcounts = <span class=\"number\">0</span>;</div><div class=\"line\">            <span class=\"keyword\">var</span> str=<span class=\"string\">'&lt;ul class=\\\"search-result-list\\\"&gt;'</span>;</div><div class=\"line\">            <span class=\"keyword\">var</span> keywords = <span class=\"keyword\">this</span>.value.trim().toLowerCase().split(<span class=\"regexp\">/[\\s\\-]+/</span>);</div><div class=\"line\">            $resultContent.innerHTML = <span class=\"string\">\"\"</span>;</div><div class=\"line\">            <span class=\"keyword\">if</span> (<span class=\"keyword\">this</span>.value.trim().length &gt; <span class=\"number\">1</span>) &#123;</div><div class=\"line\">              <span class=\"comment\">// perform local searching</span></div><div class=\"line\">              datas.forEach(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">data</span>) </span>&#123;</div><div class=\"line\">                <span class=\"keyword\">var</span> isMatch = <span class=\"literal\">true</span>;</div><div class=\"line\">                <span class=\"keyword\">var</span> content_index = [];</div><div class=\"line\">                <span class=\"keyword\">var</span> data_title = data.title.trim().toLowerCase();</div><div class=\"line\">                <span class=\"keyword\">var</span> data_content = data.content.trim().replace(<span class=\"regexp\">/&lt;[^&gt;]+&gt;/g</span>,<span class=\"string\">\"\"</span>).toLowerCase();</div><div class=\"line\">                <span class=\"keyword\">var</span> data_url = data.url;</div><div class=\"line\">                <span class=\"keyword\">var</span> index_title = <span class=\"number\">-1</span>;</div><div class=\"line\">                <span class=\"keyword\">var</span> index_content = <span class=\"number\">-1</span>;</div><div class=\"line\">                <span class=\"keyword\">var</span> first_occur = <span class=\"number\">-1</span>;</div><div class=\"line\">                <span class=\"comment\">// only match artiles with not empty titles and contents</span></div><div class=\"line\">                <span class=\"keyword\">if</span>(data_title != <span class=\"string\">''</span> &amp;&amp; data_content != <span class=\"string\">''</span>) &#123;</div><div class=\"line\">                  keywords.forEach(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">keyword, i</span>) </span>&#123;</div><div class=\"line\">                    index_title = data_title.indexOf(keyword);</div><div class=\"line\">                    index_content = data_content.indexOf(keyword);</div><div class=\"line\">                    <span class=\"keyword\">if</span>( index_title &lt; <span class=\"number\">0</span> &amp;&amp; index_content &lt; <span class=\"number\">0</span> )&#123;</div><div class=\"line\">                      isMatch = <span class=\"literal\">false</span>;</div><div class=\"line\">                    &#125; <span class=\"keyword\">else</span> &#123;</div><div class=\"line\">                      <span class=\"keyword\">if</span> (index_content &lt; <span class=\"number\">0</span>) &#123;</div><div class=\"line\">                        index_content = <span class=\"number\">0</span>;</div><div class=\"line\">                      &#125;</div><div class=\"line\">                      <span class=\"keyword\">if</span> (i == <span class=\"number\">0</span>) &#123;</div><div class=\"line\">                        first_occur = index_content;</div><div class=\"line\">                      &#125;</div><div class=\"line\">                    &#125;</div><div class=\"line\">                  &#125;);</div><div class=\"line\">                &#125;</div><div class=\"line\">                <span class=\"comment\">// show search results</span></div><div class=\"line\">                <span class=\"keyword\">if</span> (isMatch) &#123;</div><div class=\"line\">                  matchcounts += <span class=\"number\">1</span>;</div><div class=\"line\">                  str += <span class=\"string\">\"&lt;li&gt;&lt;a href='\"</span>+ data_url +<span class=\"string\">\"' class='search-result-title'&gt;\"</span>+ data_title +<span class=\"string\">\"&lt;/a&gt;\"</span>;</div><div class=\"line\">                  <span class=\"keyword\">var</span> content = data.content.trim().replace(<span class=\"regexp\">/&lt;[^&gt;]+&gt;/g</span>,<span class=\"string\">\"\"</span>);</div><div class=\"line\">                  <span class=\"keyword\">if</span> (first_occur &gt;= <span class=\"number\">0</span>) &#123;</div><div class=\"line\">                    <span class=\"comment\">// cut out 100 characters</span></div><div class=\"line\">                    <span class=\"keyword\">var</span> start = first_occur - <span class=\"number\">20</span>;</div><div class=\"line\">                    <span class=\"keyword\">var</span> end = first_occur + <span class=\"number\">80</span>;</div><div class=\"line\">                    <span class=\"keyword\">if</span>(start &lt; <span class=\"number\">0</span>)&#123;</div><div class=\"line\">                      start = <span class=\"number\">0</span>;</div><div class=\"line\">                    &#125;</div><div class=\"line\">                    <span class=\"keyword\">if</span>(start == <span class=\"number\">0</span>)&#123;</div><div class=\"line\">                      end = <span class=\"number\">50</span>;</div><div class=\"line\">                    &#125;</div><div class=\"line\">                    <span class=\"keyword\">if</span>(end &gt; content.length)&#123;</div><div class=\"line\">                      end = content.length;</div><div class=\"line\">                    &#125;</div><div class=\"line\">                    <span class=\"keyword\">var</span> match_content = content.substring(start, end);</div><div class=\"line\">                    <span class=\"comment\">// highlight all keywords</span></div><div class=\"line\">                    keywords.forEach(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">keyword</span>)</span>&#123;</div><div class=\"line\">                      <span class=\"keyword\">var</span> regS = <span class=\"keyword\">new</span> <span class=\"built_in\">RegExp</span>(keyword, <span class=\"string\">\"gi\"</span>);</div><div class=\"line\">                      match_content = match_content.replace(regS, <span class=\"string\">\"&lt;b class=\\\"search-keyword\\\"&gt;\"</span>+keyword+<span class=\"string\">\"&lt;/b&gt;\"</span>);</div><div class=\"line\">                    &#125;);</div><div class=\"line\"></div><div class=\"line\">                    str += <span class=\"string\">\"&lt;p class=\\\"search-result\\\"&gt;\"</span> + match_content +<span class=\"string\">\"...&lt;/p&gt;\"</span></div><div class=\"line\">                  &#125;</div><div class=\"line\">                  str += <span class=\"string\">\"&lt;/li&gt;\"</span>;</div><div class=\"line\">                &#125;</div><div class=\"line\">              &#125;)&#125;;</div><div class=\"line\">            str += <span class=\"string\">\"&lt;/ul&gt;\"</span>;</div><div class=\"line\">            <span class=\"keyword\">if</span> (matchcounts == <span class=\"number\">0</span>) &#123; str = <span class=\"string\">'&lt;div id=\"no-result\"&gt;&lt;i class=\"fa fa-frown-o fa-5x\" /&gt;&lt;/div&gt;'</span> &#125;</div><div class=\"line\">            <span class=\"keyword\">if</span> (keywords == <span class=\"string\">\"\"</span>) &#123; str = <span class=\"string\">'&lt;div id=\"no-result\"&gt;&lt;i class=\"fa fa-search fa-5x\" /&gt;&lt;/div&gt;'</span> &#125;</div><div class=\"line\">            $resultContent.innerHTML = str;</div><div class=\"line\">          &#125;);</div><div class=\"line\">          proceedsearch();</div><div class=\"line\">        &#125;</div><div class=\"line\">      &#125;);&#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">// handle and trigger popup window;</span></div><div class=\"line\">    $(<span class=\"string\">'.popup-trigger'</span>).mousedown(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">e</span>) </span>&#123;</div><div class=\"line\">      e.stopPropagation();</div><div class=\"line\">      <span class=\"keyword\">if</span> (isfetched == <span class=\"literal\">false</span>) &#123;</div><div class=\"line\">        searchFunc(path, <span class=\"string\">'local-search-input'</span>, <span class=\"string\">'local-search-result'</span>);</div><div class=\"line\">      &#125; <span class=\"keyword\">else</span> &#123;</div><div class=\"line\">        proceedsearch();</div><div class=\"line\">      &#125;;</div><div class=\"line\"></div><div class=\"line\">    &#125;);</div><div class=\"line\"></div><div class=\"line\">    $(<span class=\"string\">'.popup-btn-close'</span>).click(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">e</span>)</span>&#123;</div><div class=\"line\">      $(<span class=\"string\">'.popup'</span>).hide();</div><div class=\"line\">      $(<span class=\"string\">\".popoverlay\"</span>).remove();</div><div class=\"line\">      $(<span class=\"string\">'body'</span>).css(<span class=\"string\">'overflow'</span>, <span class=\"string\">''</span>);</div><div class=\"line\">    &#125;);</div><div class=\"line\">    $(<span class=\"string\">'.popup'</span>).click(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">e</span>)</span>&#123;</div><div class=\"line\">      e.stopPropagation();</div><div class=\"line\">    &#125;);</div><div class=\"line\">  &#125;);</div><div class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span></div></pre></td></tr></table></figure></p>\n<blockquote>\n<p>Next中可以新建一个js文件，<code>myalgolia.js</code>存放上述代码，然后存入主题的<code>source/js/src</code>中，然后修改主题的<code>layout/_layout.swig</code>,添加如下内容：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">&#123;% if theme.algolia %&#125;</div><div class=\"line\">  &#123;% include &apos;_scripts/algolia.swig&apos; %&#125;</div><div class=\"line\">&#123;% endif %&#125;</div></pre></td></tr></table></figure></p>\n<p>然后在<code>layout/_scripts</code>中新建<code>algolia.swig</code>，内容如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">&#123;%</div><div class=\"line\">  set js_algolia = [</div><div class=\"line\">    &apos;src/myalgolia.js&apos;</div><div class=\"line\">  ]</div><div class=\"line\">%&#125;</div><div class=\"line\"></div><div class=\"line\">&#123;% for common in js_algolia %&#125;</div><div class=\"line\">  &lt;script type=&quot;text/javascript&quot; src=&quot;&#123;&#123; url_for(theme.js) &#125;&#125;/&#123;&#123; common &#125;&#125;?v=&#123;&#123; theme.version &#125;&#125;&quot;&gt;&lt;/script&gt;</div><div class=\"line\">&#123;% endfor %&#125;</div><div class=\"line\">  &lt;script src=&quot;http://cdn.bootcss.com/instantsearch.js/1.5.1/instantsearch.js&quot;&gt;&lt;/script&gt;</div></pre></td></tr></table></figure></p>\n</blockquote>\n<p>6、确保要搜索页包含如下CSS代码（可以单独建立一个.styl文件，然后在整体css的styl文件中加入，注意确保生成正确，必要时可以执行hexo clean）<br><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div><div class=\"line\">106</div><div class=\"line\">107</div><div class=\"line\">108</div><div class=\"line\">109</div><div class=\"line\">110</div><div class=\"line\">111</div><div class=\"line\">112</div><div class=\"line\">113</div><div class=\"line\">114</div><div class=\"line\">115</div><div class=\"line\">116</div><div class=\"line\">117</div><div class=\"line\">118</div><div class=\"line\">119</div><div class=\"line\">120</div><div class=\"line\">121</div><div class=\"line\">122</div><div class=\"line\">123</div><div class=\"line\">124</div><div class=\"line\">125</div><div class=\"line\">126</div><div class=\"line\">127</div><div class=\"line\">128</div><div class=\"line\">129</div><div class=\"line\">130</div><div class=\"line\">131</div><div class=\"line\">132</div><div class=\"line\">133</div><div class=\"line\">134</div><div class=\"line\">135</div><div class=\"line\">136</div><div class=\"line\">137</div><div class=\"line\">138</div><div class=\"line\">139</div><div class=\"line\">140</div><div class=\"line\">141</div><div class=\"line\">142</div><div class=\"line\">143</div><div class=\"line\">144</div><div class=\"line\">145</div><div class=\"line\">146</div><div class=\"line\">147</div><div class=\"line\">148</div><div class=\"line\">149</div><div class=\"line\">150</div><div class=\"line\">151</div><div class=\"line\">152</div><div class=\"line\">153</div><div class=\"line\">154</div><div class=\"line\">155</div><div class=\"line\">156</div><div class=\"line\">157</div><div class=\"line\">158</div><div class=\"line\">159</div><div class=\"line\">160</div><div class=\"line\">161</div><div class=\"line\">162</div><div class=\"line\">163</div><div class=\"line\">164</div><div class=\"line\">165</div><div class=\"line\">166</div><div class=\"line\">167</div><div class=\"line\">168</div><div class=\"line\">169</div><div class=\"line\">170</div><div class=\"line\">171</div><div class=\"line\">172</div><div class=\"line\">173</div><div class=\"line\">174</div><div class=\"line\">175</div><div class=\"line\">176</div><div class=\"line\">177</div><div class=\"line\">178</div><div class=\"line\">179</div><div class=\"line\">180</div><div class=\"line\">181</div><div class=\"line\">182</div><div class=\"line\">183</div><div class=\"line\">184</div><div class=\"line\">185</div><div class=\"line\">186</div><div class=\"line\">187</div><div class=\"line\">188</div><div class=\"line\">189</div><div class=\"line\">190</div><div class=\"line\">191</div><div class=\"line\">192</div><div class=\"line\">193</div><div class=\"line\">194</div><div class=\"line\">195</div><div class=\"line\">196</div><div class=\"line\">197</div><div class=\"line\">198</div><div class=\"line\">199</div><div class=\"line\">200</div><div class=\"line\">201</div><div class=\"line\">202</div><div class=\"line\">203</div><div class=\"line\">204</div><div class=\"line\">205</div><div class=\"line\">206</div><div class=\"line\">207</div><div class=\"line\">208</div><div class=\"line\">209</div><div class=\"line\">210</div><div class=\"line\">211</div><div class=\"line\">212</div><div class=\"line\">213</div><div class=\"line\">214</div><div class=\"line\">215</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-tag\">ul</span><span class=\"selector-class\">.search-result-list</span> &#123;</div><div class=\"line\">  <span class=\"attribute\">padding-left</span>: <span class=\"number\">0px</span>;</div><div class=\"line\">  <span class=\"attribute\">margin</span>: <span class=\"number\">0px</span> <span class=\"number\">5px</span> <span class=\"number\">0px</span> <span class=\"number\">8px</span>;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"selector-tag\">p</span><span class=\"selector-class\">.search-result</span> &#123;</div><div class=\"line\">  <span class=\"attribute\">border-bottom</span>: <span class=\"number\">1px</span> dashed <span class=\"number\">#ccc</span>;</div><div class=\"line\">  <span class=\"attribute\">padding</span>: <span class=\"number\">5px</span> <span class=\"number\">0</span>;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"selector-tag\">a</span><span class=\"selector-class\">.search-result-title</span> &#123;</div><div class=\"line\">  <span class=\"attribute\">font-weight</span>: bold;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"selector-tag\">a</span><span class=\"selector-class\">.search-result</span> &#123;</div><div class=\"line\">  <span class=\"attribute\">border-bottom</span>: transparent;</div><div class=\"line\">  <span class=\"attribute\">display</span>: block;</div><div class=\"line\">  <span class=\"attribute\">white-space</span>: nowrap;</div><div class=\"line\">  <span class=\"attribute\">overflow</span>: hidden;</div><div class=\"line\">  <span class=\"attribute\">text-overflow</span>: ellipsis;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"selector-class\">.search-keyword</span> &#123;</div><div class=\"line\">  <span class=\"attribute\">border-bottom</span>: <span class=\"number\">1px</span> dashed <span class=\"number\">#4088b8</span>;</div><div class=\"line\">  <span class=\"attribute\">font-weight</span>: bold;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"selector-id\">#local-search-result</span> &#123;</div><div class=\"line\">  <span class=\"attribute\">height</span>: <span class=\"number\">90%</span>;</div><div class=\"line\">  <span class=\"attribute\">overflow</span>: auto;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"selector-class\">.popup</span> &#123;</div><div class=\"line\">  <span class=\"attribute\">display</span>: none;</div><div class=\"line\">  <span class=\"attribute\">position</span>: fixed;</div><div class=\"line\">  <span class=\"attribute\">top</span>: <span class=\"number\">10%</span>;</div><div class=\"line\">  <span class=\"attribute\">left</span>: <span class=\"number\">50%</span>;</div><div class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">700px</span>;</div><div class=\"line\">  <span class=\"attribute\">height</span>: <span class=\"number\">80%</span>;</div><div class=\"line\">  <span class=\"attribute\">margin-left</span>: -<span class=\"number\">350px</span>;</div><div class=\"line\">  <span class=\"attribute\">padding</span>: <span class=\"number\">3px</span> <span class=\"number\">0</span> <span class=\"number\">0</span> <span class=\"number\">10px</span>;</div><div class=\"line\">  <span class=\"attribute\">background</span>: <span class=\"number\">#fff</span>;</div><div class=\"line\">  <span class=\"attribute\">color</span>: <span class=\"number\">#333</span>;</div><div class=\"line\">  <span class=\"attribute\">z-index</span>: <span class=\"number\">9999</span>;</div><div class=\"line\">  <span class=\"attribute\">border-radius</span>: <span class=\"number\">5px</span>;</div><div class=\"line\">&#125;</div><div class=\"line\">@<span class=\"keyword\">media</span> (max-width: <span class=\"number\">767px</span>) &#123;</div><div class=\"line\">  <span class=\"selector-class\">.popup</span> &#123;</div><div class=\"line\">    <span class=\"attribute\">padding</span>: <span class=\"number\">3px</span>;</div><div class=\"line\">    <span class=\"attribute\">top</span>: <span class=\"number\">0</span>;</div><div class=\"line\">    <span class=\"attribute\">left</span>: <span class=\"number\">0</span>;</div><div class=\"line\">    <span class=\"attribute\">margin</span>: <span class=\"number\">0</span>;</div><div class=\"line\">    <span class=\"attribute\">width</span>: <span class=\"number\">100%</span>;</div><div class=\"line\">    <span class=\"attribute\">height</span>: <span class=\"number\">100%</span>;</div><div class=\"line\">    <span class=\"attribute\">border-radius</span>: <span class=\"number\">0px</span>;</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"selector-class\">.popoverlay</span> &#123;</div><div class=\"line\">  <span class=\"attribute\">position</span>: fixed;</div><div class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">100%</span>;</div><div class=\"line\">  <span class=\"attribute\">height</span>: <span class=\"number\">100%</span>;</div><div class=\"line\">  <span class=\"attribute\">top</span>: <span class=\"number\">0px</span>;</div><div class=\"line\">  <span class=\"attribute\">left</span>: <span class=\"number\">0px</span>;</div><div class=\"line\">  <span class=\"attribute\">z-index</span>: <span class=\"number\">2080</span>;</div><div class=\"line\">  <span class=\"attribute\">background-color</span>: <span class=\"built_in\">rgba</span>(0,0,0,0.3);</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"selector-id\">#local-search-input</span> &#123;</div><div class=\"line\">  <span class=\"attribute\">margin-bottom</span>: <span class=\"number\">10px</span>;</div><div class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">50%</span>;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"selector-class\">.popup-btn-close</span> &#123;</div><div class=\"line\">  <span class=\"attribute\">position</span>: absolute;</div><div class=\"line\">  <span class=\"attribute\">top</span>: <span class=\"number\">6px</span>;</div><div class=\"line\">  <span class=\"attribute\">right</span>: <span class=\"number\">14px</span>;</div><div class=\"line\">  <span class=\"attribute\">color</span>: <span class=\"number\">#4ebd79</span>;</div><div class=\"line\">  <span class=\"attribute\">font-size</span>: <span class=\"number\">14px</span>;</div><div class=\"line\">  <span class=\"attribute\">font-weight</span>: bold;</div><div class=\"line\">  <span class=\"attribute\">text-transform</span>: uppercase;</div><div class=\"line\">  <span class=\"attribute\">cursor</span>: pointer;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"selector-id\">#no-result</span> &#123;</div><div class=\"line\">  <span class=\"attribute\">position</span>: absolute;</div><div class=\"line\">  <span class=\"attribute\">left</span>: <span class=\"number\">44%</span>;</div><div class=\"line\">  <span class=\"attribute\">top</span>: <span class=\"number\">42%</span>;</div><div class=\"line\">  <span class=\"attribute\">color</span>: <span class=\"number\">#ccc</span>;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"selector-class\">.busuanzi-count</span><span class=\"selector-pseudo\">:before</span> &#123;</div><div class=\"line\">  <span class=\"attribute\">content</span>: <span class=\"string\">\" \"</span>;</div><div class=\"line\">  <span class=\"attribute\">float</span>: left;</div><div class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">260px</span>;</div><div class=\"line\">  <span class=\"attribute\">min-height</span>: <span class=\"number\">25px</span>;</div><div class=\"line\">&#125;</div><div class=\"line\">@<span class=\"keyword\">media</span> (min-width: <span class=\"number\">768px</span>) and (max-width: <span class=\"number\">991px</span>) &#123;</div><div class=\"line\">  <span class=\"selector-class\">.busuanzi-count</span> &#123;</div><div class=\"line\">    <span class=\"attribute\">width</span>: auto;</div><div class=\"line\">  &#125;</div><div class=\"line\">  <span class=\"selector-class\">.busuanzi-count</span><span class=\"selector-pseudo\">:before</span> &#123;</div><div class=\"line\">    <span class=\"attribute\">display</span>: none;</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div><div class=\"line\">@<span class=\"keyword\">media</span> (max-width: <span class=\"number\">767px</span>) &#123;</div><div class=\"line\">  <span class=\"selector-class\">.busuanzi-count</span> &#123;</div><div class=\"line\">    <span class=\"attribute\">width</span>: auto;</div><div class=\"line\">  &#125;</div><div class=\"line\">  <span class=\"selector-class\">.busuanzi-count</span><span class=\"selector-pseudo\">:before</span> &#123;</div><div class=\"line\">    <span class=\"attribute\">display</span>: none;</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"selector-class\">.site-uv</span>,</div><div class=\"line\"><span class=\"selector-class\">.site-pv</span>,</div><div class=\"line\"><span class=\"selector-class\">.page-pv</span> &#123;</div><div class=\"line\">  <span class=\"attribute\">display</span>: inline-block;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"selector-class\">.site-uv</span> <span class=\"selector-class\">.busuanzi-value</span>,</div><div class=\"line\"><span class=\"selector-class\">.site-pv</span> <span class=\"selector-class\">.busuanzi-value</span>,</div><div class=\"line\"><span class=\"selector-class\">.page-pv</span> <span class=\"selector-class\">.busuanzi-value</span> &#123;</div><div class=\"line\">  <span class=\"attribute\">margin</span>: <span class=\"number\">0</span> <span class=\"number\">5px</span>;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"selector-class\">.site-uv</span> &#123;</div><div class=\"line\">  <span class=\"attribute\">margin-right</span>: <span class=\"number\">10px</span>;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"selector-class\">.site-uv</span><span class=\"selector-pseudo\">::after</span> &#123;</div><div class=\"line\">  <span class=\"attribute\">content</span>: <span class=\"string\">\"|\"</span>;</div><div class=\"line\">  <span class=\"attribute\">padding-left</span>: <span class=\"number\">10px</span>;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"selector-class\">.algolia-popup</span> &#123;</div><div class=\"line\">  <span class=\"attribute\">overflow</span>: hidden;</div><div class=\"line\">  <span class=\"attribute\">padding</span>: <span class=\"number\">0</span>;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"selector-class\">.algolia-popup</span> <span class=\"selector-class\">.popup-btn-close</span> &#123;</div><div class=\"line\">  <span class=\"attribute\">padding-left</span>: <span class=\"number\">15px</span>;</div><div class=\"line\">  <span class=\"attribute\">border-left</span>: <span class=\"number\">1px</span> solid <span class=\"number\">#eee</span>;</div><div class=\"line\">  <span class=\"attribute\">top</span>: <span class=\"number\">10px</span>;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"selector-class\">.algolia-popup</span> <span class=\"selector-class\">.popup-btn-close</span> <span class=\"selector-class\">.fa</span> &#123;</div><div class=\"line\">  <span class=\"attribute\">color</span>: <span class=\"number\">#999</span>;</div><div class=\"line\">  <span class=\"attribute\">font-size</span>: <span class=\"number\">18px</span>;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"selector-class\">.algolia-popup</span> <span class=\"selector-class\">.popup-btn-close</span><span class=\"selector-pseudo\">:hover</span> <span class=\"selector-class\">.fa</span> &#123;</div><div class=\"line\">  <span class=\"attribute\">color</span>: <span class=\"number\">#222</span>;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"selector-class\">.algolia-search</span> &#123;</div><div class=\"line\">  <span class=\"attribute\">padding</span>: <span class=\"number\">10px</span> <span class=\"number\">15px</span> <span class=\"number\">5px</span>;</div><div class=\"line\">  <span class=\"attribute\">max-height</span>: <span class=\"number\">50px</span>;</div><div class=\"line\">  <span class=\"attribute\">border-bottom</span>: <span class=\"number\">1px</span> solid <span class=\"number\">#ccc</span>;</div><div class=\"line\">  <span class=\"attribute\">background</span>: <span class=\"number\">#f5f5f5</span>;</div><div class=\"line\">  <span class=\"attribute\">border-top-left-radius</span>: <span class=\"number\">5px</span>;</div><div class=\"line\">  <span class=\"attribute\">border-top-right-radius</span>: <span class=\"number\">5px</span>;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"selector-class\">.algolia-search-input-icon</span> &#123;</div><div class=\"line\">  <span class=\"attribute\">display</span>: inline-block;</div><div class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">20px</span>;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"selector-class\">.algolia-search-input-icon</span> <span class=\"selector-class\">.fa</span> &#123;</div><div class=\"line\">  <span class=\"attribute\">font-size</span>: <span class=\"number\">18px</span>;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"selector-class\">.algolia-search-input</span> &#123;</div><div class=\"line\">  <span class=\"attribute\">display</span>: inline-block;</div><div class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"built_in\">calc</span>(90% - 20px);</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"selector-class\">.algolia-search-input</span> <span class=\"selector-tag\">input</span> &#123;</div><div class=\"line\">  <span class=\"attribute\">padding</span>: <span class=\"number\">5px</span> <span class=\"number\">0</span>;</div><div class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">100%</span>;</div><div class=\"line\">  <span class=\"attribute\">outline</span>: none;</div><div class=\"line\">  <span class=\"attribute\">border</span>: none;</div><div class=\"line\">  <span class=\"attribute\">background</span>: transparent;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"selector-class\">.algolia-powered</span> &#123;</div><div class=\"line\">  <span class=\"attribute\">float</span>: right;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"selector-class\">.algolia-powered</span> <span class=\"selector-tag\">img</span> &#123;</div><div class=\"line\">  <span class=\"attribute\">display</span>: inline-block;</div><div class=\"line\">  <span class=\"attribute\">height</span>: <span class=\"number\">18px</span>;</div><div class=\"line\">  <span class=\"attribute\">vertical-align</span>: middle;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"selector-class\">.algolia-results</span> &#123;</div><div class=\"line\">  <span class=\"attribute\">position</span>: relative;</div><div class=\"line\">  <span class=\"attribute\">overflow</span>: auto;</div><div class=\"line\">  <span class=\"attribute\">padding</span>: <span class=\"number\">10px</span> <span class=\"number\">30px</span>;</div><div class=\"line\">  <span class=\"attribute\">height</span>: <span class=\"built_in\">calc</span>(100% - 50px);</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"selector-class\">.algolia-results</span> <span class=\"selector-tag\">hr</span> &#123;</div><div class=\"line\">  <span class=\"attribute\">margin</span>: <span class=\"number\">10px</span> <span class=\"number\">0</span>;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"selector-class\">.algolia-results</span> <span class=\"selector-class\">.highlight</span> &#123;</div><div class=\"line\">  <span class=\"attribute\">font-style</span>: normal;</div><div class=\"line\">  <span class=\"attribute\">margin</span>: <span class=\"number\">0</span>;</div><div class=\"line\">  <span class=\"attribute\">padding</span>: <span class=\"number\">0</span> <span class=\"number\">2px</span>;</div><div class=\"line\">  <span class=\"attribute\">font-size</span>: inherit;</div><div class=\"line\">  <span class=\"attribute\">color</span>: <span class=\"number\">#f00</span>;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"selector-class\">.algolia-hits</span> &#123;</div><div class=\"line\">  <span class=\"attribute\">margin-top</span>: <span class=\"number\">20px</span>;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"selector-class\">.algolia-hit-item</span> &#123;</div><div class=\"line\">  <span class=\"attribute\">margin</span>: <span class=\"number\">15px</span> <span class=\"number\">0</span>;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"selector-class\">.algolia-hit-item-link</span> &#123;</div><div class=\"line\">  <span class=\"attribute\">display</span>: block;</div><div class=\"line\">  <span class=\"attribute\">border-bottom</span>: <span class=\"number\">1px</span> dashed <span class=\"number\">#ccc</span>;</div><div class=\"line\">  <span class=\"attribute\">transition-duration</span>: <span class=\"number\">0.2s</span>;</div><div class=\"line\">  <span class=\"attribute\">transition-timing-function</span>: ease-in-out;</div><div class=\"line\">  <span class=\"attribute\">transition-delay</span>: <span class=\"number\">0s</span>;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"selector-class\">.algolia-pagination</span> <span class=\"selector-class\">.pagination</span> &#123;</div><div class=\"line\">  <span class=\"attribute\">margin-top</span>: <span class=\"number\">40px</span>;</div><div class=\"line\">  <span class=\"attribute\">border-top</span>: none;</div><div class=\"line\">  <span class=\"attribute\">padding</span>: <span class=\"number\">0</span>;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"selector-class\">.algolia-pagination</span> <span class=\"selector-class\">.pagination-item</span> &#123;</div><div class=\"line\">  <span class=\"attribute\">display</span>: inline-block;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"selector-class\">.algolia-pagination</span> <span class=\"selector-class\">.page-number</span> &#123;</div><div class=\"line\">  <span class=\"attribute\">border-top</span>: none;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"selector-class\">.algolia-pagination</span> <span class=\"selector-class\">.page-number</span><span class=\"selector-pseudo\">:hover</span> &#123;</div><div class=\"line\">  <span class=\"attribute\">border-bottom</span>: <span class=\"number\">1px</span> solid <span class=\"number\">#222</span>;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"selector-class\">.algolia-pagination</span> <span class=\"selector-class\">.disabled-item</span> &#123;</div><div class=\"line\">  <span class=\"attribute\">visibility</span>: hidden;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>7、将如下图片放入主题的<code>source/images</code>下<br><img src=\"/20160606/hexo-next-use-algolia/algolia_logo.svg\" alt=\"algolia_logo.svg\" title=\"\"></p>\n<h2 id=\"大功告成-，可以参考本站搜索功能。\"><a href=\"#大功告成-，可以参考本站搜索功能。\" class=\"headerlink\" title=\"大功告成~，可以参考本站搜索功能。\"></a>大功告成~，可以参考本站搜索功能。</h2><p>ps：最后再说一句，algolia最开始会给你14天的高级试用功能，结束之后会停止工作，你需要手动切换到免费模式下才能继续。</p>\n<blockquote>\n<p>写作时参考<a href=\"http://kuwoku.com/2016/05/30/Hexo%E9%9B%86%E6%88%90Algolia%E6%90%9C%E7%B4%A2%E6%8F%92%E4%BB%B6/\" target=\"_blank\" rel=\"external\">《Hexo集成Algolia搜索插件》</a></p>\n</blockquote>\n","excerpt":"<p>Swiftype悄无声息的就取消了免费模式，得赶紧找个下家了，现在来推一个新的第三方搜索—-algolia。<br>","more":"</p>\n<h2 id=\"官网注册\"><a href=\"#官网注册\" class=\"headerlink\" title=\"官网注册\"></a>官网注册</h2><p>1、 <a href=\"http://www.algolia.com\">官网地址</a>注册帐号。<br>2、 新建一个INDEX如图。<br><img src=\"/20160606/hexo-next-use-algolia/algolia-index.png\" alt=\"algolia-index.png\" title=\"\"><br>3、 来到<a href=\"https://www.algolia.com/api-keys\">API-KEYS</a>页面，上面有后面需要的信息（记得还有上面的INDEX名）。<br><img src=\"/20160606/hexo-next-use-algolia/algolia-api-keys.png\" alt=\"algolia-api-keys.png\" title=\"\"></p>\n<h2 id=\"第二步：上传数据到Algolia\"><a href=\"#第二步：上传数据到Algolia\" class=\"headerlink\" title=\"第二步：上传数据到Algolia\"></a>第二步：上传数据到Algolia</h2><p>1、 在Hexo主目录下执行<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm install hexo-algolia --save</div></pre></td></tr></table></figure></p>\n<p>2、 在根目录的_config.yml中加入如下配置，使用前边注册成果的数据<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">algolia:</div><div class=\"line\">  applicationID: &apos;your applicationID&apos;</div><div class=\"line\">  apiKey: &apos;your apiKey&apos;</div><div class=\"line\">  adminApiKey: &apos;your adminApiKey&apos;</div><div class=\"line\">  indexName: &apos;your indexName&apos;</div><div class=\"line\">  chunkSize: 5000</div></pre></td></tr></table></figure></p>\n<p>3、 接着执行，确保提交成功提示<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">hexo algolia</div></pre></td></tr></table></figure></p>\n<h2 id=\"第三步：修改Hexo主题集成Algolia\"><a href=\"#第三步：修改Hexo主题集成Algolia\" class=\"headerlink\" title=\"第三步：修改Hexo主题集成Algolia\"></a>第三步：修改Hexo主题集成Algolia</h2><p>1、 确保在head.swig文件中加入如下配置，注意改成自己的<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;script type=&quot;text/javascript&quot; id=&quot;hexo.configuration&quot;&gt;</div><div class=\"line\">  var CONFIG = &#123;</div><div class=\"line\">    root: &apos;/&apos;,</div><div class=\"line\">    algolia: &#123;</div><div class=\"line\">          applicationID: &apos;your applicationID&apos;,</div><div class=\"line\">          apiKey: &apos;your apiKey&apos;,</div><div class=\"line\">          indexName: &apos;&apos;your indexName&apos;,</div><div class=\"line\">          hits: &#123;&quot;per_page&quot;:10&#125;,</div><div class=\"line\">          labels: &#123;&quot;input_placeholder&quot;:&quot;搜索...&quot;,&quot;hits_empty&quot;:&quot;未发现与 「$&#123;query&#125;」相关的内容&quot;,&quot;hits_stats&quot;:&quot;$&#123;hits&#125; 条相关条目，使用了 $&#123;time&#125; 毫秒&quot;&#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">  &#125;;</div><div class=\"line\">&lt;/script&gt;</div></pre></td></tr></table></figure></p>\n<p>2、 在主题配置文件_config.yml中加入,作为开启关闭的开关<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"># Algolia</div><div class=\"line\">algolia: true</div></pre></td></tr></table></figure></p>\n<blockquote>\n<p>以Next为例，修改主题目录下<code>layout/search.swig</code>为：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">&#123;% if theme.swiftype_key %&#125;</div><div class=\"line\">  &#123;% include &apos;search/swiftype.swig&apos; %&#125;</div><div class=\"line\">&#123;% elseif theme.tinysou_Key %&#125;</div><div class=\"line\">  &#123;% include &apos;search/tinysou.swig&apos; %&#125;</div><div class=\"line\">&#123;% elseif config.search.path %&#125;</div><div class=\"line\">  &#123;% include &apos;search/localsearch.swig&apos; %&#125;</div><div class=\"line\">&#123;% elseif theme.algolia %&#125;</div><div class=\"line\">  &#123;% include &apos;search/algolia.swig&apos; %&#125;</div><div class=\"line\">&#123;% endif %&#125;</div></pre></td></tr></table></figure></p>\n</blockquote>\n<p>3、 在要搜索的页面加入下面html,Next主题中在<code>layout/_partials/search/</code>中添加algolia.swig文件，写入如下内容：<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"site-search\"</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"algolia-popup popup\"</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"algolia-search\"</span>&gt;</span></div><div class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"algolia-search-input-icon\"</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">i</span> <span class=\"attr\">class</span>=<span class=\"string\">\"fa fa-search\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">i</span>&gt;</span></div><div class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"algolia-search-input\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"algolia-search-input\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"algolia-results\"</span>&gt;</span></div><div class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"algolia-stats\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"algolia-hits\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"algolia-pagination\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"algolia-pagination\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">class</span>=<span class=\"string\">\"popup-btn-close\"</span>&gt;</span></div><div class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">i</span> <span class=\"attr\">class</span>=<span class=\"string\">\"fa fa-times-circle\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">i</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div></pre></td></tr></table></figure></p>\n<p>4、 触发搜索的HTML节点中加入class名为<code>popup-trigger</code>的标签，如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;a href=&quot;#&quot; class=&quot;popup-trigger&quot;&gt;</div></pre></td></tr></table></figure></p>\n<blockquote>\n<p>Next为例：在<code>layout/_partials/header.swig</code>修改如下（注释位置）：<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">nav</span> <span class=\"attr\">class</span>=<span class=\"string\">\"site-nav\"</span>&gt;</span></div><div class=\"line\">  &#123;% set hasSearch = theme.swiftype_key || theme.tinysou_Key || config.search || theme.algolia %&#125;</div><div class=\"line\">  <span class=\"comment\">&lt;!-- 添加algolia判断条件 --&gt;</span></div><div class=\"line\">  &#123;% if theme.menu %&#125;</div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">ul</span> <span class=\"attr\">id</span>=<span class=\"string\">\"menu\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"menu\"</span>&gt;</span></div><div class=\"line\">      &#123;% for name, path in theme.menu %&#125;</div><div class=\"line\">        &#123;% set itemName = name.toLowerCase() %&#125;</div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">class</span>=<span class=\"string\">\"menu-item menu-item-&#123;&#123; itemName &#125;&#125;\"</span>&gt;</span></div><div class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"&#123;&#123; url_for(path) &#125;&#125;\"</span> <span class=\"attr\">rel</span>=<span class=\"string\">\"section\"</span>&gt;</span></div><div class=\"line\">            &#123;% if theme.menu_icons.enable %&#125;</div><div class=\"line\">              <span class=\"tag\">&lt;<span class=\"name\">i</span> <span class=\"attr\">class</span>=<span class=\"string\">\"menu-item-icon fa fa-fw fa-&#123;&#123;theme.menu_icons[itemName] | default('question-circle') | lower &#125;&#125;\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">i</span>&gt;</span> <span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span></div><div class=\"line\">            &#123;% endif %&#125;</div><div class=\"line\">            &#123;&#123; __('menu.' + itemName) &#125;&#125;</div><div class=\"line\">          <span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></div><div class=\"line\">      &#123;% endfor %&#125;</div><div class=\"line\"></div><div class=\"line\">      &#123;% if hasSearch %&#125;</div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">class</span>=<span class=\"string\">\"menu-item menu-item-search\"</span>&gt;</span></div><div class=\"line\">          &#123;% if theme.swiftype_key %&#125;</div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"#\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"st-search-show-outputs\"</span>&gt;</span></div><div class=\"line\">          &#123;% elseif config.search %&#125;</div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"#\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"popup-trigger\"</span>&gt;</span></div><div class=\"line\">            <span class=\"comment\">&lt;!-- 判断algolia --&gt;</span></div><div class=\"line\">          &#123;% elseif theme.algolia %&#125;</div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"#\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"popup-trigger\"</span>&gt;</span></div><div class=\"line\">          &#123;% endif %&#125;</div><div class=\"line\">            &#123;% if theme.menu_icons.enable %&#125;</div><div class=\"line\">              <span class=\"tag\">&lt;<span class=\"name\">i</span> <span class=\"attr\">class</span>=<span class=\"string\">\"menu-item-icon fa fa-search fa-fw\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">i</span>&gt;</span> <span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span></div><div class=\"line\">            &#123;% endif %&#125;</div><div class=\"line\">            &#123;&#123; __('menu.search') &#125;&#125;</div><div class=\"line\">          <span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></div><div class=\"line\">      &#123;% endif %&#125;</div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></div><div class=\"line\">  &#123;% endif %&#125;</div><div class=\"line\"></div><div class=\"line\">  &#123;% if hasSearch %&#125;</div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"site-search\"</span>&gt;</span></div><div class=\"line\">      &#123;% include 'search.swig' %&#125;</div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\">  &#123;% endif %&#125;</div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">nav</span>&gt;</span></div></pre></td></tr></table></figure></p>\n</blockquote>\n<p>5、 需要确保页面包含如下JS代码（可以单独建立一个.swig文件，然后在整体layout的swig文件中加入）<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div><div class=\"line\">106</div><div class=\"line\">107</div><div class=\"line\">108</div><div class=\"line\">109</div><div class=\"line\">110</div><div class=\"line\">111</div><div class=\"line\">112</div><div class=\"line\">113</div><div class=\"line\">114</div><div class=\"line\">115</div><div class=\"line\">116</div><div class=\"line\">117</div><div class=\"line\">118</div><div class=\"line\">119</div><div class=\"line\">120</div><div class=\"line\">121</div><div class=\"line\">122</div><div class=\"line\">123</div><div class=\"line\">124</div><div class=\"line\">125</div><div class=\"line\">126</div><div class=\"line\">127</div><div class=\"line\">128</div><div class=\"line\">129</div><div class=\"line\">130</div><div class=\"line\">131</div><div class=\"line\">132</div><div class=\"line\">133</div><div class=\"line\">134</div><div class=\"line\">135</div><div class=\"line\">136</div><div class=\"line\">137</div><div class=\"line\">138</div><div class=\"line\">139</div><div class=\"line\">140</div><div class=\"line\">141</div><div class=\"line\">142</div><div class=\"line\">143</div><div class=\"line\">144</div><div class=\"line\">145</div><div class=\"line\">146</div><div class=\"line\">147</div><div class=\"line\">148</div><div class=\"line\">149</div><div class=\"line\">150</div><div class=\"line\">151</div><div class=\"line\">152</div><div class=\"line\">153</div><div class=\"line\">154</div><div class=\"line\">155</div><div class=\"line\">156</div><div class=\"line\">157</div><div class=\"line\">158</div><div class=\"line\">159</div><div class=\"line\">160</div><div class=\"line\">161</div><div class=\"line\">162</div><div class=\"line\">163</div><div class=\"line\">164</div><div class=\"line\">165</div><div class=\"line\">166</div><div class=\"line\">167</div><div class=\"line\">168</div><div class=\"line\">169</div><div class=\"line\">170</div><div class=\"line\">171</div><div class=\"line\">172</div><div class=\"line\">173</div><div class=\"line\">174</div><div class=\"line\">175</div><div class=\"line\">176</div><div class=\"line\">177</div><div class=\"line\">178</div><div class=\"line\">179</div><div class=\"line\">180</div><div class=\"line\">181</div><div class=\"line\">182</div><div class=\"line\">183</div><div class=\"line\">184</div><div class=\"line\">185</div><div class=\"line\">186</div><div class=\"line\">187</div><div class=\"line\">188</div><div class=\"line\">189</div><div class=\"line\">190</div><div class=\"line\">191</div><div class=\"line\">192</div><div class=\"line\">193</div><div class=\"line\">194</div><div class=\"line\">195</div><div class=\"line\">196</div><div class=\"line\">197</div><div class=\"line\">198</div><div class=\"line\">199</div><div class=\"line\">200</div><div class=\"line\">201</div><div class=\"line\">202</div><div class=\"line\">203</div><div class=\"line\">204</div><div class=\"line\">205</div><div class=\"line\">206</div><div class=\"line\">207</div><div class=\"line\">208</div><div class=\"line\">209</div><div class=\"line\">210</div><div class=\"line\">211</div><div class=\"line\">212</div><div class=\"line\">213</div><div class=\"line\">214</div><div class=\"line\">215</div><div class=\"line\">216</div><div class=\"line\">217</div><div class=\"line\">218</div><div class=\"line\">219</div><div class=\"line\">220</div><div class=\"line\">221</div><div class=\"line\">222</div><div class=\"line\">223</div><div class=\"line\">224</div><div class=\"line\">225</div><div class=\"line\">226</div><div class=\"line\">227</div><div class=\"line\">228</div><div class=\"line\">229</div><div class=\"line\">230</div><div class=\"line\">231</div><div class=\"line\">232</div><div class=\"line\">233</div><div class=\"line\">234</div><div class=\"line\">235</div><div class=\"line\">236</div><div class=\"line\">237</div><div class=\"line\">238</div><div class=\"line\">239</div><div class=\"line\">240</div><div class=\"line\">241</div><div class=\"line\">242</div><div class=\"line\">243</div><div class=\"line\">244</div><div class=\"line\">245</div><div class=\"line\">246</div><div class=\"line\">247</div><div class=\"line\">248</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;script src=<span class=\"string\">\"http://cdn.bootcss.com/instantsearch.js/1.5.1/instantsearch.js\"</span>&gt;<span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span></div><div class=\"line\"></div><div class=\"line\">&lt;script type=<span class=\"string\">\"text/javascript\"</span>&gt;</div><div class=\"line\">$(<span class=\"built_in\">document</span>).ready(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">  <span class=\"keyword\">var</span> algoliaSettings = CONFIG.algolia;</div><div class=\"line\">  <span class=\"keyword\">var</span> isAlgoliaSettingsValid = algoliaSettings.applicationID &amp;&amp;</div><div class=\"line\">    algoliaSettings.apiKey &amp;&amp;</div><div class=\"line\">    algoliaSettings.indexName;</div><div class=\"line\"></div><div class=\"line\">  <span class=\"keyword\">if</span> (!isAlgoliaSettingsValid) &#123;</div><div class=\"line\">    <span class=\"built_in\">window</span>.console.error(<span class=\"string\">'Algolia Settings are invalid.'</span>);</div><div class=\"line\">    <span class=\"keyword\">return</span>;</div><div class=\"line\">  &#125;</div><div class=\"line\"></div><div class=\"line\">  <span class=\"keyword\">var</span> search = instantsearch(&#123;</div><div class=\"line\">    appId: algoliaSettings.applicationID,</div><div class=\"line\">    apiKey: algoliaSettings.apiKey,</div><div class=\"line\">    indexName: algoliaSettings.indexName,</div><div class=\"line\">    searchFunction: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">helper</span>) </span>&#123;</div><div class=\"line\">      <span class=\"keyword\">var</span> searchInput = $(<span class=\"string\">'#algolia-search-input'</span>).find(<span class=\"string\">'input'</span>);</div><div class=\"line\"></div><div class=\"line\">      <span class=\"keyword\">if</span> (searchInput.val()) &#123;</div><div class=\"line\">        helper.search();</div><div class=\"line\">      &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">  &#125;);</div><div class=\"line\"></div><div class=\"line\">  <span class=\"comment\">// Registering Widgets</span></div><div class=\"line\">  [</div><div class=\"line\">    instantsearch.widgets.searchBox(&#123;</div><div class=\"line\">      container: <span class=\"string\">'#algolia-search-input'</span>,</div><div class=\"line\">      placeholder: algoliaSettings.labels.input_placeholder</div><div class=\"line\">    &#125;),</div><div class=\"line\"></div><div class=\"line\">    instantsearch.widgets.hits(&#123;</div><div class=\"line\">      container: <span class=\"string\">'#algolia-hits'</span>,</div><div class=\"line\">      hitsPerPage: algoliaSettings.hits.per_page || <span class=\"number\">10</span>,</div><div class=\"line\">      templates: &#123;</div><div class=\"line\">        item: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">data</span>) </span>&#123;</div><div class=\"line\">          <span class=\"keyword\">return</span> (</div><div class=\"line\">            <span class=\"string\">'&lt;a href=\"'</span> + CONFIG.root + data.path + <span class=\"string\">'\" class=\"algolia-hit-item-link\"&gt;'</span> +</div><div class=\"line\">            data._highlightResult.title.value +</div><div class=\"line\">            <span class=\"string\">'&lt;/a&gt;'</span></div><div class=\"line\">          );</div><div class=\"line\">        &#125;,</div><div class=\"line\">        empty: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">data</span>) </span>&#123;</div><div class=\"line\">          <span class=\"keyword\">return</span> (</div><div class=\"line\">            <span class=\"string\">'&lt;div id=\"algolia-hits-empty\"&gt;'</span> +</div><div class=\"line\">            algoliaSettings.labels.hits_empty.replace(<span class=\"regexp\">/\\$\\&#123;query&#125;/</span>, data.query) +</div><div class=\"line\">            <span class=\"string\">'&lt;/div&gt;'</span></div><div class=\"line\">          );</div><div class=\"line\">        &#125;</div><div class=\"line\">      &#125;,</div><div class=\"line\">      cssClasses: &#123;</div><div class=\"line\">        item: <span class=\"string\">'algolia-hit-item'</span></div><div class=\"line\">      &#125;</div><div class=\"line\">    &#125;),</div><div class=\"line\"></div><div class=\"line\">    instantsearch.widgets.stats(&#123;</div><div class=\"line\">      container: <span class=\"string\">'#algolia-stats'</span>,</div><div class=\"line\">      templates: &#123;</div><div class=\"line\">        body: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">data</span>) </span>&#123;</div><div class=\"line\">          <span class=\"keyword\">var</span> stats = algoliaSettings.labels.hits_stats</div><div class=\"line\">            .replace(<span class=\"regexp\">/\\$\\&#123;hits&#125;/</span>, data.nbHits)</div><div class=\"line\">            .replace(<span class=\"regexp\">/\\$\\&#123;time&#125;/</span>, data.processingTimeMS);</div><div class=\"line\">          <span class=\"keyword\">return</span> (</div><div class=\"line\">            stats +</div><div class=\"line\">            <span class=\"string\">'&lt;span class=\"algolia-powered\"&gt;'</span> +</div><div class=\"line\">            <span class=\"string\">'  &lt;img src=\"'</span> + CONFIG.root + <span class=\"string\">'images/algolia_logo.svg\" alt=\"Algolia\" /&gt;'</span> +</div><div class=\"line\">            <span class=\"string\">'&lt;/span&gt;'</span> +</div><div class=\"line\">            <span class=\"string\">'&lt;hr /&gt;'</span></div><div class=\"line\">          );</div><div class=\"line\">        &#125;</div><div class=\"line\">      &#125;</div><div class=\"line\">    &#125;),</div><div class=\"line\"></div><div class=\"line\">    instantsearch.widgets.pagination(&#123;</div><div class=\"line\">      container: <span class=\"string\">'#algolia-pagination'</span>,</div><div class=\"line\">      scrollTo: <span class=\"literal\">false</span>,</div><div class=\"line\">      showFirstLast: <span class=\"literal\">false</span>,</div><div class=\"line\">      labels: &#123;</div><div class=\"line\">        first: <span class=\"string\">'&lt;i class=\"fa fa-angle-double-left\"&gt;&lt;/i&gt;'</span>,</div><div class=\"line\">        last: <span class=\"string\">'&lt;i class=\"fa fa-angle-double-right\"&gt;&lt;/i&gt;'</span>,</div><div class=\"line\">        previous: <span class=\"string\">'&lt;i class=\"fa fa-angle-left\"&gt;&lt;/i&gt;'</span>,</div><div class=\"line\">        next: <span class=\"string\">'&lt;i class=\"fa fa-angle-right\"&gt;&lt;/i&gt;'</span></div><div class=\"line\">      &#125;,</div><div class=\"line\">      cssClasses: &#123;</div><div class=\"line\">        root: <span class=\"string\">'pagination'</span>,</div><div class=\"line\">        item: <span class=\"string\">'pagination-item'</span>,</div><div class=\"line\">        link: <span class=\"string\">'page-number'</span>,</div><div class=\"line\">        active: <span class=\"string\">'current'</span>,</div><div class=\"line\">        disabled: <span class=\"string\">'disabled-item'</span></div><div class=\"line\">      &#125;</div><div class=\"line\">    &#125;)</div><div class=\"line\">  ].forEach(search.addWidget, search);</div><div class=\"line\"></div><div class=\"line\">  search.start();</div><div class=\"line\"></div><div class=\"line\">  $(<span class=\"string\">'.popup-trigger'</span>).on(<span class=\"string\">'click'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">e</span>) </span>&#123;</div><div class=\"line\">    e.stopPropagation();</div><div class=\"line\">    $(<span class=\"string\">'body'</span>).append(<span class=\"string\">'&lt;div class=\"popoverlay\"&gt;'</span>).css(<span class=\"string\">'overflow'</span>, <span class=\"string\">'hidden'</span>);</div><div class=\"line\">    $(<span class=\"string\">'.popup'</span>).toggle();</div><div class=\"line\">    $(<span class=\"string\">'#algolia-search-input'</span>).find(<span class=\"string\">'input'</span>).focus();</div><div class=\"line\">  &#125;);</div><div class=\"line\"></div><div class=\"line\">  $(<span class=\"string\">'.popup-btn-close'</span>).click(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">    $(<span class=\"string\">'.popup'</span>).hide();</div><div class=\"line\">    $(<span class=\"string\">'.popoverlay'</span>).remove();</div><div class=\"line\">    $(<span class=\"string\">'body'</span>).css(<span class=\"string\">'overflow'</span>, <span class=\"string\">''</span>);</div><div class=\"line\">  &#125;);</div><div class=\"line\"></div><div class=\"line\">&#125;);</div><div class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span></div><div class=\"line\"></div><div class=\"line\">&lt;script type=<span class=\"string\">\"text/javascript\"</span>&gt;</div><div class=\"line\">  $(<span class=\"built_in\">document</span>).ready(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">if</span> ( $(<span class=\"string\">'#local-search-input'</span>).size() === <span class=\"number\">0</span>) &#123;</div><div class=\"line\">      <span class=\"keyword\">return</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">// Popup Window;</span></div><div class=\"line\">    <span class=\"keyword\">var</span> isfetched = <span class=\"literal\">false</span>;</div><div class=\"line\">    <span class=\"comment\">// Search DB path;</span></div><div class=\"line\">    <span class=\"keyword\">var</span> search_path = <span class=\"string\">\"search.xml\"</span>;</div><div class=\"line\">    <span class=\"keyword\">if</span> (search_path.length == <span class=\"number\">0</span>) &#123;</div><div class=\"line\">      search_path = <span class=\"string\">\"search.xml\"</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">var</span> path = <span class=\"string\">\"/\"</span> + search_path;</div><div class=\"line\">    <span class=\"comment\">// monitor main search box;</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">proceedsearch</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">      $(<span class=\"string\">\"body\"</span>).append(<span class=\"string\">'&lt;div class=\"popoverlay\"&gt;'</span>).css(<span class=\"string\">'overflow'</span>, <span class=\"string\">'hidden'</span>);</div><div class=\"line\">      $(<span class=\"string\">'.popup'</span>).toggle();</div><div class=\"line\"></div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"comment\">// search function;</span></div><div class=\"line\">    <span class=\"keyword\">var</span> searchFunc = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">path, search_id, content_id</span>) </span>&#123;</div><div class=\"line\"><span class=\"meta\">      'use strict'</span>;</div><div class=\"line\">      $.ajax(&#123;</div><div class=\"line\">        url: path,</div><div class=\"line\">        dataType: <span class=\"string\">\"xml\"</span>,</div><div class=\"line\">        <span class=\"keyword\">async</span>: <span class=\"literal\">true</span>,</div><div class=\"line\">        success: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"> xmlResponse </span>) </span>&#123;</div><div class=\"line\">          <span class=\"comment\">// get the contents from search data</span></div><div class=\"line\">          isfetched = <span class=\"literal\">true</span>;</div><div class=\"line\">          $(<span class=\"string\">'.popup'</span>).detach().appendTo(<span class=\"string\">'.header-inner'</span>);</div><div class=\"line\">          <span class=\"keyword\">var</span> datas = $( <span class=\"string\">\"entry\"</span>, xmlResponse ).map(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">            <span class=\"keyword\">return</span> &#123;</div><div class=\"line\">              title: $( <span class=\"string\">\"title\"</span>, <span class=\"keyword\">this</span> ).text(),</div><div class=\"line\">              content: $(<span class=\"string\">\"content\"</span>,<span class=\"keyword\">this</span>).text(),</div><div class=\"line\">              url: $( <span class=\"string\">\"url\"</span> , <span class=\"keyword\">this</span>).text()</div><div class=\"line\">            &#125;;</div><div class=\"line\">          &#125;).get();</div><div class=\"line\">          <span class=\"keyword\">var</span> $input = <span class=\"built_in\">document</span>.getElementById(search_id);</div><div class=\"line\">          <span class=\"keyword\">var</span> $resultContent = <span class=\"built_in\">document</span>.getElementById(content_id);</div><div class=\"line\">          $input.addEventListener(<span class=\"string\">'input'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">            <span class=\"keyword\">var</span> matchcounts = <span class=\"number\">0</span>;</div><div class=\"line\">            <span class=\"keyword\">var</span> str=<span class=\"string\">'&lt;ul class=\\\"search-result-list\\\"&gt;'</span>;</div><div class=\"line\">            <span class=\"keyword\">var</span> keywords = <span class=\"keyword\">this</span>.value.trim().toLowerCase().split(<span class=\"regexp\">/[\\s\\-]+/</span>);</div><div class=\"line\">            $resultContent.innerHTML = <span class=\"string\">\"\"</span>;</div><div class=\"line\">            <span class=\"keyword\">if</span> (<span class=\"keyword\">this</span>.value.trim().length &gt; <span class=\"number\">1</span>) &#123;</div><div class=\"line\">              <span class=\"comment\">// perform local searching</span></div><div class=\"line\">              datas.forEach(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">data</span>) </span>&#123;</div><div class=\"line\">                <span class=\"keyword\">var</span> isMatch = <span class=\"literal\">true</span>;</div><div class=\"line\">                <span class=\"keyword\">var</span> content_index = [];</div><div class=\"line\">                <span class=\"keyword\">var</span> data_title = data.title.trim().toLowerCase();</div><div class=\"line\">                <span class=\"keyword\">var</span> data_content = data.content.trim().replace(<span class=\"regexp\">/&lt;[^&gt;]+&gt;/g</span>,<span class=\"string\">\"\"</span>).toLowerCase();</div><div class=\"line\">                <span class=\"keyword\">var</span> data_url = data.url;</div><div class=\"line\">                <span class=\"keyword\">var</span> index_title = <span class=\"number\">-1</span>;</div><div class=\"line\">                <span class=\"keyword\">var</span> index_content = <span class=\"number\">-1</span>;</div><div class=\"line\">                <span class=\"keyword\">var</span> first_occur = <span class=\"number\">-1</span>;</div><div class=\"line\">                <span class=\"comment\">// only match artiles with not empty titles and contents</span></div><div class=\"line\">                <span class=\"keyword\">if</span>(data_title != <span class=\"string\">''</span> &amp;&amp; data_content != <span class=\"string\">''</span>) &#123;</div><div class=\"line\">                  keywords.forEach(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">keyword, i</span>) </span>&#123;</div><div class=\"line\">                    index_title = data_title.indexOf(keyword);</div><div class=\"line\">                    index_content = data_content.indexOf(keyword);</div><div class=\"line\">                    <span class=\"keyword\">if</span>( index_title &lt; <span class=\"number\">0</span> &amp;&amp; index_content &lt; <span class=\"number\">0</span> )&#123;</div><div class=\"line\">                      isMatch = <span class=\"literal\">false</span>;</div><div class=\"line\">                    &#125; <span class=\"keyword\">else</span> &#123;</div><div class=\"line\">                      <span class=\"keyword\">if</span> (index_content &lt; <span class=\"number\">0</span>) &#123;</div><div class=\"line\">                        index_content = <span class=\"number\">0</span>;</div><div class=\"line\">                      &#125;</div><div class=\"line\">                      <span class=\"keyword\">if</span> (i == <span class=\"number\">0</span>) &#123;</div><div class=\"line\">                        first_occur = index_content;</div><div class=\"line\">                      &#125;</div><div class=\"line\">                    &#125;</div><div class=\"line\">                  &#125;);</div><div class=\"line\">                &#125;</div><div class=\"line\">                <span class=\"comment\">// show search results</span></div><div class=\"line\">                <span class=\"keyword\">if</span> (isMatch) &#123;</div><div class=\"line\">                  matchcounts += <span class=\"number\">1</span>;</div><div class=\"line\">                  str += <span class=\"string\">\"&lt;li&gt;&lt;a href='\"</span>+ data_url +<span class=\"string\">\"' class='search-result-title'&gt;\"</span>+ data_title +<span class=\"string\">\"&lt;/a&gt;\"</span>;</div><div class=\"line\">                  <span class=\"keyword\">var</span> content = data.content.trim().replace(<span class=\"regexp\">/&lt;[^&gt;]+&gt;/g</span>,<span class=\"string\">\"\"</span>);</div><div class=\"line\">                  <span class=\"keyword\">if</span> (first_occur &gt;= <span class=\"number\">0</span>) &#123;</div><div class=\"line\">                    <span class=\"comment\">// cut out 100 characters</span></div><div class=\"line\">                    <span class=\"keyword\">var</span> start = first_occur - <span class=\"number\">20</span>;</div><div class=\"line\">                    <span class=\"keyword\">var</span> end = first_occur + <span class=\"number\">80</span>;</div><div class=\"line\">                    <span class=\"keyword\">if</span>(start &lt; <span class=\"number\">0</span>)&#123;</div><div class=\"line\">                      start = <span class=\"number\">0</span>;</div><div class=\"line\">                    &#125;</div><div class=\"line\">                    <span class=\"keyword\">if</span>(start == <span class=\"number\">0</span>)&#123;</div><div class=\"line\">                      end = <span class=\"number\">50</span>;</div><div class=\"line\">                    &#125;</div><div class=\"line\">                    <span class=\"keyword\">if</span>(end &gt; content.length)&#123;</div><div class=\"line\">                      end = content.length;</div><div class=\"line\">                    &#125;</div><div class=\"line\">                    <span class=\"keyword\">var</span> match_content = content.substring(start, end);</div><div class=\"line\">                    <span class=\"comment\">// highlight all keywords</span></div><div class=\"line\">                    keywords.forEach(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">keyword</span>)</span>&#123;</div><div class=\"line\">                      <span class=\"keyword\">var</span> regS = <span class=\"keyword\">new</span> <span class=\"built_in\">RegExp</span>(keyword, <span class=\"string\">\"gi\"</span>);</div><div class=\"line\">                      match_content = match_content.replace(regS, <span class=\"string\">\"&lt;b class=\\\"search-keyword\\\"&gt;\"</span>+keyword+<span class=\"string\">\"&lt;/b&gt;\"</span>);</div><div class=\"line\">                    &#125;);</div><div class=\"line\"></div><div class=\"line\">                    str += <span class=\"string\">\"&lt;p class=\\\"search-result\\\"&gt;\"</span> + match_content +<span class=\"string\">\"...&lt;/p&gt;\"</span></div><div class=\"line\">                  &#125;</div><div class=\"line\">                  str += <span class=\"string\">\"&lt;/li&gt;\"</span>;</div><div class=\"line\">                &#125;</div><div class=\"line\">              &#125;)&#125;;</div><div class=\"line\">            str += <span class=\"string\">\"&lt;/ul&gt;\"</span>;</div><div class=\"line\">            <span class=\"keyword\">if</span> (matchcounts == <span class=\"number\">0</span>) &#123; str = <span class=\"string\">'&lt;div id=\"no-result\"&gt;&lt;i class=\"fa fa-frown-o fa-5x\" /&gt;&lt;/div&gt;'</span> &#125;</div><div class=\"line\">            <span class=\"keyword\">if</span> (keywords == <span class=\"string\">\"\"</span>) &#123; str = <span class=\"string\">'&lt;div id=\"no-result\"&gt;&lt;i class=\"fa fa-search fa-5x\" /&gt;&lt;/div&gt;'</span> &#125;</div><div class=\"line\">            $resultContent.innerHTML = str;</div><div class=\"line\">          &#125;);</div><div class=\"line\">          proceedsearch();</div><div class=\"line\">        &#125;</div><div class=\"line\">      &#125;);&#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">// handle and trigger popup window;</span></div><div class=\"line\">    $(<span class=\"string\">'.popup-trigger'</span>).mousedown(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">e</span>) </span>&#123;</div><div class=\"line\">      e.stopPropagation();</div><div class=\"line\">      <span class=\"keyword\">if</span> (isfetched == <span class=\"literal\">false</span>) &#123;</div><div class=\"line\">        searchFunc(path, <span class=\"string\">'local-search-input'</span>, <span class=\"string\">'local-search-result'</span>);</div><div class=\"line\">      &#125; <span class=\"keyword\">else</span> &#123;</div><div class=\"line\">        proceedsearch();</div><div class=\"line\">      &#125;;</div><div class=\"line\"></div><div class=\"line\">    &#125;);</div><div class=\"line\"></div><div class=\"line\">    $(<span class=\"string\">'.popup-btn-close'</span>).click(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">e</span>)</span>&#123;</div><div class=\"line\">      $(<span class=\"string\">'.popup'</span>).hide();</div><div class=\"line\">      $(<span class=\"string\">\".popoverlay\"</span>).remove();</div><div class=\"line\">      $(<span class=\"string\">'body'</span>).css(<span class=\"string\">'overflow'</span>, <span class=\"string\">''</span>);</div><div class=\"line\">    &#125;);</div><div class=\"line\">    $(<span class=\"string\">'.popup'</span>).click(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">e</span>)</span>&#123;</div><div class=\"line\">      e.stopPropagation();</div><div class=\"line\">    &#125;);</div><div class=\"line\">  &#125;);</div><div class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span></div></pre></td></tr></table></figure></p>\n<blockquote>\n<p>Next中可以新建一个js文件，<code>myalgolia.js</code>存放上述代码，然后存入主题的<code>source/js/src</code>中，然后修改主题的<code>layout/_layout.swig</code>,添加如下内容：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">&#123;% if theme.algolia %&#125;</div><div class=\"line\">  &#123;% include &apos;_scripts/algolia.swig&apos; %&#125;</div><div class=\"line\">&#123;% endif %&#125;</div></pre></td></tr></table></figure></p>\n<p>然后在<code>layout/_scripts</code>中新建<code>algolia.swig</code>，内容如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">&#123;%</div><div class=\"line\">  set js_algolia = [</div><div class=\"line\">    &apos;src/myalgolia.js&apos;</div><div class=\"line\">  ]</div><div class=\"line\">%&#125;</div><div class=\"line\"></div><div class=\"line\">&#123;% for common in js_algolia %&#125;</div><div class=\"line\">  &lt;script type=&quot;text/javascript&quot; src=&quot;&#123;&#123; url_for(theme.js) &#125;&#125;/&#123;&#123; common &#125;&#125;?v=&#123;&#123; theme.version &#125;&#125;&quot;&gt;&lt;/script&gt;</div><div class=\"line\">&#123;% endfor %&#125;</div><div class=\"line\">  &lt;script src=&quot;http://cdn.bootcss.com/instantsearch.js/1.5.1/instantsearch.js&quot;&gt;&lt;/script&gt;</div></pre></td></tr></table></figure></p>\n</blockquote>\n<p>6、确保要搜索页包含如下CSS代码（可以单独建立一个.styl文件，然后在整体css的styl文件中加入，注意确保生成正确，必要时可以执行hexo clean）<br><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div><div class=\"line\">106</div><div class=\"line\">107</div><div class=\"line\">108</div><div class=\"line\">109</div><div class=\"line\">110</div><div class=\"line\">111</div><div class=\"line\">112</div><div class=\"line\">113</div><div class=\"line\">114</div><div class=\"line\">115</div><div class=\"line\">116</div><div class=\"line\">117</div><div class=\"line\">118</div><div class=\"line\">119</div><div class=\"line\">120</div><div class=\"line\">121</div><div class=\"line\">122</div><div class=\"line\">123</div><div class=\"line\">124</div><div class=\"line\">125</div><div class=\"line\">126</div><div class=\"line\">127</div><div class=\"line\">128</div><div class=\"line\">129</div><div class=\"line\">130</div><div class=\"line\">131</div><div class=\"line\">132</div><div class=\"line\">133</div><div class=\"line\">134</div><div class=\"line\">135</div><div class=\"line\">136</div><div class=\"line\">137</div><div class=\"line\">138</div><div class=\"line\">139</div><div class=\"line\">140</div><div class=\"line\">141</div><div class=\"line\">142</div><div class=\"line\">143</div><div class=\"line\">144</div><div class=\"line\">145</div><div class=\"line\">146</div><div class=\"line\">147</div><div class=\"line\">148</div><div class=\"line\">149</div><div class=\"line\">150</div><div class=\"line\">151</div><div class=\"line\">152</div><div class=\"line\">153</div><div class=\"line\">154</div><div class=\"line\">155</div><div class=\"line\">156</div><div class=\"line\">157</div><div class=\"line\">158</div><div class=\"line\">159</div><div class=\"line\">160</div><div class=\"line\">161</div><div class=\"line\">162</div><div class=\"line\">163</div><div class=\"line\">164</div><div class=\"line\">165</div><div class=\"line\">166</div><div class=\"line\">167</div><div class=\"line\">168</div><div class=\"line\">169</div><div class=\"line\">170</div><div class=\"line\">171</div><div class=\"line\">172</div><div class=\"line\">173</div><div class=\"line\">174</div><div class=\"line\">175</div><div class=\"line\">176</div><div class=\"line\">177</div><div class=\"line\">178</div><div class=\"line\">179</div><div class=\"line\">180</div><div class=\"line\">181</div><div class=\"line\">182</div><div class=\"line\">183</div><div class=\"line\">184</div><div class=\"line\">185</div><div class=\"line\">186</div><div class=\"line\">187</div><div class=\"line\">188</div><div class=\"line\">189</div><div class=\"line\">190</div><div class=\"line\">191</div><div class=\"line\">192</div><div class=\"line\">193</div><div class=\"line\">194</div><div class=\"line\">195</div><div class=\"line\">196</div><div class=\"line\">197</div><div class=\"line\">198</div><div class=\"line\">199</div><div class=\"line\">200</div><div class=\"line\">201</div><div class=\"line\">202</div><div class=\"line\">203</div><div class=\"line\">204</div><div class=\"line\">205</div><div class=\"line\">206</div><div class=\"line\">207</div><div class=\"line\">208</div><div class=\"line\">209</div><div class=\"line\">210</div><div class=\"line\">211</div><div class=\"line\">212</div><div class=\"line\">213</div><div class=\"line\">214</div><div class=\"line\">215</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-tag\">ul</span><span class=\"selector-class\">.search-result-list</span> &#123;</div><div class=\"line\">  <span class=\"attribute\">padding-left</span>: <span class=\"number\">0px</span>;</div><div class=\"line\">  <span class=\"attribute\">margin</span>: <span class=\"number\">0px</span> <span class=\"number\">5px</span> <span class=\"number\">0px</span> <span class=\"number\">8px</span>;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"selector-tag\">p</span><span class=\"selector-class\">.search-result</span> &#123;</div><div class=\"line\">  <span class=\"attribute\">border-bottom</span>: <span class=\"number\">1px</span> dashed <span class=\"number\">#ccc</span>;</div><div class=\"line\">  <span class=\"attribute\">padding</span>: <span class=\"number\">5px</span> <span class=\"number\">0</span>;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"selector-tag\">a</span><span class=\"selector-class\">.search-result-title</span> &#123;</div><div class=\"line\">  <span class=\"attribute\">font-weight</span>: bold;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"selector-tag\">a</span><span class=\"selector-class\">.search-result</span> &#123;</div><div class=\"line\">  <span class=\"attribute\">border-bottom</span>: transparent;</div><div class=\"line\">  <span class=\"attribute\">display</span>: block;</div><div class=\"line\">  <span class=\"attribute\">white-space</span>: nowrap;</div><div class=\"line\">  <span class=\"attribute\">overflow</span>: hidden;</div><div class=\"line\">  <span class=\"attribute\">text-overflow</span>: ellipsis;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"selector-class\">.search-keyword</span> &#123;</div><div class=\"line\">  <span class=\"attribute\">border-bottom</span>: <span class=\"number\">1px</span> dashed <span class=\"number\">#4088b8</span>;</div><div class=\"line\">  <span class=\"attribute\">font-weight</span>: bold;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"selector-id\">#local-search-result</span> &#123;</div><div class=\"line\">  <span class=\"attribute\">height</span>: <span class=\"number\">90%</span>;</div><div class=\"line\">  <span class=\"attribute\">overflow</span>: auto;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"selector-class\">.popup</span> &#123;</div><div class=\"line\">  <span class=\"attribute\">display</span>: none;</div><div class=\"line\">  <span class=\"attribute\">position</span>: fixed;</div><div class=\"line\">  <span class=\"attribute\">top</span>: <span class=\"number\">10%</span>;</div><div class=\"line\">  <span class=\"attribute\">left</span>: <span class=\"number\">50%</span>;</div><div class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">700px</span>;</div><div class=\"line\">  <span class=\"attribute\">height</span>: <span class=\"number\">80%</span>;</div><div class=\"line\">  <span class=\"attribute\">margin-left</span>: -<span class=\"number\">350px</span>;</div><div class=\"line\">  <span class=\"attribute\">padding</span>: <span class=\"number\">3px</span> <span class=\"number\">0</span> <span class=\"number\">0</span> <span class=\"number\">10px</span>;</div><div class=\"line\">  <span class=\"attribute\">background</span>: <span class=\"number\">#fff</span>;</div><div class=\"line\">  <span class=\"attribute\">color</span>: <span class=\"number\">#333</span>;</div><div class=\"line\">  <span class=\"attribute\">z-index</span>: <span class=\"number\">9999</span>;</div><div class=\"line\">  <span class=\"attribute\">border-radius</span>: <span class=\"number\">5px</span>;</div><div class=\"line\">&#125;</div><div class=\"line\">@<span class=\"keyword\">media</span> (max-width: <span class=\"number\">767px</span>) &#123;</div><div class=\"line\">  <span class=\"selector-class\">.popup</span> &#123;</div><div class=\"line\">    <span class=\"attribute\">padding</span>: <span class=\"number\">3px</span>;</div><div class=\"line\">    <span class=\"attribute\">top</span>: <span class=\"number\">0</span>;</div><div class=\"line\">    <span class=\"attribute\">left</span>: <span class=\"number\">0</span>;</div><div class=\"line\">    <span class=\"attribute\">margin</span>: <span class=\"number\">0</span>;</div><div class=\"line\">    <span class=\"attribute\">width</span>: <span class=\"number\">100%</span>;</div><div class=\"line\">    <span class=\"attribute\">height</span>: <span class=\"number\">100%</span>;</div><div class=\"line\">    <span class=\"attribute\">border-radius</span>: <span class=\"number\">0px</span>;</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"selector-class\">.popoverlay</span> &#123;</div><div class=\"line\">  <span class=\"attribute\">position</span>: fixed;</div><div class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">100%</span>;</div><div class=\"line\">  <span class=\"attribute\">height</span>: <span class=\"number\">100%</span>;</div><div class=\"line\">  <span class=\"attribute\">top</span>: <span class=\"number\">0px</span>;</div><div class=\"line\">  <span class=\"attribute\">left</span>: <span class=\"number\">0px</span>;</div><div class=\"line\">  <span class=\"attribute\">z-index</span>: <span class=\"number\">2080</span>;</div><div class=\"line\">  <span class=\"attribute\">background-color</span>: <span class=\"built_in\">rgba</span>(0,0,0,0.3);</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"selector-id\">#local-search-input</span> &#123;</div><div class=\"line\">  <span class=\"attribute\">margin-bottom</span>: <span class=\"number\">10px</span>;</div><div class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">50%</span>;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"selector-class\">.popup-btn-close</span> &#123;</div><div class=\"line\">  <span class=\"attribute\">position</span>: absolute;</div><div class=\"line\">  <span class=\"attribute\">top</span>: <span class=\"number\">6px</span>;</div><div class=\"line\">  <span class=\"attribute\">right</span>: <span class=\"number\">14px</span>;</div><div class=\"line\">  <span class=\"attribute\">color</span>: <span class=\"number\">#4ebd79</span>;</div><div class=\"line\">  <span class=\"attribute\">font-size</span>: <span class=\"number\">14px</span>;</div><div class=\"line\">  <span class=\"attribute\">font-weight</span>: bold;</div><div class=\"line\">  <span class=\"attribute\">text-transform</span>: uppercase;</div><div class=\"line\">  <span class=\"attribute\">cursor</span>: pointer;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"selector-id\">#no-result</span> &#123;</div><div class=\"line\">  <span class=\"attribute\">position</span>: absolute;</div><div class=\"line\">  <span class=\"attribute\">left</span>: <span class=\"number\">44%</span>;</div><div class=\"line\">  <span class=\"attribute\">top</span>: <span class=\"number\">42%</span>;</div><div class=\"line\">  <span class=\"attribute\">color</span>: <span class=\"number\">#ccc</span>;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"selector-class\">.busuanzi-count</span><span class=\"selector-pseudo\">:before</span> &#123;</div><div class=\"line\">  <span class=\"attribute\">content</span>: <span class=\"string\">\" \"</span>;</div><div class=\"line\">  <span class=\"attribute\">float</span>: left;</div><div class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">260px</span>;</div><div class=\"line\">  <span class=\"attribute\">min-height</span>: <span class=\"number\">25px</span>;</div><div class=\"line\">&#125;</div><div class=\"line\">@<span class=\"keyword\">media</span> (min-width: <span class=\"number\">768px</span>) and (max-width: <span class=\"number\">991px</span>) &#123;</div><div class=\"line\">  <span class=\"selector-class\">.busuanzi-count</span> &#123;</div><div class=\"line\">    <span class=\"attribute\">width</span>: auto;</div><div class=\"line\">  &#125;</div><div class=\"line\">  <span class=\"selector-class\">.busuanzi-count</span><span class=\"selector-pseudo\">:before</span> &#123;</div><div class=\"line\">    <span class=\"attribute\">display</span>: none;</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div><div class=\"line\">@<span class=\"keyword\">media</span> (max-width: <span class=\"number\">767px</span>) &#123;</div><div class=\"line\">  <span class=\"selector-class\">.busuanzi-count</span> &#123;</div><div class=\"line\">    <span class=\"attribute\">width</span>: auto;</div><div class=\"line\">  &#125;</div><div class=\"line\">  <span class=\"selector-class\">.busuanzi-count</span><span class=\"selector-pseudo\">:before</span> &#123;</div><div class=\"line\">    <span class=\"attribute\">display</span>: none;</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"selector-class\">.site-uv</span>,</div><div class=\"line\"><span class=\"selector-class\">.site-pv</span>,</div><div class=\"line\"><span class=\"selector-class\">.page-pv</span> &#123;</div><div class=\"line\">  <span class=\"attribute\">display</span>: inline-block;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"selector-class\">.site-uv</span> <span class=\"selector-class\">.busuanzi-value</span>,</div><div class=\"line\"><span class=\"selector-class\">.site-pv</span> <span class=\"selector-class\">.busuanzi-value</span>,</div><div class=\"line\"><span class=\"selector-class\">.page-pv</span> <span class=\"selector-class\">.busuanzi-value</span> &#123;</div><div class=\"line\">  <span class=\"attribute\">margin</span>: <span class=\"number\">0</span> <span class=\"number\">5px</span>;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"selector-class\">.site-uv</span> &#123;</div><div class=\"line\">  <span class=\"attribute\">margin-right</span>: <span class=\"number\">10px</span>;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"selector-class\">.site-uv</span><span class=\"selector-pseudo\">::after</span> &#123;</div><div class=\"line\">  <span class=\"attribute\">content</span>: <span class=\"string\">\"|\"</span>;</div><div class=\"line\">  <span class=\"attribute\">padding-left</span>: <span class=\"number\">10px</span>;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"selector-class\">.algolia-popup</span> &#123;</div><div class=\"line\">  <span class=\"attribute\">overflow</span>: hidden;</div><div class=\"line\">  <span class=\"attribute\">padding</span>: <span class=\"number\">0</span>;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"selector-class\">.algolia-popup</span> <span class=\"selector-class\">.popup-btn-close</span> &#123;</div><div class=\"line\">  <span class=\"attribute\">padding-left</span>: <span class=\"number\">15px</span>;</div><div class=\"line\">  <span class=\"attribute\">border-left</span>: <span class=\"number\">1px</span> solid <span class=\"number\">#eee</span>;</div><div class=\"line\">  <span class=\"attribute\">top</span>: <span class=\"number\">10px</span>;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"selector-class\">.algolia-popup</span> <span class=\"selector-class\">.popup-btn-close</span> <span class=\"selector-class\">.fa</span> &#123;</div><div class=\"line\">  <span class=\"attribute\">color</span>: <span class=\"number\">#999</span>;</div><div class=\"line\">  <span class=\"attribute\">font-size</span>: <span class=\"number\">18px</span>;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"selector-class\">.algolia-popup</span> <span class=\"selector-class\">.popup-btn-close</span><span class=\"selector-pseudo\">:hover</span> <span class=\"selector-class\">.fa</span> &#123;</div><div class=\"line\">  <span class=\"attribute\">color</span>: <span class=\"number\">#222</span>;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"selector-class\">.algolia-search</span> &#123;</div><div class=\"line\">  <span class=\"attribute\">padding</span>: <span class=\"number\">10px</span> <span class=\"number\">15px</span> <span class=\"number\">5px</span>;</div><div class=\"line\">  <span class=\"attribute\">max-height</span>: <span class=\"number\">50px</span>;</div><div class=\"line\">  <span class=\"attribute\">border-bottom</span>: <span class=\"number\">1px</span> solid <span class=\"number\">#ccc</span>;</div><div class=\"line\">  <span class=\"attribute\">background</span>: <span class=\"number\">#f5f5f5</span>;</div><div class=\"line\">  <span class=\"attribute\">border-top-left-radius</span>: <span class=\"number\">5px</span>;</div><div class=\"line\">  <span class=\"attribute\">border-top-right-radius</span>: <span class=\"number\">5px</span>;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"selector-class\">.algolia-search-input-icon</span> &#123;</div><div class=\"line\">  <span class=\"attribute\">display</span>: inline-block;</div><div class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">20px</span>;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"selector-class\">.algolia-search-input-icon</span> <span class=\"selector-class\">.fa</span> &#123;</div><div class=\"line\">  <span class=\"attribute\">font-size</span>: <span class=\"number\">18px</span>;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"selector-class\">.algolia-search-input</span> &#123;</div><div class=\"line\">  <span class=\"attribute\">display</span>: inline-block;</div><div class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"built_in\">calc</span>(90% - 20px);</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"selector-class\">.algolia-search-input</span> <span class=\"selector-tag\">input</span> &#123;</div><div class=\"line\">  <span class=\"attribute\">padding</span>: <span class=\"number\">5px</span> <span class=\"number\">0</span>;</div><div class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">100%</span>;</div><div class=\"line\">  <span class=\"attribute\">outline</span>: none;</div><div class=\"line\">  <span class=\"attribute\">border</span>: none;</div><div class=\"line\">  <span class=\"attribute\">background</span>: transparent;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"selector-class\">.algolia-powered</span> &#123;</div><div class=\"line\">  <span class=\"attribute\">float</span>: right;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"selector-class\">.algolia-powered</span> <span class=\"selector-tag\">img</span> &#123;</div><div class=\"line\">  <span class=\"attribute\">display</span>: inline-block;</div><div class=\"line\">  <span class=\"attribute\">height</span>: <span class=\"number\">18px</span>;</div><div class=\"line\">  <span class=\"attribute\">vertical-align</span>: middle;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"selector-class\">.algolia-results</span> &#123;</div><div class=\"line\">  <span class=\"attribute\">position</span>: relative;</div><div class=\"line\">  <span class=\"attribute\">overflow</span>: auto;</div><div class=\"line\">  <span class=\"attribute\">padding</span>: <span class=\"number\">10px</span> <span class=\"number\">30px</span>;</div><div class=\"line\">  <span class=\"attribute\">height</span>: <span class=\"built_in\">calc</span>(100% - 50px);</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"selector-class\">.algolia-results</span> <span class=\"selector-tag\">hr</span> &#123;</div><div class=\"line\">  <span class=\"attribute\">margin</span>: <span class=\"number\">10px</span> <span class=\"number\">0</span>;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"selector-class\">.algolia-results</span> <span class=\"selector-class\">.highlight</span> &#123;</div><div class=\"line\">  <span class=\"attribute\">font-style</span>: normal;</div><div class=\"line\">  <span class=\"attribute\">margin</span>: <span class=\"number\">0</span>;</div><div class=\"line\">  <span class=\"attribute\">padding</span>: <span class=\"number\">0</span> <span class=\"number\">2px</span>;</div><div class=\"line\">  <span class=\"attribute\">font-size</span>: inherit;</div><div class=\"line\">  <span class=\"attribute\">color</span>: <span class=\"number\">#f00</span>;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"selector-class\">.algolia-hits</span> &#123;</div><div class=\"line\">  <span class=\"attribute\">margin-top</span>: <span class=\"number\">20px</span>;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"selector-class\">.algolia-hit-item</span> &#123;</div><div class=\"line\">  <span class=\"attribute\">margin</span>: <span class=\"number\">15px</span> <span class=\"number\">0</span>;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"selector-class\">.algolia-hit-item-link</span> &#123;</div><div class=\"line\">  <span class=\"attribute\">display</span>: block;</div><div class=\"line\">  <span class=\"attribute\">border-bottom</span>: <span class=\"number\">1px</span> dashed <span class=\"number\">#ccc</span>;</div><div class=\"line\">  <span class=\"attribute\">transition-duration</span>: <span class=\"number\">0.2s</span>;</div><div class=\"line\">  <span class=\"attribute\">transition-timing-function</span>: ease-in-out;</div><div class=\"line\">  <span class=\"attribute\">transition-delay</span>: <span class=\"number\">0s</span>;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"selector-class\">.algolia-pagination</span> <span class=\"selector-class\">.pagination</span> &#123;</div><div class=\"line\">  <span class=\"attribute\">margin-top</span>: <span class=\"number\">40px</span>;</div><div class=\"line\">  <span class=\"attribute\">border-top</span>: none;</div><div class=\"line\">  <span class=\"attribute\">padding</span>: <span class=\"number\">0</span>;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"selector-class\">.algolia-pagination</span> <span class=\"selector-class\">.pagination-item</span> &#123;</div><div class=\"line\">  <span class=\"attribute\">display</span>: inline-block;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"selector-class\">.algolia-pagination</span> <span class=\"selector-class\">.page-number</span> &#123;</div><div class=\"line\">  <span class=\"attribute\">border-top</span>: none;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"selector-class\">.algolia-pagination</span> <span class=\"selector-class\">.page-number</span><span class=\"selector-pseudo\">:hover</span> &#123;</div><div class=\"line\">  <span class=\"attribute\">border-bottom</span>: <span class=\"number\">1px</span> solid <span class=\"number\">#222</span>;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"selector-class\">.algolia-pagination</span> <span class=\"selector-class\">.disabled-item</span> &#123;</div><div class=\"line\">  <span class=\"attribute\">visibility</span>: hidden;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>7、将如下图片放入主题的<code>source/images</code>下<br><img src=\"/20160606/hexo-next-use-algolia/algolia_logo.svg\" alt=\"algolia_logo.svg\" title=\"\"></p>\n<h2 id=\"大功告成-，可以参考本站搜索功能。\"><a href=\"#大功告成-，可以参考本站搜索功能。\" class=\"headerlink\" title=\"大功告成~，可以参考本站搜索功能。\"></a>大功告成~，可以参考本站搜索功能。</h2><p>ps：最后再说一句，algolia最开始会给你14天的高级试用功能，结束之后会停止工作，你需要手动切换到免费模式下才能继续。</p>\n<blockquote>\n<p>写作时参考<a href=\"http://kuwoku.com/2016/05/30/Hexo%E9%9B%86%E6%88%90Algolia%E6%90%9C%E7%B4%A2%E6%8F%92%E4%BB%B6/\">《Hexo集成Algolia搜索插件》</a></p>\n</blockquote>"},{"title":"移动端safari上jQuery绑定click事件的bug","date":"2016-05-31T16:49:36.000Z","_content":"\n之前网站适配pc端的时候发现，在手机端safari上click事件各种没反应，查了一圈看来是有这么个bug。\nhtml如下：\n```html\n<div id=\"main\">\n    <ul>\n        <li>1</li>\n        <li>2</li>\n        <li>3</li>\n    </ul>\n</div>\n```\njs代码如下：\n```javascript\n$('body').on('click','li',function(){\n  console.log('blink!');\n});\n```\n\n如上代码在iOS的safari上毫无反应。\n<!-- more -->\n几个解决方法：\n>* 不将`on`作用于`document`或者`body`上，作用在更小的dom节点上，比如，如下代码是生效的：\n```javascript\n$('#main').on('click','li',function(){\n  console.log('blink!');\n});\n```\n>* 也可以额外在节点上再绑一次事件（添加到代码中）：\n```javascript\n$('body').children().click(function(){\n  //此处什么也不做\n});\n```\n>* 还有不太优雅的方法，可以再元素标签上添加一个`onclick=''`。\n>* 在和用户体验不冲突的情况下也可以用CSS解决，给需要响应`click`事件的标签添加`cursor:pointer;`\n","source":"_posts/safari-jquery-on-click-bug.md","raw":"---\ntitle: 移动端safari上jQuery绑定click事件的bug\ncategories: Javascript\ndate: 2016-06-01 00:49:36\ntags:\n- iOS\n- jQuery\n- Safari\n---\n\n之前网站适配pc端的时候发现，在手机端safari上click事件各种没反应，查了一圈看来是有这么个bug。\nhtml如下：\n```html\n<div id=\"main\">\n    <ul>\n        <li>1</li>\n        <li>2</li>\n        <li>3</li>\n    </ul>\n</div>\n```\njs代码如下：\n```javascript\n$('body').on('click','li',function(){\n  console.log('blink!');\n});\n```\n\n如上代码在iOS的safari上毫无反应。\n<!-- more -->\n几个解决方法：\n>* 不将`on`作用于`document`或者`body`上，作用在更小的dom节点上，比如，如下代码是生效的：\n```javascript\n$('#main').on('click','li',function(){\n  console.log('blink!');\n});\n```\n>* 也可以额外在节点上再绑一次事件（添加到代码中）：\n```javascript\n$('body').children().click(function(){\n  //此处什么也不做\n});\n```\n>* 还有不太优雅的方法，可以再元素标签上添加一个`onclick=''`。\n>* 在和用户体验不冲突的情况下也可以用CSS解决，给需要响应`click`事件的标签添加`cursor:pointer;`\n","slug":"safari-jquery-on-click-bug","published":1,"updated":"2016-06-06T15:28:14.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirvtn4ov000mplnygaoh2xu2","content":"<p>之前网站适配pc端的时候发现，在手机端safari上click事件各种没反应，查了一圈看来是有这么个bug。<br>html如下：<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"main\"</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">ul</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>1<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>2<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>3<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div></pre></td></tr></table></figure></p>\n<p>js代码如下：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">$(<span class=\"string\">'body'</span>).on(<span class=\"string\">'click'</span>,<span class=\"string\">'li'</span>,<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">'blink!'</span>);</div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure></p>\n<p>如上代码在iOS的safari上毫无反应。<br><a id=\"more\"></a><br>几个解决方法：</p>\n<blockquote>\n<ul>\n<li><p>不将<code>on</code>作用于<code>document</code>或者<code>body</code>上，作用在更小的dom节点上，比如，如下代码是生效的：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">$(<span class=\"string\">'#main'</span>).on(<span class=\"string\">'click'</span>,<span class=\"string\">'li'</span>,<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">'blink!'</span>);</div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure>\n</li>\n<li><p>也可以额外在节点上再绑一次事件（添加到代码中）：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">$(<span class=\"string\">'body'</span>).children().click(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">  <span class=\"comment\">//此处什么也不做</span></div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure>\n</li>\n<li><p>还有不太优雅的方法，可以再元素标签上添加一个<code>onclick=&#39;&#39;</code>。</p>\n</li>\n<li>在和用户体验不冲突的情况下也可以用CSS解决，给需要响应<code>click</code>事件的标签添加<code>cursor:pointer;</code></li>\n</ul>\n</blockquote>\n","excerpt":"<p>之前网站适配pc端的时候发现，在手机端safari上click事件各种没反应，查了一圈看来是有这么个bug。<br>html如下：<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"main\"</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">ul</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>1<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>2<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>3<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div></pre></td></tr></table></figure></p>\n<p>js代码如下：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">$(<span class=\"string\">'body'</span>).on(<span class=\"string\">'click'</span>,<span class=\"string\">'li'</span>,<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">'blink!'</span>);</div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure></p>\n<p>如上代码在iOS的safari上毫无反应。<br>","more":"<br>几个解决方法：</p>\n<blockquote>\n<ul>\n<li><p>不将<code>on</code>作用于<code>document</code>或者<code>body</code>上，作用在更小的dom节点上，比如，如下代码是生效的：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">$(<span class=\"string\">'#main'</span>).on(<span class=\"string\">'click'</span>,<span class=\"string\">'li'</span>,<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">'blink!'</span>);</div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure>\n</li>\n<li><p>也可以额外在节点上再绑一次事件（添加到代码中）：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">$(<span class=\"string\">'body'</span>).children().click(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">  <span class=\"comment\">//此处什么也不做</span></div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure>\n</li>\n<li><p>还有不太优雅的方法，可以再元素标签上添加一个<code>onclick=&#39;&#39;</code>。</p>\n</li>\n<li>在和用户体验不冲突的情况下也可以用CSS解决，给需要响应<code>click</code>事件的标签添加<code>cursor:pointer;</code></li>\n</ul>\n</blockquote>"},{"title":"homestead安装配置","date":"2016-06-30T03:54:07.000Z","_content":"\n最近所有的事情都在Vagrant的homestead里完成了，以后再也不用没完没了自己折腾服务器环境了。\n<!-- more -->\n\n首先我默认Vagrant已经安装好了。\n\n## 安装Homestead\n\n[homestead官方文档](https://laravel.com/docs/5.2/homestead)在此。\n\n速成配置如下:\n\n首先需要用composer安装Homestead\n```\ncomposer require laravel/homestead --dev`\n```\n\n然后用`make`命令生成`Vagrantfile`和`Homestead.yaml`\n\nMac/Linux:\n```\nphp vendor/bin/homestead make\n```\n\nWindows:\n```\nvendor\\\\bin\\\\homestead make\n```\n\n## 配置\n在`Homestead.yaml`中的folders是本地和服务器的文件夹映射：\n```\nfolders:\n    - map: ~/Code\n      to: /home/vagrant/Code\n```\nsites是用来配置nginx目录的,需要将此地址加入本地的`hosts`中，也可以同时挂多个项目:\n```\nsites:\n    - map: homestead.app\n      to: /home/vagrant/Code/some-project/public\n    - map: test.app\n      to: /home/vagrant/Code/test\n```\n\n## 启动\n```\nVagrant up\n```\n进入VM中(启动时已经将你的密钥复制进了虚拟机，所以登陆也不用密码)：\n```\nvagrant ssh\n```\n\n## 结论\n\n现在你可以用这个环境快速开发了，homestead里边php，nodejs，nginx，mysql，radis等等东西都已经妥善安装好了，随便你胡来，弄坏了也太容易恢复了，一身轻松。更详细的教程参见上边提到的[官方文档](https://laravel.com/docs/5.2/homestead)。\n\n## 小问题补充\n\n**No input file specified**\n\n有时候配置完了从浏览器访问会提示`No input file specified`。这意思就是VM上的server没有找到`index.php`文件。\n首先你先ssh到homestead中查看文件夹的映射和地址是否正确。如果这些没问题的话，退出虚拟机运行一下下边的命令没准能解决问题：\n```\nvagrant provision\n```\n","source":"_posts/vagrant-problems.md","raw":"---\ntitle: homestead安装配置\ncategories: 服务器上那点事儿\ndate: 2016-06-30 11:54:07\ntags:\n- Vagrant\n- No input file specified\n- homestead\n---\n\n最近所有的事情都在Vagrant的homestead里完成了，以后再也不用没完没了自己折腾服务器环境了。\n<!-- more -->\n\n首先我默认Vagrant已经安装好了。\n\n## 安装Homestead\n\n[homestead官方文档](https://laravel.com/docs/5.2/homestead)在此。\n\n速成配置如下:\n\n首先需要用composer安装Homestead\n```\ncomposer require laravel/homestead --dev`\n```\n\n然后用`make`命令生成`Vagrantfile`和`Homestead.yaml`\n\nMac/Linux:\n```\nphp vendor/bin/homestead make\n```\n\nWindows:\n```\nvendor\\\\bin\\\\homestead make\n```\n\n## 配置\n在`Homestead.yaml`中的folders是本地和服务器的文件夹映射：\n```\nfolders:\n    - map: ~/Code\n      to: /home/vagrant/Code\n```\nsites是用来配置nginx目录的,需要将此地址加入本地的`hosts`中，也可以同时挂多个项目:\n```\nsites:\n    - map: homestead.app\n      to: /home/vagrant/Code/some-project/public\n    - map: test.app\n      to: /home/vagrant/Code/test\n```\n\n## 启动\n```\nVagrant up\n```\n进入VM中(启动时已经将你的密钥复制进了虚拟机，所以登陆也不用密码)：\n```\nvagrant ssh\n```\n\n## 结论\n\n现在你可以用这个环境快速开发了，homestead里边php，nodejs，nginx，mysql，radis等等东西都已经妥善安装好了，随便你胡来，弄坏了也太容易恢复了，一身轻松。更详细的教程参见上边提到的[官方文档](https://laravel.com/docs/5.2/homestead)。\n\n## 小问题补充\n\n**No input file specified**\n\n有时候配置完了从浏览器访问会提示`No input file specified`。这意思就是VM上的server没有找到`index.php`文件。\n首先你先ssh到homestead中查看文件夹的映射和地址是否正确。如果这些没问题的话，退出虚拟机运行一下下边的命令没准能解决问题：\n```\nvagrant provision\n```\n","slug":"vagrant-problems","published":1,"updated":"2016-07-11T07:58:09.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirvtn4ow000pplnyke0xzf63","content":"<p>最近所有的事情都在Vagrant的homestead里完成了，以后再也不用没完没了自己折腾服务器环境了。<br><a id=\"more\"></a></p>\n<p>首先我默认Vagrant已经安装好了。</p>\n<h2 id=\"安装Homestead\"><a href=\"#安装Homestead\" class=\"headerlink\" title=\"安装Homestead\"></a>安装Homestead</h2><p><a href=\"https://laravel.com/docs/5.2/homestead\" target=\"_blank\" rel=\"external\">homestead官方文档</a>在此。</p>\n<p>速成配置如下:</p>\n<p>首先需要用composer安装Homestead<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">composer require laravel/homestead --dev`</div></pre></td></tr></table></figure></p>\n<p>然后用<code>make</code>命令生成<code>Vagrantfile</code>和<code>Homestead.yaml</code></p>\n<p>Mac/Linux:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">php vendor/bin/homestead make</div></pre></td></tr></table></figure></p>\n<p>Windows:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">vendor\\\\bin\\\\homestead make</div></pre></td></tr></table></figure></p>\n<h2 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h2><p>在<code>Homestead.yaml</code>中的folders是本地和服务器的文件夹映射：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">folders:</div><div class=\"line\">    - map: ~/Code</div><div class=\"line\">      to: /home/vagrant/Code</div></pre></td></tr></table></figure></p>\n<p>sites是用来配置nginx目录的,需要将此地址加入本地的<code>hosts</code>中，也可以同时挂多个项目:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">sites:</div><div class=\"line\">    - map: homestead.app</div><div class=\"line\">      to: /home/vagrant/Code/some-project/public</div><div class=\"line\">    - map: test.app</div><div class=\"line\">      to: /home/vagrant/Code/test</div></pre></td></tr></table></figure></p>\n<h2 id=\"启动\"><a href=\"#启动\" class=\"headerlink\" title=\"启动\"></a>启动</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">Vagrant up</div></pre></td></tr></table></figure>\n<p>进入VM中(启动时已经将你的密钥复制进了虚拟机，所以登陆也不用密码)：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">vagrant ssh</div></pre></td></tr></table></figure></p>\n<h2 id=\"结论\"><a href=\"#结论\" class=\"headerlink\" title=\"结论\"></a>结论</h2><p>现在你可以用这个环境快速开发了，homestead里边php，nodejs，nginx，mysql，radis等等东西都已经妥善安装好了，随便你胡来，弄坏了也太容易恢复了，一身轻松。更详细的教程参见上边提到的<a href=\"https://laravel.com/docs/5.2/homestead\" target=\"_blank\" rel=\"external\">官方文档</a>。</p>\n<h2 id=\"小问题补充\"><a href=\"#小问题补充\" class=\"headerlink\" title=\"小问题补充\"></a>小问题补充</h2><p><strong>No input file specified</strong></p>\n<p>有时候配置完了从浏览器访问会提示<code>No input file specified</code>。这意思就是VM上的server没有找到<code>index.php</code>文件。<br>首先你先ssh到homestead中查看文件夹的映射和地址是否正确。如果这些没问题的话，退出虚拟机运行一下下边的命令没准能解决问题：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">vagrant provision</div></pre></td></tr></table></figure></p>\n","excerpt":"<p>最近所有的事情都在Vagrant的homestead里完成了，以后再也不用没完没了自己折腾服务器环境了。<br>","more":"</p>\n<p>首先我默认Vagrant已经安装好了。</p>\n<h2 id=\"安装Homestead\"><a href=\"#安装Homestead\" class=\"headerlink\" title=\"安装Homestead\"></a>安装Homestead</h2><p><a href=\"https://laravel.com/docs/5.2/homestead\">homestead官方文档</a>在此。</p>\n<p>速成配置如下:</p>\n<p>首先需要用composer安装Homestead<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">composer require laravel/homestead --dev`</div></pre></td></tr></table></figure></p>\n<p>然后用<code>make</code>命令生成<code>Vagrantfile</code>和<code>Homestead.yaml</code></p>\n<p>Mac/Linux:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">php vendor/bin/homestead make</div></pre></td></tr></table></figure></p>\n<p>Windows:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">vendor\\\\bin\\\\homestead make</div></pre></td></tr></table></figure></p>\n<h2 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h2><p>在<code>Homestead.yaml</code>中的folders是本地和服务器的文件夹映射：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">folders:</div><div class=\"line\">    - map: ~/Code</div><div class=\"line\">      to: /home/vagrant/Code</div></pre></td></tr></table></figure></p>\n<p>sites是用来配置nginx目录的,需要将此地址加入本地的<code>hosts</code>中，也可以同时挂多个项目:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">sites:</div><div class=\"line\">    - map: homestead.app</div><div class=\"line\">      to: /home/vagrant/Code/some-project/public</div><div class=\"line\">    - map: test.app</div><div class=\"line\">      to: /home/vagrant/Code/test</div></pre></td></tr></table></figure></p>\n<h2 id=\"启动\"><a href=\"#启动\" class=\"headerlink\" title=\"启动\"></a>启动</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">Vagrant up</div></pre></td></tr></table></figure>\n<p>进入VM中(启动时已经将你的密钥复制进了虚拟机，所以登陆也不用密码)：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">vagrant ssh</div></pre></td></tr></table></figure></p>\n<h2 id=\"结论\"><a href=\"#结论\" class=\"headerlink\" title=\"结论\"></a>结论</h2><p>现在你可以用这个环境快速开发了，homestead里边php，nodejs，nginx，mysql，radis等等东西都已经妥善安装好了，随便你胡来，弄坏了也太容易恢复了，一身轻松。更详细的教程参见上边提到的<a href=\"https://laravel.com/docs/5.2/homestead\">官方文档</a>。</p>\n<h2 id=\"小问题补充\"><a href=\"#小问题补充\" class=\"headerlink\" title=\"小问题补充\"></a>小问题补充</h2><p><strong>No input file specified</strong></p>\n<p>有时候配置完了从浏览器访问会提示<code>No input file specified</code>。这意思就是VM上的server没有找到<code>index.php</code>文件。<br>首先你先ssh到homestead中查看文件夹的映射和地址是否正确。如果这些没问题的话，退出虚拟机运行一下下边的命令没准能解决问题：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">vagrant provision</div></pre></td></tr></table></figure></p>"}],"PostAsset":[{"_id":"source/_posts/hexo-next-use-algolia/algolia-api-keys.png","post":"cirvtn4ot000iplnynpe2f70p","slug":"algolia-api-keys.png","modified":1,"renderable":1},{"_id":"source/_posts/hexo-next-use-algolia/algolia-index.png","post":"cirvtn4ot000iplnynpe2f70p","slug":"algolia-index.png","modified":1,"renderable":1},{"_id":"source/_posts/hexo-next-use-algolia/algolia_logo.svg","post":"cirvtn4ot000iplnynpe2f70p","slug":"algolia_logo.svg","modified":1,"renderable":1},{"_id":"source/_posts/git-hooks/deploy_changes.png","post":"cirvtn4ok0008plny5cfl3xez","slug":"deploy_changes.png","modified":1,"renderable":1},{"_id":"source/_posts/git-hooks/devel_commit.png","post":"cirvtn4ok0008plny5cfl3xez","slug":"devel_commit.png","modified":1,"renderable":1},{"_id":"source/_posts/git-hooks/first_deploy.png","post":"cirvtn4ok0008plny5cfl3xez","slug":"first_deploy.png","modified":1,"renderable":1},{"_id":"source/_posts/git-hooks/new_prod.png","post":"cirvtn4ok0008plny5cfl3xez","slug":"new_prod.png","modified":1,"renderable":1},{"_id":"source/_posts/git-hooks/pushed_prod.png","post":"cirvtn4ok0008plny5cfl3xez","slug":"pushed_prod.png","modified":1,"renderable":1}],"PostCategory":[{"post_id":"cirvtn4o50000plnycj2uhuig","category_id":"cirvtn4oe0004plnyqbaqv5w5","_id":"cirvtn4oo000bplny2nf0grwb"},{"post_id":"cirvtn4ob0002plnyyz8wrb5t","category_id":"cirvtn4ol0009plnye83h5oqr","_id":"cirvtn4ou000jplny5wfnetqm"},{"post_id":"cirvtn4oo000cplny8ijyp88d","category_id":"cirvtn4ol0009plnye83h5oqr","_id":"cirvtn4ov000nplny9q1ekpan"},{"post_id":"cirvtn4of0005plnysza297wg","category_id":"cirvtn4oq000eplny6yofmofh","_id":"cirvtn4ox000qplny6lx96veq"},{"post_id":"cirvtn4ov000mplnygaoh2xu2","category_id":"cirvtn4ol0009plnye83h5oqr","_id":"cirvtn4oz000tplnyqpklhdjc"},{"post_id":"cirvtn4oi0006plnyhqlo45de","category_id":"cirvtn4ou000lplny3pdzsasi","_id":"cirvtn4oz000uplnyo7f048rg"},{"post_id":"cirvtn4ok0008plny5cfl3xez","category_id":"cirvtn4oy000splnytzkfvwzi","_id":"cirvtn4p0000xplnyji7b2dxt"},{"post_id":"cirvtn4om000aplnydu2r4409","category_id":"cirvtn4p0000wplnyq8q1wivy","_id":"cirvtn4p20010plnyja332jjs"},{"post_id":"cirvtn4os000gplnyyfx1zkq0","category_id":"cirvtn4p0000wplnyq8q1wivy","_id":"cirvtn4p20013plnyt19xy9f8"},{"post_id":"cirvtn4ot000iplnynpe2f70p","category_id":"cirvtn4p20011plnynq9fh8qu","_id":"cirvtn4p30017plnydc1g9w51"},{"post_id":"cirvtn4ow000pplnyke0xzf63","category_id":"cirvtn4oy000splnytzkfvwzi","_id":"cirvtn4p3001bplnyzhzrevs7"}],"PostTag":[{"post_id":"cirvtn4o50000plnycj2uhuig","tag_id":"cirvtn4od0003plnyxkshy3ot","_id":"cirvtn4os000fplny7rtaseps"},{"post_id":"cirvtn4o50000plnycj2uhuig","tag_id":"cirvtn4oj0007plny3427u72j","_id":"cirvtn4ot000hplnyljqg8uoi"},{"post_id":"cirvtn4ob0002plnyyz8wrb5t","tag_id":"cirvtn4oq000dplnybdmuy0n9","_id":"cirvtn4ow000oplnyn7qlu0yy"},{"post_id":"cirvtn4of0005plnysza297wg","tag_id":"cirvtn4ou000kplnyfaujgv9g","_id":"cirvtn4p30016plny824ledcf"},{"post_id":"cirvtn4of0005plnysza297wg","tag_id":"cirvtn4oy000rplnyr1me416r","_id":"cirvtn4p30018plnynyaj8cye"},{"post_id":"cirvtn4of0005plnysza297wg","tag_id":"cirvtn4oz000vplny6i7n8b5r","_id":"cirvtn4p3001aplnyc9uy5rl2"},{"post_id":"cirvtn4of0005plnysza297wg","tag_id":"cirvtn4p0000yplnyj07qr784","_id":"cirvtn4p3001cplnyzkohwcww"},{"post_id":"cirvtn4of0005plnysza297wg","tag_id":"cirvtn4p20012plnyso62j8r4","_id":"cirvtn4p4001eplnykt841oag"},{"post_id":"cirvtn4oi0006plnyhqlo45de","tag_id":"cirvtn4p30015plnyjj8emm7b","_id":"cirvtn4p4001fplnypnfhjwid"},{"post_id":"cirvtn4oi0006plnyhqlo45de","tag_id":"cirvtn4p30019plnywblgvy0n","_id":"cirvtn4p4001hplnyjtx4znhh"},{"post_id":"cirvtn4ok0008plny5cfl3xez","tag_id":"cirvtn4p3001dplnyj0fx0e4p","_id":"cirvtn4p4001jplnycohxymak"},{"post_id":"cirvtn4ok0008plny5cfl3xez","tag_id":"cirvtn4p4001gplny749c3rtp","_id":"cirvtn4p4001kplnyge4z9wq7"},{"post_id":"cirvtn4om000aplnydu2r4409","tag_id":"cirvtn4p4001iplny0424o5xm","_id":"cirvtn4p6001rplnyofb1ui7b"},{"post_id":"cirvtn4om000aplnydu2r4409","tag_id":"cirvtn4p5001lplnyo0k1lfu8","_id":"cirvtn4p6001splny79bom5ph"},{"post_id":"cirvtn4om000aplnydu2r4409","tag_id":"cirvtn4p5001mplnyyjshkz0p","_id":"cirvtn4p8001uplnyu7p148e5"},{"post_id":"cirvtn4om000aplnydu2r4409","tag_id":"cirvtn4p5001nplnywztq011r","_id":"cirvtn4p8001vplny9vstx2tb"},{"post_id":"cirvtn4om000aplnydu2r4409","tag_id":"cirvtn4p5001oplnytzyhcwc8","_id":"cirvtn4pa001xplny7cxbjfb6"},{"post_id":"cirvtn4om000aplnydu2r4409","tag_id":"cirvtn4p6001pplnyya00c20z","_id":"cirvtn4pa001yplnypgc273at"},{"post_id":"cirvtn4oo000cplny8ijyp88d","tag_id":"cirvtn4p6001qplny8cs1bwt9","_id":"cirvtn4pb0021plnyiw8ild5h"},{"post_id":"cirvtn4oo000cplny8ijyp88d","tag_id":"cirvtn4p7001tplnyollzor82","_id":"cirvtn4pb0022plnyi68ctoyb"},{"post_id":"cirvtn4oo000cplny8ijyp88d","tag_id":"cirvtn4pa001wplnygibnb9jz","_id":"cirvtn4pc0024plnya8fhfcjj"},{"post_id":"cirvtn4oo000cplny8ijyp88d","tag_id":"cirvtn4pa001zplnyxwe80dwo","_id":"cirvtn4pc0025plnytgjvb7o6"},{"post_id":"cirvtn4os000gplnyyfx1zkq0","tag_id":"cirvtn4pb0020plnynyltk7li","_id":"cirvtn4pd0028plny0r1l6ulb"},{"post_id":"cirvtn4os000gplnyyfx1zkq0","tag_id":"cirvtn4pc0023plny99iu22rt","_id":"cirvtn4pd0029plnyfd1sy1c5"},{"post_id":"cirvtn4os000gplnyyfx1zkq0","tag_id":"cirvtn4pc0026plnyw4cu7svr","_id":"cirvtn4pd002bplny3tj19rj7"},{"post_id":"cirvtn4ot000iplnynpe2f70p","tag_id":"cirvtn4pd0027plnypty7dyst","_id":"cirvtn4pe002eplnydc6zktqo"},{"post_id":"cirvtn4ot000iplnynpe2f70p","tag_id":"cirvtn4pd002aplnyupe4f0tq","_id":"cirvtn4pe002fplnyaqtofdzu"},{"post_id":"cirvtn4ot000iplnynpe2f70p","tag_id":"cirvtn4pd002cplnyhnuqvm9t","_id":"cirvtn4pe002hplnygz5uq3h8"},{"post_id":"cirvtn4ov000mplnygaoh2xu2","tag_id":"cirvtn4pd002dplnyt5smrtgq","_id":"cirvtn4pg002kplnyt4wme17i"},{"post_id":"cirvtn4ov000mplnygaoh2xu2","tag_id":"cirvtn4pe002gplny6ibpysuj","_id":"cirvtn4pg002lplnylywl3fer"},{"post_id":"cirvtn4ov000mplnygaoh2xu2","tag_id":"cirvtn4pf002iplny2awxhhan","_id":"cirvtn4pg002nplny0obpgdqe"},{"post_id":"cirvtn4ow000pplnyke0xzf63","tag_id":"cirvtn4pf002jplnyra8av9mn","_id":"cirvtn4ph002pplny1p4797wj"},{"post_id":"cirvtn4ow000pplnyke0xzf63","tag_id":"cirvtn4pg002mplnyw3f885wy","_id":"cirvtn4ph002qplnya8dyxi6d"},{"post_id":"cirvtn4ow000pplnyke0xzf63","tag_id":"cirvtn4pg002oplny8kz7jc0p","_id":"cirvtn4ph002rplny85cqbqvs"}],"Tag":[{"name":"MAC","_id":"cirvtn4od0003plnyxkshy3ot"},{"name":"图片处理","_id":"cirvtn4oj0007plny3427u72j"},{"name":"数组去重","_id":"cirvtn4oq000dplnybdmuy0n9"},{"name":"Node","_id":"cirvtn4ou000kplnyfaujgv9g"},{"name":"Electron","_id":"cirvtn4oy000rplnyr1me416r"},{"name":"install","_id":"cirvtn4oz000vplny6i7n8b5r"},{"name":"安装","_id":"cirvtn4p0000yplnyj07qr784"},{"name":"nightmare","_id":"cirvtn4p20012plnyso62j8r4"},{"name":"gitHub","_id":"cirvtn4p30015plnyjj8emm7b"},{"name":"收藏","_id":"cirvtn4p30019plnywblgvy0n"},{"name":"Git","_id":"cirvtn4p3001dplnyj0fx0e4p"},{"name":"hook","_id":"cirvtn4p4001gplny749c3rtp"},{"name":"Medium","_id":"cirvtn4p4001iplny0424o5xm"},{"name":"CSS","_id":"cirvtn4p5001lplnyo0k1lfu8"},{"name":"笔记","_id":"cirvtn4p5001mplnyyjshkz0p"},{"name":"less","_id":"cirvtn4p5001nplnywztq011r"},{"name":"编码","_id":"cirvtn4p5001oplnytzyhcwc8"},{"name":"指南","_id":"cirvtn4p6001pplnyya00c20z"},{"name":"javascript","_id":"cirvtn4p6001qplny8cs1bwt9"},{"name":"callback","_id":"cirvtn4p7001tplnyollzor82"},{"name":"bind","_id":"cirvtn4pa001wplnygibnb9jz"},{"name":"回调","_id":"cirvtn4pa001zplnyxwe80dwo"},{"name":"响应式","_id":"cirvtn4pb0020plnynyltk7li"},{"name":"高度","_id":"cirvtn4pc0023plny99iu22rt"},{"name":"相等","_id":"cirvtn4pc0026plnyw4cu7svr"},{"name":"Algolia","_id":"cirvtn4pd0027plnypty7dyst"},{"name":"Next","_id":"cirvtn4pd002aplnyupe4f0tq"},{"name":"swiftype","_id":"cirvtn4pd002cplnyhnuqvm9t"},{"name":"iOS","_id":"cirvtn4pd002dplnyt5smrtgq"},{"name":"jQuery","_id":"cirvtn4pe002gplny6ibpysuj"},{"name":"Safari","_id":"cirvtn4pf002iplny2awxhhan"},{"name":"Vagrant","_id":"cirvtn4pf002jplnyra8av9mn"},{"name":"No input file specified","_id":"cirvtn4pg002mplnyw3f885wy"},{"name":"homestead","_id":"cirvtn4pg002oplny8kz7jc0p"}]}}